{"version":3,"file":"static/js/853.5aa0c432.chunk.js","mappings":"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","sources":["views/admin/reports/components/reportChart.js","views/admin/reports/index.js"],"sourcesContent":["import { Box, Grid, Radio, RadioGroup, Select, Stack } from '@chakra-ui/react';\r\nimport Card from \"components/card/Card\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { postApi } from \"services/api\";\r\n\r\n\r\nconst ReportChart = (props) => {\r\n    const { dashboard } = props;\r\n    const [reportChart, setReportChart] = useState({})\r\n    const [startDate, setStartDate] = useState(new Date(new Date() - 14 * 24 * 60 * 60 * 1000));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [select, setSelect] = useState('all');\r\n    const [selection, setSelection] = useState('day');\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n\r\n    const featchChart = async () => {\r\n        const data = {\r\n            startDate: moment(startDate).format('YYYY-MM-DD'),\r\n            endDate: moment(endDate).format('YYYY-MM-DD'),\r\n            filter: selection\r\n        }\r\n        let result = await postApi(user.role === 'superAdmin' ? 'api/reporting/index' : `api/reporting/index?sender=${user._id}`, data);\r\n        if (result && result.status === 200) {\r\n            setReportChart(result?.data)\r\n        }\r\n    }\r\n\r\n    const options = {\r\n        chart: {\r\n            id: 'line-chart',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Count',\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        }\r\n    };\r\n\r\n    const series = Object.keys(reportChart).map((key) => {\r\n        const dataSet = reportChart[key][0];\r\n        let seriesData = [];\r\n\r\n        if (dataSet?.Emails) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.Emails?.map((item) => ({ x: item?.date, y: item?.Emailcount }))\r\n            );\r\n        }\r\n        if (dataSet?.Calls) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.Calls?.map((item) => ({ x: item?.date, y: item?.Callcount }))\r\n            );\r\n        }\r\n        if (dataSet?.TextMsges) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.TextMsges?.map((item) => ({ x: item?.date, y: item?.TextSentCount }))\r\n            );\r\n        }\r\n\r\n        return {\r\n            name: key,\r\n            data: seriesData,\r\n        };\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        featchChart()\r\n    }, [startDate, endDate, selection])\r\n\r\n\r\n    const selectedSeries = select === 'all' ? series : series?.filter(series => series?.name === select);\r\n    return (\r\n        <Card>\r\n            {!dashboard &&\r\n                <Box display='flex' alignItems='center' flexWrap={'wrap'} justifyContent='space-between' mb={4}>\r\n                    <Select value={select} onChange={(e) => setSelect(e.target.value)} size='sm' width={{ base: '100%', md: '15%' }} mb={{ base: 3, md: 'auto' }}>\r\n                        <option value='all'>All</option>\r\n                        <option value='EmailDetails'>Email</option>\r\n                        <option value='outboundcall'>Call</option>\r\n                    </Select>\r\n                    <Box width={{ base: '100%', md: 'auto' }} flexWrap={'wrap'} justifyContent={'left'} mb={{ base: 3, md: 'auto' }} display='flex'>\r\n                        <ReactDatePicker selected={startDate} onChange={(date) => setStartDate(date)} className='datePickerBorder' />\r\n                        <ReactDatePicker selected={endDate} onChange={(date) => setEndDate(date)} className='datePickerBorder' />\r\n                    </Box>\r\n                    <Box width={{ base: '100%', md: 'auto' }} display={'flex'} justifyContent={'right'} mb={{ base: 3, md: 'auto' }}>\r\n                        <RadioGroup onChange={(e) => setSelection(e)} value={selection}>\r\n                            <Stack direction='row'>\r\n                                <Radio value='day' >Daily</Radio>\r\n                                <Radio value='week'>Weekly</Radio>\r\n                            </Stack>\r\n                        </RadioGroup>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n            <div id=\"chart\">\r\n                <div id=\"chart-timeline\">\r\n                    {selectedSeries && (\r\n                        <ReactApexChart\r\n                            options={options}\r\n                            series={selectedSeries}\r\n                            type='area'\r\n                            height={300}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReportChart\r\n","import Card from \"components/card/Card\";\r\nimport { useEffect, useState } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { getApi } from 'services/api';\r\nimport ReportChart from './components/reportChart';\r\nimport CommonCheckTable from \"components/checkTable/checktable\";\r\n\r\nconst Report = () => {\r\n    const title = 'Reports'\r\n    const [data, setData] = useState([])\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([]);\r\n    // const [columns, setColumns] = useState([]);\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const tableColumns = [\r\n        { Header: 'Email Sent', accessor: 'emailsent' },\r\n        { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\r\n    ];\r\n\r\n\r\n    const fetchCustomDataFields = async () => {\r\n        const tempTableColumns = [\r\n            { Header: '#', accessor: '_id' },\r\n            { Header: 'Name', accessor: 'firstName' },\r\n            { Header: 'Email Sent', accessor: 'emailsent' },\r\n            { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\r\n\r\n        ];\r\n        setSelectedColumns(JSON.parse(JSON.stringify(tempTableColumns)));\r\n    }\r\n\r\n\r\n\r\n    if (user.role === 'superAdmin') {\r\n        tableColumns.unshift({\r\n            Header: \"#\",\r\n            accessor: \"_id\",\r\n            isSortable: false,\r\n            width: 10\r\n        }, { Header: 'Name', accessor: 'firstName' })\r\n    }\r\n\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let result = await getApi(user.role === 'superAdmin' ? 'api/reporting' : `api/reporting?_id=${user._id}`);\r\n        if (result && result.status === 200) {\r\n            setData(result?.data)\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    const [columns, setColumns] = useState([...tableColumns]);\r\n    const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n    useEffect(() => {\r\n        fetchData()\r\n        fetchCustomDataFields()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ReportChart />\r\n            <Card mt={4}>\r\n                <CommonCheckTable\r\n                    title={title}\r\n                    isLoding={isLoding}\r\n                    columnData={tableColumns}\r\n                    dataColumn={dataColumn}\r\n                    allData={data}\r\n                    tableData={data}\r\n                    AdvanceSearch={false}\r\n                    tableCustomFields={[]}\r\n                    deleteMany={true}\r\n                    selectedValues={selectedValues}\r\n                    setSelectedValues={setSelectedValues}\r\n                    selectedColumns={selectedColumns}\r\n                    setSelectedColumns={setSelectedColumns}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report\r\n"],"names":["props","dashboard","reportChart","setReportChart","useState","startDate","setStartDate","Date","endDate","setEndDate","select","setSelect","selection","setSelection","user","JSON","parse","localStorage","getItem","series","Object","keys","map","key","dataSet","seriesData","_dataSet$Emails","_dataSet$Calls","_dataSet$TextMsges","Emails","concat","item","x","date","y","Emailcount","Calls","Callcount","TextMsges","TextSentCount","name","data","useEffect","async","moment","format","filter","result","postApi","role","_id","status","featchChart","selectedSeries","_jsxs","Card","children","Box","display","alignItems","flexWrap","justifyContent","mb","Select","value","onChange","e","target","size","width","base","md","_jsx","ReactDatePicker","selected","className","RadioGroup","Stack","direction","Radio","id","ReactApexChart","options","chart","xaxis","type","yaxis","title","text","dataLabels","enabled","height","Report","setData","isLoding","setIsLoding","selectedValues","setSelectedValues","tableColumns","Header","accessor","unshift","isSortable","columns","setColumns","selectedColumns","setSelectedColumns","dataColumn","find","colum","getApi","fetchData","stringify","fetchCustomDataFields","ReportChart","mt","CommonCheckTable","columnData","allData","tableData","AdvanceSearch","tableCustomFields","deleteMany"],"sourceRoot":""}