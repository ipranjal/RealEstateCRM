{"version":3,"file":"static/js/629.d6491f6a.chunk.js","mappings":"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","sources":["views/admin/emailHistory/View.js"],"sourcesContent":["import { Box, Button, Flex, Grid, GridItem, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport { getApi } from \"services/api\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const size = \"lg\";\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/email/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const [contactAccess, leadAccess] = HasAccess(['Contacts', 'Leads'])\r\n    \r\n    return (\r\n        <>\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                                                <Heading size=\"md\" mb={3}>\r\n                                                    Email View page\r\n                                                </Heading>\r\n                                                <Link to={\"/email\"}>\r\n                                                    <Button mb={\"5px\"} size=\"sm\" leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                                        Back\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Box>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                            <Text>{data?.senderEmail ? data?.senderEmail : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\r\n                                            <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create From </Text>\r\n                                            {data?.createBy ?\r\n                                                <Link to={`/contactView/${data?.createBy}`}>\r\n                                                    <Text color={contactAccess?.view ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                                </Link> : <Link to={`/leadView/${data?.createByLead}`}>\r\n                                                    <Text color={leadAccess?.view ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: leadAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: leadAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                                </Link>\r\n                                            }\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\r\n                                            <Text>{data?.createBy ? \"Contact\" : data?.createByLead && \"Lead\"}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\r\n                                            <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\r\n                                            <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Time stamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('lll ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Subject </Text>\r\n                                            <Text>{data?.subject ? data?.subject : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Message </Text>\r\n                                            <Text>{data?.message ? data?.message : ' - '}</Text>\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n                </>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["View","param","useParams","data","setData","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","JSON","parse","localStorage","getItem","useEffect","async","response","getApi","id","fetchData","contactAccess","leadAccess","HasAccess","_jsx","_Fragment","children","Flex","justifyContent","alignItems","width","Spinner","Grid","templateColumns","gap","GridItem","colSpan","base","Card","_jsxs","Box","display","Heading","size","mb","Link","to","Button","leftIcon","IoIosArrowBack","variant","HSeparator","md","Text","fontSize","fontWeight","color","senderEmail","recipient","createBy","concat","view","sx","textDecoration","createByName","createByLead","startDate","moment","format","endDate","timestamp","toNow","subject","message"],"sourceRoot":""}