{"version":3,"file":"static/js/958.ec97aec3.chunk.js","mappings":"wSAcA,MA4IA,EA5IaA,KAET,MAAMC,GAAQC,EAAAA,EAAAA,MAEPC,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GACvCG,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACtCC,EAAUC,IAAeT,EAAAA,EAAAA,WAAS,GACnCU,GAAWC,EAAAA,EAAAA,MACXC,GAASf,EAAAA,EAAAA,MASfgB,EAAAA,EAAAA,YAAU,KANQC,WACdL,GAAY,GACZ,IAAIM,QAAiBC,EAAAA,EAAAA,IAAO,oBAAqBpB,EAAMqB,IACvDlB,EAAgB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUjB,MAClBW,GAAY,EAAM,EAGlBS,EAAW,GACZ,IAEH,MAgBOC,EAAYC,EAAeC,IAAcC,EAAAA,EAAAA,GAAU,CAAC,WAAY,WAAY,UAEnF,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACKjB,GACGkB,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUC,MAAM,OAAML,UAC9DC,EAAAA,EAAAA,KAACK,EAAAA,EAAO,OACFR,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAENC,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAET,UAE1CC,EAAAA,EAAAA,KAACS,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAIZ,UAC3BC,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAb,UACDF,EAAAA,EAAAA,MAACS,EAAAA,KAAI,CAACC,gBAAiB,CAAEI,KAAM,OAASH,IAAK,EAAET,SAAA,EAC3CC,EAAAA,EAAAA,KAACS,EAAAA,SAAQ,CAACC,QAAS,EAAEX,UACjBF,EAAAA,EAAAA,MAACgB,EAAAA,IAAG,CAAAd,SAAA,EACAF,EAAAA,EAAAA,MAACI,EAAAA,KAAI,CAACC,eAAgB,gBAAgBH,SAAA,EAClCC,EAAAA,EAAAA,KAACc,EAAAA,QAAO,CAACC,KAAK,KAAKC,GAAI,EAAEjB,SAAC,uBAG1BC,EAAAA,EAAAA,KAACiB,EAAAA,OAAM,CAACC,UAAUlB,EAAAA,EAAAA,KAACmB,EAAAA,IAAc,IAAKJ,KAAK,KAAKK,QAAQ,QAAQC,QAASA,IAAMrC,GAAU,GAAGe,SAAC,aAIjGC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,UAInBzB,EAAAA,EAAAA,MAACS,EAAAA,KAAI,CAACC,gBAAiB,iBAAkBC,IAAK,EAAET,SAAA,EAC5CF,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,cAC/DC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAAAzB,SAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAMwD,OAAa,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,OAAS,YAEzC/B,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,kBAC/DC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAAAzB,SAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAMyD,cAAoB,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,cAAgB,YAGvDhC,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,gBAC/DF,EAAAA,EAAAA,MAAC2B,EAAAA,KAAI,CAAAzB,SAAA,CAAC,IAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAM0D,SAAWC,IAAW,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,UAAUE,OAAO,sBAAwB,MAAM,KAAO,OAAJ5D,QAAI,IAAJA,GAAAA,EAAM0D,SAAWC,IAAW,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,UAAUG,QAAU,MAAM,WAEpJpC,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,iBAC/DF,EAAAA,EAAAA,MAAC2B,EAAAA,KAAI,CAAAzB,SAAA,CAAC,IAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAM8D,UAAYH,IAAW,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,WAAWF,OAAO,sBAAwB,MAAM,KAAO,OAAJ5D,QAAI,IAAJA,GAAAA,EAAM8D,UAAYH,IAAW,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,WAAWD,QAAU,MAAM,WAExJpC,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,gBAC/DC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAAAzB,SAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAM+D,SAAe,OAAJ/D,QAAI,IAAJA,OAAI,EAAJA,EAAM+D,SAAW,YAE7CtC,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,cAC/DC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAAAzB,SAAM,OAAJ3B,QAAI,IAAJA,GAAAA,EAAMgE,MAAY,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,MAAQ,YAEvCvC,EAAAA,EAAAA,MAACY,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGY,GAAI,GAAIxB,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOC,MAAO,iBAAiB5B,SAAC,eAC5C,aAAd,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAsC,OAAb3C,QAAa,IAAbA,GAAAA,EAAe4C,MAAW,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,YAAgB,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,SAASC,KAAKC,IAEpFzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAE,gBAAAC,OAAkBH,EAAKI,KAAM9C,UACjCC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACG,MAAM,YAAYmB,GAAI,CAAE,UAAW,CAAEnB,MAAO,WAAYoB,eAAgB,cAAgBhD,SAAE0C,EAAKO,UAAY,IAAMP,EAAKQ,gBAGjH,UAAd,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAgC,OAAV1C,QAAU,IAAVA,GAAAA,EAAY2C,MAAW,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,gBAAoB,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,aAAaV,KAAKC,IAE1FzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAE,aAAAC,OAAeH,EAAKI,KAAM9C,UAC9BC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACG,MAAM,YAAYmB,GAAI,CAAE,UAAW,CAAEnB,MAAO,WAAYoB,eAAgB,cAAgBhD,SAAE0C,EAAKU,gBAG1F,aAAd,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAA4B,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,YAAgB,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,SAASC,KAAKC,IAEjEzC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACG,MAAM,iBAAgB5B,SAAG0C,EAAKO,UAAY,IAAMP,EAAKQ,cAE5C,UAAd,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAyB,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,gBAAoB,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,aAAaV,KAAKC,IAEtEzC,EAAAA,EAAAA,KAACwB,EAAAA,KAAI,CAACG,MAAM,iBAAgB5B,SAAG0C,EAAKU,cAEvC,oBAQb,eAAd1E,EAAK2E,OAAoC,OAAV3D,QAAU,IAAVA,OAAU,EAAVA,EAAY4D,UAAoB,OAAV5D,QAAU,IAAVA,OAAU,EAAVA,EAAY6D,WAAYtD,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2C,GAAI,EAAExD,UACvFC,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAET,UAC1CC,EAAAA,EAAAA,KAACS,EAAAA,SAAQ,CAAC+C,SAAU,EAAEzD,UAClBC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,eAAgB,QAAQH,SACV,eAAdtB,EAAK2E,MAAmC,OAAV3D,QAAU,IAAVA,GAAAA,EAAY6D,QAAUtD,EAAAA,EAAAA,KAACiB,EAAAA,OAAM,CAACF,KAAK,KAAK0C,MAAO,CAAEC,WAAY,WAAarC,QAASA,IAAM7C,GAAc,GAAO0C,UAAUlB,EAAAA,EAAAA,KAAC2D,EAAAA,WAAU,IAAKC,YAAY,MAAK7D,SAAE,WAAkB,eASrOC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAiB,CAACC,OAAQvF,EAAYwF,QAASA,IAAMvF,GAAc,GAAQwF,KAAK,WAAWC,iBAjHxE7E,UACxB,IACIL,GAAY,GAEY,aADHmF,EAAAA,EAAAA,IAAU,sBAAuBhF,EAAOK,KAChD4E,SACT3F,GAAc,GACdQ,GAAU,GAElB,CAAE,MAAOoF,GACLC,QAAQC,IAAIF,EAChB,CAAC,QAEGrF,GAAY,EAChB,GAoGuIwF,IAAKrF,EAAOK,OAChJ,C","sources":["views/admin/meeting/View.js"],"sourcesContent":["import { Box, Button, Flex, Grid, GridItem, Heading, Text } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport { getApi } from \"services/api\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { deleteApi } from \"services/api\";\r\nimport CommonDeleteModel from \"components/commonDeleteModel\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const [deleteMany, setDeleteMany] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate()\r\n    const params = useParams();\r\n\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/meeting/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleDeleteMeeting = async (ids) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await deleteApi('api/meeting/delete/', params.id)\r\n            if (response.status === 200) {\r\n                setDeleteMany(false)\r\n                navigate(-1)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n\r\n    const [permission, contactAccess, leadAccess] = HasAccess(['Meetings', 'Contacts', 'Leads'])\r\n\r\n    return (\r\n        <>\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Flex justifyContent={\"space-between\"}>\r\n                                                <Heading size=\"md\" mb={3}>\r\n                                                    Meeting View page\r\n                                                </Heading>\r\n                                                <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)}>\r\n                                                    Back\r\n                                                </Button>\r\n                                            </Flex>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Agenda </Text>\r\n                                            <Text>{data?.agenda ? data?.agenda : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Created By </Text>\r\n                                            <Text>{data?.createdByName ? data?.createdByName : ' - '}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> DateTime </Text>\r\n                                            <Text> {data?.dateTime ? moment(data?.dateTime).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.dateTime ? moment(data?.dateTime).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Location </Text>\r\n                                            <Text>{data?.location ? data?.location : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>  Notes </Text>\r\n                                            <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Attendes </Text>\r\n                                            {data?.related === 'Contact' && contactAccess?.view ? data?.attendes && data?.attendes.map((item) => {\r\n                                                return (\r\n                                                    <Link to={`/contactView/${item._id}`}>\r\n                                                        <Text color='brand.600' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{item.firstName + ' ' + item.lastName}</Text>\r\n                                                    </Link>\r\n                                                )\r\n                                            }) : data?.related === 'Lead' && leadAccess?.view ? data?.attendesLead && data?.attendesLead.map((item) => {\r\n                                                return (\r\n                                                    <Link to={`/leadView/${item._id}`}>\r\n                                                        <Text color='brand.600' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{item.leadName}</Text>\r\n                                                    </Link>\r\n                                                )\r\n                                            }) : data?.related === 'contact' ? data?.attendes && data?.attendes.map((item) => {\r\n                                                return (\r\n                                                    <Text color='blackAlpha.900' >{item.firstName + ' ' + item.lastName}</Text>\r\n                                                )\r\n                                            }) : data?.related === 'lead' ? data?.attendesLead && data?.attendesLead.map((item) => {\r\n                                                return (\r\n                                                    <Text color='blackAlpha.900' >{item.leadName}</Text>\r\n                                                )\r\n                                            }) : '-'}\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n                    {(user.role === 'superAdmin' || (permission?.update || permission?.delete)) && <Card mt={3}>\r\n                        <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                            <GridItem colStart={6} >\r\n                                <Flex justifyContent={\"right\"}>\r\n                                    {(user.role === 'superAdmin' || permission?.delete) ? <Button size='sm' style={{ background: 'red.800' }} onClick={() => setDeleteMany(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button> : ''}\r\n                                </Flex>\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </Card>\r\n                    }\r\n\r\n                </>}\r\n            {/* Delete model */}\r\n            <CommonDeleteModel isOpen={deleteMany} onClose={() => setDeleteMany(false)} type='Meetings' handleDeleteData={handleDeleteMeeting} ids={params.id} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["View","param","useParams","data","setData","useState","deleteMany","setDeleteMany","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","navigate","useNavigate","params","useEffect","async","response","getApi","id","fetchData","permission","contactAccess","leadAccess","HasAccess","_jsxs","_Fragment","children","_jsx","Flex","justifyContent","alignItems","width","Spinner","Grid","templateColumns","gap","GridItem","colSpan","base","Card","Box","Heading","size","mb","Button","leftIcon","IoIosArrowBack","variant","onClick","HSeparator","md","Text","fontSize","fontWeight","color","agenda","createdByName","dateTime","moment","format","toNow","timestamp","location","notes","related","view","attendes","map","item","Link","to","concat","_id","sx","textDecoration","firstName","lastName","attendesLead","leadName","role","update","delete","mt","colStart","style","background","DeleteIcon","colorScheme","CommonDeleteModel","isOpen","onClose","type","handleDeleteData","deleteApi","status","error","console","log","ids"],"sourceRoot":""}