{"version":3,"file":"static/js/685.5b350a28.chunk.js","mappings":"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","sources":["views/admin/task/components/taskView.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { getApi } from 'services/api'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport AddTask from './addTask'\r\nimport EditTask from './editTask'\r\nimport { HasAccess } from '../../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\n\r\nconst TaskView = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [permission, contactAccess, leadAccess] = HasAccess(['Tasks', 'Contacts', 'Leads'])\r\n\r\n    const [data, setData] = useState()\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            setIsLoding(true)\r\n            let result = await getApi('api/task/view/', id?.event ? id?.event?._def?.extendedProps?._id : id);\r\n            setData(result?.data);\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n\r\n    const handleClick = () => {\r\n        onOpen()\r\n    }\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={1} justifyContent={\"space-between\"} alignItem={\"center\"}>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                        <Text fontSize=\"xl\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task View </Text>\r\n\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                        <Flex justifyContent={\"right\"}>\r\n                            <Menu>\r\n                                {(user.role === 'superAdmin' || permission?.create || permission?.update || permission?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                    Actions\r\n                                </MenuButton>}\r\n                                <MenuDivider />\r\n                                <MenuList minWidth={2}>\r\n                                    {(user.role === 'superAdmin' || permission?.create) && <MenuItem onClick={() => handleClick()} alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                    {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => setEdit(true)} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                    {(user.role === 'superAdmin' || permission?.deleteModel) && <>\r\n                                        <MenuDivider />\r\n                                        <MenuItem alignItems={'start'} onClick={() => setDelete(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                    </>}\r\n                                </MenuList>\r\n                            </Menu>\r\n                            <Link to=\"/task\">\r\n                                <Button size=\"sm\" leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                    Back\r\n                                </Button>\r\n                            </Link>\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n                <HSeparator />\r\n                <Grid templateColumns=\"repeat(12, 1fr)\" gap={3} pt={3}>\r\n\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Title </Text>\r\n                        <Text>{data?.title ? data?.title : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Related To </Text>\r\n                        <Text>{data?.category ? data?.category : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task start </Text>\r\n                        <Text>{data?.start ? moment(data?.start).format('L LT') : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task end  </Text>\r\n                        <Text>{data?.end ? moment(data?.end).format('L LT') : moment(data?.start).format('L')}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Link </Text>\r\n                        {data?.url ?\r\n                            <a target='_blank' href={data?.url}>\r\n                                <IconButton borderRadius=\"10px\" size=\"md\" icon={<BiLink />} />\r\n                            </a> : '-'\r\n                        }\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                        <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assignment To  </Text>\r\n                        <Link to={data?.assignmentTo ? contactAccess?.view && `/contactView/${data?.assignmentTo}` : leadAccess?.view && `/leadView/${data?.assignmentToLead}`}>\r\n                            <Text color={(data?.category === 'contact' && (contactAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignmentToName ? data?.assignmentToName : ' - '}</Text>\r\n                        </Link>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                        <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                        <Text>{data?.description ? data?.description : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                        <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>\r\n            {(permission?.update || permission?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                    <GridItem colStart={6} >\r\n                        <Flex justifyContent={\"right\"}>\r\n                            {permission?.update && <Button size=\"sm\" onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                            {permission?.delete && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>}\r\n            {/* Addtask modal */}\r\n            <AddTask isOpen={isOpen} onClose={onClose} />\r\n            {/* Edittask modal */}\r\n            <EditTask isOpen={edit} onClose={setEdit} viewClose={onClose} id={id?.event ? id?.event?._def?.extendedProps?._id : id} />\r\n            {/* Deletetask modal */}\r\n            {/* <DeleteTask isOpen={deleteModel} onClose={setDelete} viewClose={onClose} url='api/task/delete/' method='one' id={id?.event ? id?.event?._def?.extendedProps?._id : id} redirectPage={\"/task\"} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskView\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n"],"names":["props","_id$event2","_id$event2$_def","_id$event2$_def$exten","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","isLoding","setIsLoding","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","useEffect","async","_id$event","_id$event$_def","_id$event$_def$extend","result","getApi","event","_def","extendedProps","_id","fetchViewData","_jsxs","children","Card","Grid","templateColumns","mb","gap","justifyContent","alignItem","_jsx","GridItem","colSpan","base","md","Text","fontSize","fontWeight","color","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","size","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","icon","AddIcon","EditIcon","_Fragment","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","HSeparator","pt","title","category","start","moment","format","end","url","target","href","IconButton","borderRadius","BiLink","reminder","assignmentTo","view","concat","assignmentToLead","sx","textDecoration","assignmentToName","createByName","description","notes","mt","colStart","style","background","AddTask","EditTask","viewClose","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","textarea","cx","__css","__DEV__","displayName"],"sourceRoot":""}