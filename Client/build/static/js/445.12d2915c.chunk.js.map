{"version":3,"file":"static/js/445.12d2915c.chunk.js","mappings":"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","sources":["components/footer/FooterAuth.js","layouts/auth/Default.js","views/auth/signIn/index.jsx"],"sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport {\r\n  Flex,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function Footer() {\r\n  let textColor = useColorModeValue(\"gray.400\", \"white\");\r\n  let linkColor = useColorModeValue({ base: \"gray.400\", lg: \"gray.400\" }, \"gray.400\");\r\n  return (\r\n    <Flex\r\n      zIndex='3'\r\n      flexDirection={{\r\n        base: \"column\",\r\n        lg: \"row\",\r\n      }}\r\n      alignItems={{\r\n        base: \"center\",\r\n        xl: \"start\",\r\n      }}\r\n      justifyContent='space-between'\r\n      px={{ base: \"30px\", md: \"0px\" }}\r\n      pb='30px'>\r\n      <Text\r\n        color={textColor}\r\n        textAlign={{\r\n          base: \"center\",\r\n          xl: \"start\",\r\n        }}\r\n        mb={{ base: \"20px\", lg: \"0px\" }}>\r\n        {\" \"}\r\n        &copy; {1900 + new Date().getYear()}\r\n        <Text as='span' fontWeight='500' ms='4px'>\r\n          <Link\r\n            fontWeight='500'\r\n            target=\"_blank\"\r\n            color={textColor}\r\n            href='https://prolinkinfotech.com/'> Prolink Infotech.</Link> All Rights Reserved.\r\n        </Text>\r\n      </Text>\r\n      {/* <List display='flex'>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link\r\n            fontWeight='500'\r\n            color={linkColor}\r\n            href='mailto:hello@simmmple.com?ref=horizon-chakra-free'>\r\n            Support\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link\r\n            fontWeight='500'\r\n            color={linkColor}\r\n            href='https://www.simmmple.com/licenses?ref=horizon-chakra-free'>\r\n            License\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link\r\n            fontWeight='500'\r\n            color={linkColor}\r\n            href='https://simmmple.com/terms-of-service?ref=horizon-chakra-free'>\r\n            Terms of Use\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Link\r\n            fontWeight='500'\r\n            color={linkColor}\r\n            href='https://www.blog.simmmple.com/?ref=horizon-chakra-free'>\r\n            Blog\r\n          </Link>\r\n        </ListItem>\r\n      </List> */}\r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport { Box, Flex } from \"@chakra-ui/react\";\r\nimport Footer from \"components/footer/FooterAuth\";\r\nimport FixedPlugin from \"components/fixedPlugin/FixedPlugin\";\r\nimport { Link } from \"react-router-dom\";\r\n// Custom components\r\n// Assets\r\n\r\nfunction AuthIllustration(props) {\r\n  const { children, illustrationBackground } = props;\r\n  // Chakra color mode\r\n  return (\r\n    <Flex h='max-content'>\r\n\r\n      <Flex\r\n        h={{\r\n          sm: \"initial\",\r\n          md: \"unset\",\r\n          lg: \"100vh\",\r\n          xl: \"97vh\",\r\n        }}\r\n        w='100%'\r\n        maxW={{ md: \"66%\", lg: \"1313px\" }}\r\n        mx='auto'\r\n        pt={{ sm: \"50px\", md: \"0px\" }}\r\n        px={{ lg: \"30px\", xl: \"0px\" }}\r\n        ps={{ xl: \"70px\" }}\r\n        justifyContent='center'\r\n        direction='column'>\r\n        {children}\r\n        <Box\r\n          display={{ base: \"none\", md: \"flex\" }}\r\n          h='100%'\r\n          minH='100vh'\r\n          w={{ lg: \"50vw\", \"2xl\": \"44vw\" }}\r\n          borderBottomLeftRadius={{ lg: \"120px\", xl: \"200px\" }}\r\n          justifyContent='center'\r\n          position='absolute'\r\n          flexDirection={'column'}\r\n          alignItems={'center'}\r\n          // bg={'black'}\r\n          overflow={'hidden'}\r\n          right='0px'>\r\n          <Link to=\"https://prolinkinfotech.com/\" target=\"_blank\" style={{ height: '50%', width: '50%' }} >\r\n            <Flex\r\n              bg={`url(${illustrationBackground})`}\r\n              justify='center'\r\n              align='center'\r\n              w='100%'\r\n              h='100%'\r\n              bgSize='cover'\r\n              bgPosition='50%'\r\n            />\r\n          </Link>\r\n          {/* <Box\r\n            border={'1px solid'}\r\n            p={4}\r\n            borderRadius={10}\r\n          >\r\n            Hi\r\n          </Box> */}\r\n        </Box>\r\n        <Footer />\r\n      </Flex>\r\n      {/* CHANGE THEME COLOR BUTTON LIGHT-DARK */}\r\n      {/* <FixedPlugin /> */}\r\n    </Flex>\r\n  );\r\n}\r\n// PROPS\r\n\r\n// AuthIllustration.propTypes = {\r\n//   illustrationBackground: PropTypes.string,\r\n//   image: PropTypes.any,\r\n// };\r\n\r\nexport default AuthIllustration;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Heading,\r\n  Icon,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport DefaultAuth from \"layouts/auth/Default\";\r\n// Assets\r\n\r\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\r\nimport { RiEyeCloseLine } from \"react-icons/ri\";\r\nimport { postApi } from \"services/api\";\r\nimport { loginSchema } from \"schema\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchImage } from \"../../../redux/imageSlice\";\r\nimport { setUser } from \"../../../redux/localSlice\";\r\n\r\nfunction SignIn() {\r\n  // Chakra color mode\r\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\r\n  const textColorSecondary = \"gray.400\";\r\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\r\n  const [isLoding, setIsLoding] = React.useState(false);\r\n  const [checkBox, setCheckBox] = React.useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Dispatch the fetchRoles action on component mount\r\n    dispatch(fetchImage(\"?isActive=true\"));\r\n  }, [dispatch]);\r\n\r\n  const image = useSelector((state) => state?.images?.image);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const showPass = () => setShow(!show);\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  const {\r\n    errors,\r\n    values,\r\n    touched,\r\n    handleBlur,\r\n    handleChange,\r\n    resetForm,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: loginSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      login();\r\n    },\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const login = async () => {\r\n    try {\r\n      setIsLoding(true);\r\n      let response = await postApi(\"api/user/login\", values, checkBox);\r\n      if (response && response.status === 200) {\r\n        navigate(\"/superAdmin\");\r\n        toast.success(\"Login Successfully!\");\r\n        resetForm();\r\n        dispatch(setUser(response?.data?.user))\r\n      } else {\r\n        toast.error(response.response.data?.error);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setIsLoding(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DefaultAuth\r\n      illustrationBackground={image?.length > 0 && image[0]?.authImg}\r\n      image={image?.length > 0 && image[0]?.authImg}\r\n    >\r\n      <Flex\r\n        maxW={{ base: \"100%\", md: \"max-content\" }}\r\n        w=\"100%\"\r\n        mx={{ base: \"auto\", lg: \"0px\" }}\r\n        me=\"auto\"\r\n        h=\"fit-content\"\r\n        alignItems=\"start\"\r\n        justifyContent=\"center\"\r\n        mb={{ base: \"30px\", md: \"60px\" }}\r\n        px={{ base: \"25px\", md: \"0px\" }}\r\n        mt={{ base: \"40px\", md: \"14vh\" }}\r\n        flexDirection=\"column\"\r\n      >\r\n        <Box me=\"auto\">\r\n          <Heading color={textColor} fontSize=\"36px\" mb=\"10px\">\r\n            Sign In\r\n          </Heading>\r\n          <Text\r\n            mb=\"36px\"\r\n            ms=\"4px\"\r\n            color={textColorSecondary}\r\n            fontWeight=\"400\"\r\n            fontSize=\"md\"\r\n          >\r\n            Enter your email and password to sign in!\r\n          </Text>\r\n        </Box>\r\n        <Flex\r\n          zIndex=\"2\"\r\n          direction=\"column\"\r\n          w={{ base: \"100%\", md: \"420px\" }}\r\n          maxW=\"100%\"\r\n          background=\"transparent\"\r\n          borderRadius=\"15px\"\r\n          mx={{ base: \"auto\", lg: \"unset\" }}\r\n          me=\"auto\"\r\n          mb={{ base: \"20px\", md: \"auto\" }}\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <FormControl isInvalid={errors.username && touched.username}>\r\n              <FormLabel\r\n                display=\"flex\"\r\n                ms=\"4px\"\r\n                fontSize=\"sm\"\r\n                fontWeight=\"500\"\r\n                color={textColor}\r\n                mb=\"8px\"\r\n              >\r\n                Email<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <Input\r\n                fontSize=\"sm\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.username}\r\n                name=\"username\"\r\n                ms={{ base: \"0px\", md: \"0px\" }}\r\n                type=\"email\"\r\n                placeholder=\"mail@simmmple.com\"\r\n                mb={errors.username && touched.username ? undefined : \"24px\"}\r\n                fontWeight=\"500\"\r\n                size=\"lg\"\r\n                borderColor={\r\n                  errors.username && touched.username ? \"red.300\" : null\r\n                }\r\n                className={\r\n                  errors.username && touched.username ? \"isInvalid\" : null\r\n                }\r\n              />\r\n              {errors.username && touched.username && (\r\n                <FormErrorMessage mb=\"24px\">\r\n                  {\" \"}\r\n                  {errors.username}\r\n                </FormErrorMessage>\r\n              )}\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              isInvalid={errors.password && touched.password}\r\n              mb=\"24px\"\r\n            >\r\n              <FormLabel\r\n                ms=\"4px\"\r\n                fontSize=\"sm\"\r\n                fontWeight=\"500\"\r\n                color={textColor}\r\n                display=\"flex\"\r\n              >\r\n                Password<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  isRequired={true}\r\n                  fontSize=\"sm\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  name=\"password\"\r\n                  mb={errors.password && touched.password ? undefined : \"24px\"}\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  size=\"lg\"\r\n                  variant=\"auth\"\r\n                  type={show ? \"text\" : \"password\"}\r\n                  borderColor={\r\n                    errors.password && touched.password ? \"red.300\" : null\r\n                  }\r\n                  className={\r\n                    errors.password && touched.password ? \"isInvalid\" : null\r\n                  }\r\n                />\r\n                <InputRightElement display=\"flex\" alignItems=\"center\" mt=\"4px\">\r\n                  <Icon\r\n                    color={textColorSecondary}\r\n                    _hover={{ cursor: \"pointer\" }}\r\n                    as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\r\n                    onClick={showPass}\r\n                  />\r\n                </InputRightElement>\r\n              </InputGroup>\r\n              {errors.password && touched.password && (\r\n                <FormErrorMessage mb=\"24px\">\r\n                  {\" \"}\r\n                  {errors.password}\r\n                </FormErrorMessage>\r\n              )}\r\n              <Flex justifyContent=\"space-between\" align=\"center\" mb=\"24px\">\r\n                <FormControl display=\"flex\" alignItems=\"center\">\r\n                  <Checkbox\r\n                    onChange={(e) => setCheckBox(e.target.checked)}\r\n                    id=\"remember-login\"\r\n                    value={checkBox}\r\n                    defaultChecked\r\n                    colorScheme=\"brandScheme\"\r\n                    me=\"10px\"\r\n                  />\r\n                  <FormLabel\r\n                    htmlFor=\"remember-login\"\r\n                    mb=\"0\"\r\n                    fontWeight=\"normal\"\r\n                    color={textColor}\r\n                    fontSize=\"sm\"\r\n                  >\r\n                    Keep me logged in\r\n                  </FormLabel>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex\r\n                justifyContent=\"space-between\"\r\n                align=\"center\"\r\n                mb=\"24px\"\r\n              ></Flex>\r\n              <Button\r\n                fontSize=\"sm\"\r\n                variant=\"brand\"\r\n                fontWeight=\"500\"\r\n                w=\"100%\"\r\n                h=\"50\"\r\n                type=\"submit\"\r\n                mb=\"24px\"\r\n                disabled={isLoding ? true : false}\r\n              >\r\n                {isLoding ? <Spinner /> : \"Sign In\"}\r\n              </Button>\r\n            </FormControl>\r\n          </form>\r\n        </Flex>\r\n      </Flex>\r\n    </DefaultAuth>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"names":["Footer","textColor","useColorModeValue","base","lg","_jsx","Flex","zIndex","flexDirection","alignItems","xl","justifyContent","px","md","pb","children","_jsxs","Text","color","textAlign","mb","Date","getYear","as","fontWeight","ms","Link","target","href","props","illustrationBackground","h","sm","w","maxW","mx","pt","ps","direction","Box","display","minH","borderBottomLeftRadius","position","overflow","right","to","style","height","width","bg","concat","justify","align","bgSize","bgPosition","_image$","_image$2","textColorSecondary","brandStars","isLoding","setIsLoding","React","checkBox","setCheckBox","dispatch","useDispatch","useEffect","fetchImage","image","useSelector","state","_state$images","images","show","setShow","errors","values","touched","handleBlur","handleChange","resetForm","handleSubmit","useFormik","initialValues","username","password","validationSchema","loginSchema","onSubmit","_ref","login","navigate","useNavigate","async","response","postApi","_response$data","_response$response$da","status","toast","success","setUser","data","user","error","e","console","log","DefaultAuth","length","authImg","me","mt","Heading","fontSize","background","borderRadius","FormControl","isInvalid","FormLabel","Input","onChange","onBlur","value","name","type","placeholder","undefined","size","borderColor","className","FormErrorMessage","InputGroup","isRequired","variant","InputRightElement","Icon","_hover","cursor","RiEyeCloseLine","MdOutlineRemoveRedEye","onClick","showPass","Checkbox","checked","id","defaultChecked","colorScheme","htmlFor","Button","disabled","Spinner"],"sourceRoot":""}