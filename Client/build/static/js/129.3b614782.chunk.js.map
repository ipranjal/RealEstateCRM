{"version":3,"file":"static/js/129.3b614782.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js","components/card/MiniStatistics.js","components/icons/IconBox.js","../node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js","components/charts/LineChart.js","components/charts/PieChart.js","views/admin/default/index.jsx","views/admin/reports/components/reportChart.js"],"sourcesContent":["import { Icon } from '@chakra-ui/icon';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport { VisuallyHidden } from '@chakra-ui/visually-hidden';\nimport * as React from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded = [\"type\", \"aria-label\"],\n    _excluded2 = [\"className\", \"children\"];\nvar StatLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dt, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__label\", props.className),\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  StatLabel.displayName = \"StatLabel\";\n}\n\nvar StatHelpText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dd, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__help-text\", props.className),\n    __css: styles.helpText\n  }));\n});\n\nif (__DEV__) {\n  StatHelpText.displayName = \"StatHelpText\";\n}\n\nvar StatNumber = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dd, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__number\", props.className),\n    __css: _extends({}, styles.number, {\n      fontFeatureSettings: \"pnum\",\n      fontVariantNumeric: \"proportional-nums\"\n    })\n  }));\n});\n\nif (__DEV__) {\n  StatNumber.displayName = \"StatNumber\";\n}\n\nvar StatDownArrow = function StatDownArrow(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    color: \"red.400\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\n\nif (__DEV__) {\n  StatDownArrow.displayName = \"StatDownArrow\";\n}\n\nvar StatUpArrow = function StatUpArrow(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    color: \"green.400\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n\nif (__DEV__) {\n  StatUpArrow.displayName = \"StatUpArrow\";\n}\n\nvar StatArrow = function StatArrow(props) {\n  var type = props.type,\n      ariaLabel = props[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n  var IconComponent = type === \"increase\" ? StatUpArrow : StatDownArrow;\n  var defaultAriaLabel = type === \"increase\" ? \"increased by\" : \"decreased by\";\n  var label = ariaLabel || defaultAriaLabel;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VisuallyHidden, null, label), /*#__PURE__*/React.createElement(IconComponent, _extends({\n    \"aria-hidden\": true\n  }, rest, {\n    __css: styles.icon\n  })));\n};\n\nif (__DEV__) {\n  StatArrow.displayName = \"StatArrow\";\n}\n\nvar Stat = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Stat\", props);\n\n  var statStyles = _extends({\n    position: \"relative\",\n    flex: \"1 1 0%\"\n  }, styles.container);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      children = _omitThemingProps.children,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-stat\", className),\n    __css: statStyles\n  }), /*#__PURE__*/React.createElement(\"dl\", null, children)));\n});\n\nif (__DEV__) {\n  Stat.displayName = \"Stat\";\n}\n\nvar StatGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, props, {\n    ref: ref,\n    role: \"group\",\n    className: cx(\"chakra-stat__group\", props.className),\n    __css: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      alignItems: \"flex-start\"\n    }\n  }));\n});\n\nif (__DEV__) {\n  StatGroup.displayName = \"StatGroup\";\n}\n\nexport { Stat, StatArrow, StatDownArrow, StatGroup, StatHelpText, StatLabel, StatNumber, StatUpArrow };\n","// Chakra imports\r\n// Chakra imports\r\nimport {\r\n  Flex,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  useColorModeValue,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/card/Card.js\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\n// Custom icons\r\nimport React from \"react\";\r\n\r\nexport default function Default(props) {\r\n  const { startContent, endContent, name, growth, value } = props;\r\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n  const textColorSecondary = \"secondaryGray.600\";\r\n\r\n  return (\r\n    <Card cursor={'pointer'} py='15px' onClick={props.onClick} >\r\n      <Flex\r\n        my='auto'\r\n        h='100%'\r\n        align={{ base: \"center\", xl: \"start\" }}\r\n        justify={{ base: \"center\", xl: \"center\" }}>\r\n        {startContent}\r\n\r\n        <Stat my='auto' ms={startContent ? \"18px\" : \"0px\"}>\r\n          <StatLabel\r\n            lineHeight='100%'\r\n            color={textColorSecondary}\r\n            fontSize={{\r\n              base: props.fontsize ? props.fontsize : \"sm\",\r\n            }}>\r\n            {name}\r\n          </StatLabel>\r\n          <StatNumber\r\n            color={textColor}\r\n            fontSize={{\r\n              base: \"2xl\",\r\n            }}>\r\n            <CountUpComponent targetNumber={value} />\r\n            {/* {value} */}\r\n          </StatNumber>\r\n          {growth ? (\r\n            <Flex align='center'>\r\n              <Text color='green.500' fontSize='xs' fontWeight='700' me='5px'>\r\n                {growth}\r\n              </Text>\r\n              <Text color='secondaryGray.600' fontSize='xs' fontWeight='400'>\r\n                since last month\r\n              </Text>\r\n            </Flex>\r\n          ) : null}\r\n        </Stat>\r\n        <Flex ms='auto' w='max-content'>\r\n          {endContent}\r\n        </Flex>\r\n      </Flex>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function IconBox(props) {\r\n  const { icon, ...rest } = props;\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      borderRadius={\"50%\"}\r\n      {...rest}>\r\n      {icon}\r\n    </Flex>\r\n  );\r\n}\r\n","import { keyframes, chakra, useStyles, omitThemingProps, useMultiStyleConfig, StylesProvider } from '@chakra-ui/system';\nimport { valueToPercent, isFunction, isUndefined, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nvar stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nfunction getProgressProps(options) {\n  var _options$value = options.value,\n      value = _options$value === void 0 ? 0 : _options$value,\n      min = options.min,\n      max = options.max,\n      valueText = options.valueText,\n      getValueText = options.getValueText,\n      isIndeterminate = options.isIndeterminate;\n  var percent = valueToPercent(value, min, max);\n\n  var getAriaValueText = function getAriaValueText() {\n    if (value == null) return undefined;\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText;\n  };\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent: percent,\n    value: value\n  };\n}\n\nvar _excluded$1 = [\"size\", \"isIndeterminate\"],\n    _excluded2$1 = [\"size\", \"max\", \"min\", \"valueText\", \"getValueText\", \"value\", \"capIsRound\", \"children\", \"thickness\", \"color\", \"trackColor\", \"isIndeterminate\"];\n\nvar Circle = function Circle(props) {\n  return /*#__PURE__*/React.createElement(chakra.circle, _extends({\n    cx: 50,\n    cy: 50,\n    r: 42,\n    fill: \"transparent\"\n  }, props));\n};\n\nif (__DEV__) {\n  Circle.displayName = \"Circle\";\n}\n\nvar Shape = function Shape(props) {\n  var size = props.size,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? rotate + \" 2s linear infinite\" : undefined\n    }\n  }, rest));\n};\n\nif (__DEV__) {\n  Shape.displayName = \"Shape\";\n}\n\n/**\n * CircularProgress is used to indicate the progress of an activity.\n * It is built using `svg` and `circle` components with support for\n * theming and `indeterminate` state\n *\n * @see Docs https://chakra-ui.com/circularprogress\n * @todo add theming support for circular progress\n */\nvar CircularProgress = function CircularProgress(props) {\n  var _progress$percent;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? \"48px\" : _props$size,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 100 : _props$max,\n      _props$min = props.min,\n      min = _props$min === void 0 ? 0 : _props$min,\n      valueText = props.valueText,\n      getValueText = props.getValueText,\n      value = props.value,\n      capIsRound = props.capIsRound,\n      children = props.children,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? \"10px\" : _props$thickness,\n      _props$color = props.color,\n      color = _props$color === void 0 ? \"#0078d4\" : _props$color,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? \"#edebe9\" : _props$trackColor,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var progress = getProgressProps({\n    min: min,\n    max: max,\n    value: value,\n    valueText: valueText,\n    getValueText: getValueText,\n    isIndeterminate: isIndeterminate\n  });\n  var determinant = isIndeterminate ? undefined : ((_progress$percent = progress.percent) != null ? _progress$percent : 0) * 2.64;\n  var strokeDasharray = isUndefined(determinant) ? undefined : determinant + \" \" + (264 - determinant);\n  var indicatorProps = isIndeterminate ? {\n    css: {\n      animation: spin + \" 1.5s linear infinite\"\n    }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray: strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  var rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-progress\"\n  }, progress.bind, rest, {\n    __css: rootStyles\n  }), /*#__PURE__*/React.createElement(Shape, {\n    size: size,\n    isIndeterminate: isIndeterminate\n  }, /*#__PURE__*/React.createElement(Circle, {\n    stroke: trackColor,\n    strokeWidth: thickness,\n    className: \"chakra-progress__track\"\n  }), /*#__PURE__*/React.createElement(Circle, _extends({\n    stroke: color,\n    strokeWidth: thickness,\n    className: \"chakra-progress__indicator\",\n    strokeLinecap: capIsRound ? \"round\" : undefined\n    /**\n     * fix issue in Safari where indictor still shows when value is 0\n     * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3754\n     */\n    ,\n    opacity: progress.value === 0 && !isIndeterminate ? 0 : undefined\n  }, indicatorProps))), children);\n};\n\nif (__DEV__) {\n  CircularProgress.displayName = \"CircularProgress\";\n}\n/**\n * CircularProgress component label. In most cases it is a numeric indicator\n * of the circular progress component's value\n */\n\n\nvar CircularProgressLabel = chakra(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\n\nif (__DEV__) {\n  CircularProgressLabel.displayName = \"CircularProgressLabel\";\n}\n\nvar _excluded = [\"min\", \"max\", \"value\", \"isIndeterminate\"],\n    _excluded2 = [\"value\", \"min\", \"max\", \"hasStripe\", \"isAnimated\", \"children\", \"borderRadius\", \"isIndeterminate\", \"aria-label\", \"aria-labelledby\"];\n\n/**\n * ProgressLabel is used to show the numeric value of the progress.\n * @see Docs https://chakra-ui.com/progress\n */\nvar ProgressLabel = function ProgressLabel(props) {\n  var styles = useStyles();\n\n  var labelStyles = _extends({\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }, styles.label);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, props, {\n    __css: labelStyles\n  }));\n};\n\nif (__DEV__) {\n  ProgressLabel.displayName = \"ProgressLabel\";\n}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nvar ProgressFilledTrack = function ProgressFilledTrack(props) {\n  var min = props.min,\n      max = props.max,\n      value = props.value,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var progress = getProgressProps({\n    value: value,\n    min: min,\n    max: max,\n    isIndeterminate: isIndeterminate\n  });\n  var styles = useStyles();\n\n  var trackStyles = _extends({\n    height: \"100%\"\n  }, styles.filledTrack);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    style: _extends({\n      width: progress.percent + \"%\"\n    }, rest.style)\n  }, progress.bind, rest, {\n    __css: trackStyles\n  }));\n};\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nvar Progress = function Progress(props) {\n  var _styles$track;\n\n  var _omitThemingProps = omitThemingProps(props),\n      value = _omitThemingProps.value,\n      _omitThemingProps$min = _omitThemingProps.min,\n      min = _omitThemingProps$min === void 0 ? 0 : _omitThemingProps$min,\n      _omitThemingProps$max = _omitThemingProps.max,\n      max = _omitThemingProps$max === void 0 ? 100 : _omitThemingProps$max,\n      hasStripe = _omitThemingProps.hasStripe,\n      isAnimated = _omitThemingProps.isAnimated,\n      children = _omitThemingProps.children,\n      propBorderRadius = _omitThemingProps.borderRadius,\n      isIndeterminate = _omitThemingProps.isIndeterminate,\n      ariaLabel = _omitThemingProps[\"aria-label\"],\n      ariaLabelledBy = _omitThemingProps[\"aria-labelledby\"],\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var styles = useMultiStyleConfig(\"Progress\", props);\n  var borderRadius = propBorderRadius != null ? propBorderRadius : (_styles$track = styles.track) == null ? void 0 : _styles$track.borderRadius;\n  var stripeAnimation = {\n    animation: stripe + \" 1s linear infinite\"\n  };\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n\n  var shouldAddStripe = !isIndeterminate && hasStripe;\n  var shouldAnimateStripe = shouldAddStripe && isAnimated;\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n\n  var css = _extends({}, shouldAnimateStripe && stripeAnimation, isIndeterminate && {\n    position: \"absolute\",\n    willChange: \"left\",\n    minWidth: \"50%\",\n    animation: progress + \" 1s ease infinite normal none running\"\n  });\n\n  var trackStyles = _extends({\n    overflow: \"hidden\",\n    position: \"relative\"\n  }, styles.track);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    borderRadius: borderRadius,\n    __css: trackStyles\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(ProgressFilledTrack, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    min: min,\n    max: max,\n    value: value,\n    isIndeterminate: isIndeterminate,\n    css: css,\n    borderRadius: borderRadius\n  }), children));\n};\n\nif (__DEV__) {\n  Progress.displayName = \"Progress\";\n}\n\nexport { CircularProgress, CircularProgressLabel, Progress, ProgressLabel };\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { HasAccess } from \"../../redux/accessUtils\";\r\n\r\nconst ApexChart = (props) => {\r\n  const { data } = props;\r\n\r\n  let permissions = []\r\n  let permissionsLength = []\r\n\r\n  data?.forEach(item => {\r\n    if (item.name) {\r\n      permissions.push(item.name);\r\n      permissionsLength.push(item.length);\r\n    }\r\n  });\r\n\r\n  const state = {\r\n    series: [\r\n      {\r\n        name: 'Data',\r\n        data: permissionsLength?.map((item) => item)\r\n      }\r\n    ],\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        type: 'bar',\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 10,\r\n          columnWidth: '40%',\r\n        }\r\n      },\r\n      stroke: {\r\n        width: 2\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: ['#fff', '#f2f2f2']\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: permissions?.map((item) => item),\r\n        tickPlacement: 'on'\r\n      },\r\n\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'light',\r\n          type: \"horizontal\",\r\n          shadeIntensity: 0.25,\r\n          inverseColors: true,\r\n          opacityFrom: 0.85,\r\n          opacityTo: 0.85,\r\n          stops: [50, 0, 100]\r\n        },\r\n      }\r\n    },\r\n  };\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={350} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst ApexChart = (props) => {\r\n  const { leadData } = props;\r\n\r\n  let activeLength = leadData && leadData.length > 0 ? leadData?.filter(lead => lead?.leadStatus === \"active\")?.length : 0;\r\n  let pendingLength = leadData && leadData.length > 0 ? leadData?.filter(lead => lead?.leadStatus === \"pending\")?.length : 0;\r\n  let soldLength = leadData && leadData.length > 0 ? leadData?.filter(lead => lead?.leadStatus === \"sold\")?.length : 0;\r\n\r\n  const series = [activeLength, pendingLength, soldLength];\r\n  const scaledSeries = series?.map(value => {\r\n    if (leadData?.length === 0) {\r\n        return NaN;\r\n    } else {\r\n        return value === 0 ? NaN : ((value * 100) / leadData?.length);\r\n    }\r\n});\r\n\r\n\r\n  const options = {\r\n    chart: {\r\n      type: 'radialBar',\r\n      width: 330,\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        size: undefined,\r\n        inverseOrder: true,\r\n        hollow: {\r\n          margin: 40,\r\n          size: '48%',\r\n          background: 'transparent',\r\n        },\r\n        dataLabels: {\r\n          name: {\r\n            fontSize: '22px',\r\n          },\r\n          value: {\r\n            fontSize: '16px',\r\n          },\r\n          total: {\r\n            show: true,\r\n            label: 'Total',\r\n            color: '#1F7EEB',\r\n            formatter: function () {\r\n              return leadData?.length || 0;\r\n            }\r\n          },\r\n          value: {\r\n            show: true,\r\n            formatter: function (val) {\r\n              return (val / 100 * leadData.length).toFixed(0);\r\n            }\r\n          }\r\n        },\r\n        track: {\r\n          show: true,\r\n        },\r\n        startAngle: -180,\r\n        endAngle: 180,\r\n        hover: {\r\n          size: undefined,\r\n          sizeOffset: 3,\r\n          colors: [\"#ff5959\", \"#ECC94B\", \"#01B574\"], // Add hover effect colors\r\n        }\r\n      },\r\n    },\r\n    stroke: {\r\n      lineCap: 'round'\r\n    },\r\n    colors: [\"#25BE87\", \"#ECC94B\", \"#ff5959\"],\r\n    labels: ['Active', 'Pending', 'Sold'],\r\n    legend: {\r\n      show: true,\r\n      floating: true,\r\n      position: 'bottom',\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ReactApexChart key={leadData?.length} options={options} series={scaledSeries} type=\"radialBar\" height={320} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n","// Chakra imports\r\nimport {\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  IconButton,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  Grid,\r\n  GridItem,\r\n  Progress,\r\n  Box,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\n// Custom components\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport Card from \"components/card/Card\";\r\nimport MiniStatistics from \"components/card/MiniStatistics\";\r\nimport IconBox from \"components/icons/IconBox\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LuBuilding2 } from \"react-icons/lu\";\r\nimport { MdAddTask, MdContacts, MdLeaderboard } from \"react-icons/md\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\nimport ReportChart from \"../reports/components/reportChart\";\r\nimport Chart from \"components/charts/LineChart.js\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport PieChart from \"components/charts/PieChart\";\r\nimport CountUpComponent from \"../../../../src/components/countUpComponent/countUpComponent\";\r\nimport Spinner from 'components/spinner/Spinner';\r\n\r\nexport default function UserReports() {\r\n  // Chakra Color Mode\r\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n  const boxBg = useColorModeValue(\"secondaryGray.300\", \"whiteAlpha.100\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [isLoding, setIsLoding] = useState(false);\r\n\r\n  const [allData, setAllData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [contactsView, taskView, leadView, proprtyView] = HasAccess([\"Contacts\", \"Tasks\", \"Leads\", \"Properties\"]);\r\n\r\n  const fetchData = async () => {\r\n    let responseData = await getApi(`api/status/?createBy=${user?._id}`);\r\n\r\n    setAllData(responseData?.data?.data);\r\n  };\r\n\r\n\r\n  const fetchProgressChart = async () => {\r\n    setIsLoding(true);\r\n    let result = await getApi(user?.role === 'superAdmin' ? 'api/reporting/line-chart' : `api/reporting/line-chart?createBy=${user?._id}`);\r\n    if (result && result?.status === 200) {\r\n      setData(result?.data)\r\n    }\r\n    setIsLoding(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchProgressChart()\r\n  }, [])\r\n\r\n  const findModuleData = (title) => {\r\n    const filterData = data?.find(item => item?.name === title)\r\n    return filterData?.length || 0\r\n  }\r\n\r\n  const findLeadStatus = (title) => {\r\n    const filterData = allData?.leadData?.filter(item => item?.leadStatus === title)\r\n    return filterData?.length || 0\r\n  }\r\n  const findTaskStatus = (title) => {\r\n    const filterData = allData?.taskData?.filter(item => item?.status === title)\r\n    return filterData?.length || 0\r\n  }\r\n\r\n  const taskStatus = [\r\n    {\r\n      name: \"Completed\",\r\n      status: 'completed',\r\n      length: findTaskStatus('completed'),\r\n      color: \"#4d8f3a\"\r\n    },\r\n    {\r\n      name: \"Pending\",\r\n      status: 'pending',\r\n      length: findTaskStatus('pending'),\r\n      color: \"#a37f08\"\r\n    },\r\n    {\r\n      name: \"In Progress\",\r\n      status: 'inProgress',\r\n      length: findTaskStatus('inProgress'),\r\n      color: \"#7038db\"\r\n    },\r\n    {\r\n      name: \"Todo\",\r\n      status: 'todo',\r\n      length: findTaskStatus('todo'),\r\n      color: \"#1f7eeb\"\r\n    },\r\n    {\r\n      name: \"On Hold\",\r\n      status: 'onHold',\r\n      length: findTaskStatus('onHold'),\r\n      color: \"#DB5436\"\r\n    },\r\n  ]\r\n  const navigateTo = {\r\n    Lead: '/lead',\r\n    Contact: '/contacts',\r\n    Meeting: '/metting',\r\n    Call: '/phone-call',\r\n    Task: '/task',\r\n    Email: '/email',\r\n    Property: '/properties',\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [user?._id]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} gap=\"20px\" mb=\"20px\">\r\n        {/* , \"2xl\": 6 */}\r\n        {(taskView?.create || taskView?.update || taskView?.delete || taskView?.view) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/task\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg=\"linear-gradient(90deg, #4481EB 0%, #04BEFE 100%)\"\r\n                icon={<Icon w=\"28px\" h=\"28px\" as={MdAddTask} color=\"white\" />}\r\n              />\r\n            }\r\n            name=\"Tasks\"\r\n            value={findModuleData(\"Tasks\")}\r\n          />}\r\n        {(contactsView?.create || contactsView?.update || contactsView?.delete || contactsView?.view) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/contacts\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg={boxBg}\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={MdContacts} color={brandColor} />\r\n                }\r\n              />\r\n            }\r\n            name=\"Contacts\"\r\n            value={findModuleData(\"Contacts\")}\r\n          />}\r\n        {(leadView?.create || leadView?.update || leadView?.delete || leadView?.view) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/lead\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg={boxBg}\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={MdLeaderboard} color={brandColor} />\r\n                }\r\n              />\r\n            }\r\n            name=\"Leads\"\r\n            value={findModuleData(\"Leads\")}\r\n          />}\r\n        {(proprtyView?.create || proprtyView?.update || proprtyView?.delete || proprtyView?.view) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/properties\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg={boxBg}\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={LuBuilding2} color={brandColor} />\r\n                }\r\n              />\r\n            }\r\n            name=\"Property\"\r\n            value={findModuleData(\"Properties\")}\r\n          />}\r\n      </SimpleGrid>\r\n\r\n      <Grid Grid templateColumns=\"repeat(12, 1fr)\" gap={3} >\r\n\r\n        <GridItem rowSpan={2} colSpan={{ base: 12, md: 6 }}>\r\n          <Card>\r\n            <Flex mb={3} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n              <Heading size=\"md\">Email and Call Report</Heading>\r\n              <IconButton\r\n                color={\"green.500\"}\r\n                onClick={() => navigate(\"/reporting-analytics\")}\r\n                aria-label=\"Call Fred\"\r\n                borderRadius=\"10px\"\r\n                size=\"md\"\r\n                icon={<ViewIcon />}\r\n              />\r\n            </Flex>\r\n            <HSeparator />\r\n            <ReportChart dashboard={\"dashboard\"} />\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem rowSpan={2} colSpan={{ base: 12, md: 6 }}>\r\n          <Card>\r\n            <Flex mb={5} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n              <Heading size=\"md\">Module Data Report</Heading>\r\n\r\n            </Flex>\r\n            <Box mb={3}>\r\n              <HSeparator />\r\n            </Box>\r\n            <Chart dashboard={\"dashboard\"} data={data} />\r\n          </Card>\r\n        </GridItem>\r\n      </Grid>\r\n      <SimpleGrid gap=\"20px\" columns={{\r\n        base: 1, md: (leadView?.create || leadView?.update || leadView?.delete || leadView?.view) && (taskView?.create || taskView?.update || taskView?.delete || taskView?.view) ? 2 : 2, lg:\r\n          (leadView?.create || leadView?.update || leadView?.delete || leadView?.view) && (taskView?.create || taskView?.update || taskView?.delete || taskView?.view) ? 3 : 2\r\n      }} my=\"20px\">\r\n\r\n        <Card >\r\n          <Heading size=\"md\" pb={3}>Statistics</Heading>\r\n\r\n          {\r\n            !isLoding ?\r\n              data && data.length > 0 && data?.map((item, i) => (\r\n                <>\r\n                  <Box border={\"1px solid #e5e5e5\"} p={2} m={1} cursor={'pointer'} key={i} onClick={() => navigate(navigateTo[item.name])}>\r\n                    <Flex justifyContent={\"space-between\"}>\r\n                      <Text fontSize=\"sm\" fontWeight={600} pb={2}>{item?.name}</Text>\r\n                      <Text fontSize=\"sm\" fontWeight={600} pb={2}><CountUpComponent targetNumber={item?.length} /></Text>\r\n                    </Flex>\r\n                    <Progress\r\n                      colorScheme={item?.color}\r\n                      size='xs' value={item?.length} width={\"100%\"} />\r\n                  </Box>\r\n                </>\r\n\r\n              )) : <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><Spinner /></div>\r\n          }\r\n        </Card>\r\n\r\n        {(leadView?.create || leadView?.update || leadView?.delete || leadView?.view) && <Card>\r\n          <Heading size=\"md\" pb={2}>Lead Statistics</Heading>\r\n          {(leadView?.create || leadView?.update || leadView?.delete || leadView?.view) &&\r\n            <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#ebf5ff\"}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead')}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#1f7eeb\"}>Total Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#1f7eeb\"}><CountUpComponent targetNumber={allData?.leadData?.length || 0} /> </Text>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#eaf9e6\"}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead', { state: 'active' })}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#43882f\"} >Active Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#43882f\"}><CountUpComponent targetNumber={findLeadStatus(\"active\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#fbf4dd\"}\r\n                  onClick={() => navigate('/lead', { state: 'pending' })}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#a37f08\"}>Pending Leads</Heading>\r\n                  <Text fontWeight={600} color={\"#a37f08\"}><CountUpComponent targetNumber={findLeadStatus(\"pending\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#ffeeeb\"}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead', { state: 'sold' })}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#d6401d\"}>Sold Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#d6401d\"}><CountUpComponent targetNumber={findLeadStatus(\"sold\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n            </Grid>\r\n          }\r\n          <Flex justifyContent={\"center\"}  >\r\n            <PieChart leadData={allData?.leadData} />\r\n          </Flex>\r\n\r\n        </Card>}\r\n\r\n        {(taskView?.create || taskView?.update || taskView?.delete || taskView?.view) && <Card >\r\n          <Heading size=\"md\" pb={3}>Task Statistics</Heading>\r\n          <Grid templateColumns=\"repeat(12, 1fr)\" gap={2} mb={2}>\r\n            <GridItem colSpan={{ base: 12 }}>\r\n              <Box backgroundColor={\"#ebf5ff\"}\r\n                onClick={() => navigate('/task')}\r\n                borderRadius={\"10px\"} cursor={'pointer'}\r\n                p={2} m={1} textAlign={\"center\"}>\r\n                <Heading size=\"sm\" pb={3} color={\"#1f7eeb\"}>Total Tasks </Heading>\r\n                <Text fontWeight={600} color={\"#1f7eeb\"}><CountUpComponent targetNumber={allData?.taskData?.length || 0} /></Text>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          {taskStatus && taskStatus.length > 0 && taskStatus?.map((item) => (\r\n            <Box my={1.5}>\r\n              {/* <Flex justifyContent={\"space-between\"} cursor={'pointer'} onClick={() => navigate('/task', { state: item.status })} alignItems={\"center\"} padding={4} backgroundColor={\"#0b0b0b17\"} borderRadius={\"10px\"}> */}\r\n              <Flex justifyContent={\"space-between\"} cursor={'pointer'} alignItems={\"center\"} padding={4} backgroundColor={\"#0b0b0b17\"} borderRadius={\"10px\"}>\r\n                <Flex alignItems={\"center\"}>\r\n                  <Box height={\"18px\"} width={\"18px\"} lineHeight={\"18px\"} textAlign={\"center\"} border={`1px solid ${item.color}`} display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} margin={\"0 auto\"} >\r\n                    <Box backgroundColor={`${item.color}`} height={\"10px\"} width={\"10px\"} borderRadius={\"50%\"}></Box>\r\n                  </Box>\r\n\r\n                  <Text ps={2} fontWeight={\"bold\"} color={`${item.color}`}>{item.name}</Text>\r\n\r\n                </Flex>\r\n                <Box fontWeight={\"bold\"} color={`${item.color}`}><CountUpComponent targetNumber={item?.length} /></Box>\r\n              </Flex>\r\n            </Box>\r\n          ))}\r\n        </Card>}\r\n      </SimpleGrid>\r\n\r\n    </>\r\n  );\r\n}\r\n","import { Box, Grid, Radio, RadioGroup, Select, Stack } from '@chakra-ui/react';\r\nimport Card from \"components/card/Card\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { postApi } from \"services/api\";\r\n\r\n\r\nconst ReportChart = (props) => {\r\n    const { dashboard } = props;\r\n    const [reportChart, setReportChart] = useState({})\r\n    const [startDate, setStartDate] = useState(new Date(new Date() - 14 * 24 * 60 * 60 * 1000));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [select, setSelect] = useState('all');\r\n    const [selection, setSelection] = useState('day');\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n\r\n    const featchChart = async () => {\r\n        const data = {\r\n            startDate: moment(startDate).format('YYYY-MM-DD'),\r\n            endDate: moment(endDate).format('YYYY-MM-DD'),\r\n            filter: selection\r\n        }\r\n        let result = await postApi(user.role === 'superAdmin' ? 'api/reporting/index' : `api/reporting/index?sender=${user._id}`, data);\r\n        if (result && result.status === 200) {\r\n            setReportChart(result?.data)\r\n        }\r\n    }\r\n\r\n    const options = {\r\n        chart: {\r\n            id: 'line-chart',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Count',\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        }\r\n    };\r\n\r\n    const series = Object.keys(reportChart).map((key) => {\r\n        const dataSet = reportChart[key][0];\r\n        let seriesData = [];\r\n\r\n        if (dataSet?.Emails) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.Emails?.map((item) => ({ x: item?.date, y: item?.Emailcount }))\r\n            );\r\n        }\r\n        if (dataSet?.Calls) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.Calls?.map((item) => ({ x: item?.date, y: item?.Callcount }))\r\n            );\r\n        }\r\n        if (dataSet?.TextMsges) {\r\n            seriesData = seriesData.concat(\r\n                dataSet?.TextMsges?.map((item) => ({ x: item?.date, y: item?.TextSentCount }))\r\n            );\r\n        }\r\n\r\n        return {\r\n            name: key,\r\n            data: seriesData,\r\n        };\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        featchChart()\r\n    }, [startDate, endDate, selection])\r\n\r\n\r\n    const selectedSeries = select === 'all' ? series : series?.filter(series => series?.name === select);\r\n    return (\r\n        <Card>\r\n            {!dashboard &&\r\n                <Box display='flex' alignItems='center' flexWrap={'wrap'} justifyContent='space-between' mb={4}>\r\n                    <Select value={select} onChange={(e) => setSelect(e.target.value)} size='sm' width={{ base: '100%', md: '15%' }} mb={{ base: 3, md: 'auto' }}>\r\n                        <option value='all'>All</option>\r\n                        <option value='EmailDetails'>Email</option>\r\n                        <option value='outboundcall'>Call</option>\r\n                    </Select>\r\n                    <Box width={{ base: '100%', md: 'auto' }} flexWrap={'wrap'} justifyContent={'left'} mb={{ base: 3, md: 'auto' }} display='flex'>\r\n                        <ReactDatePicker selected={startDate} onChange={(date) => setStartDate(date)} className='datePickerBorder' />\r\n                        <ReactDatePicker selected={endDate} onChange={(date) => setEndDate(date)} className='datePickerBorder' />\r\n                    </Box>\r\n                    <Box width={{ base: '100%', md: 'auto' }} display={'flex'} justifyContent={'right'} mb={{ base: 3, md: 'auto' }}>\r\n                        <RadioGroup onChange={(e) => setSelection(e)} value={selection}>\r\n                            <Stack direction='row'>\r\n                                <Radio value='day' >Daily</Radio>\r\n                                <Radio value='week'>Weekly</Radio>\r\n                            </Stack>\r\n                        </RadioGroup>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n            <div id=\"chart\">\r\n                <div id=\"chart-timeline\">\r\n                    {selectedSeries && (\r\n                        <ReactApexChart\r\n                            options={options}\r\n                            series={selectedSeries}\r\n                            type='area'\r\n                            height={300}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReportChart\r\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_excluded2","StatLabel","forwardRef","props","ref","styles","useStyles","React","chakra","dt","className","cx","__css","label","__DEV__","displayName","StatHelpText","dd","helpText","StatNumber","number","fontFeatureSettings","fontVariantNumeric","StatDownArrow","Icon","color","fill","d","StatUpArrow","Stat","useMultiStyleConfig","statStyles","position","flex","container","_omitThemingProps","omitThemingProps","children","rest","StylesProvider","value","div","StatGroup","role","display","flexWrap","justifyContent","alignItems","Default","startContent","endContent","name","growth","textColor","useColorModeValue","_jsx","Card","cursor","py","onClick","_jsxs","Flex","my","h","align","base","xl","justify","ms","lineHeight","fontSize","fontsize","CountUpComponent","targetNumber","Text","fontWeight","me","w","IconBox","icon","_objectWithoutProperties","_excluded","_objectSpread","borderRadius","keyframes","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","_options$value","min","max","valueText","getValueText","isIndeterminate","percent","valueToPercent","bind","undefined","isFunction","getAriaValueText","_excluded$1","Circle","circle","cy","r","Shape","size","svg","viewBox","width","height","animation","CircularProgressLabel","baseStyle","top","textAlign","ProgressFilledTrack","trackStyles","filledTrack","style","Progress","_styles$track","_omitThemingProps$min","_omitThemingProps$max","hasStripe","isAnimated","propBorderRadius","ariaLabel","ariaLabelledBy","track","css","willChange","minWidth","overflow","data","permissions","permissionsLength","forEach","item","push","state","series","map","chart","type","plotOptions","bar","columnWidth","stroke","grid","row","colors","xaxis","categories","tickPlacement","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","id","ReactApexChart","_leadData$filter","_leadData$filter2","_leadData$filter3","leadData","filter","lead","leadStatus","scaledSeries","NaN","radialBar","inverseOrder","hollow","margin","background","dataLabels","total","show","formatter","val","toFixed","startAngle","endAngle","hover","sizeOffset","lineCap","labels","legend","floating","UserReports","_allData$leadData2","_allData$taskData2","brandColor","boxBg","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","useState","allData","setAllData","setData","navigate","useNavigate","contactsView","taskView","leadView","proprtyView","HasAccess","useEffect","async","result","getApi","concat","_id","status","fetchProgressChart","findModuleData","title","filterData","find","findLeadStatus","_allData$leadData","findTaskStatus","_allData$taskData","taskData","taskStatus","navigateTo","Lead","Contact","Meeting","Call","Task","Email","Property","_responseData$data","responseData","fetchData","_Fragment","SimpleGrid","columns","md","lg","gap","mb","create","update","delete","view","MiniStatistics","bg","as","MdAddTask","MdContacts","MdLeaderboard","LuBuilding2","Grid","templateColumns","GridItem","rowSpan","colSpan","Heading","IconButton","ViewIcon","HSeparator","ReportChart","dashboard","Box","Chart","pb","Spinner","border","p","m","colorScheme","backgroundColor","PieChart","padding","ps","reportChart","setReportChart","startDate","setStartDate","Date","endDate","setEndDate","select","setSelect","selection","setSelection","dataSet","seriesData","_dataSet$Emails","_dataSet$Calls","_dataSet$TextMsges","Emails","x","date","y","Emailcount","Calls","Callcount","TextMsges","TextSentCount","moment","format","postApi","featchChart","selectedSeries","Select","onChange","e","ReactDatePicker","selected","RadioGroup","Stack","direction","Radio","yaxis","text","enabled"],"sourceRoot":""}