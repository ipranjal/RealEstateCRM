{"version":3,"file":"static/js/93.5f5457fa.chunk.js","mappings":"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","sources":["views/admin/phoneCall/View.js"],"sourcesContent":["import { Box, Button, Flex, Grid, GridItem, Heading, Text } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport { getApi } from \"services/api\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/phoneCall/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const [contactAccess, leadAccess] = HasAccess(['Contacts', 'Leads'])\r\n\r\n    return (\r\n        <>\r\n\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                                                <Heading size=\"md\" mb={3}>\r\n                                                    Call View page\r\n                                                </Heading>\r\n                                                <Link to=\"/phone-call\" >\r\n                                                    <Button mb={\"5px\"} size=\"sm\" leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                                        Back\r\n                                                    </Button>\r\n                                                </Link>\r\n\r\n                                            </Box>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                            <Text>{data?.senderName ? data?.senderName : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\r\n                                            <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create to </Text>\r\n                                            {data?.createBy ?\r\n                                                <Link to={contactAccess?.view && `/contactView/${data?.createBy}`}>\r\n                                                    <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                                </Link> : <Link to={leadAccess?.view && `/leadView/${data?.createByLead}`}>\r\n                                                    <Text color={leadAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: leadAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: leadAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                                </Link>\r\n                                            }\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\r\n                                            <Text>{data?.createBy ? \"contact\" : data?.createByLead && \"lead\"}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\r\n                                            <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\r\n                                            <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Duration </Text>\r\n                                            <Text>{data?.callDuration ? data?.callDuration : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Notes </Text>\r\n                                            <pre style={{ whiteSpace: 'pre-wrap' }}>{data?.callNotes ? data?.callNotes : ' - '}</pre>\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n                </>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["View","param","useParams","data","setData","useState","isLoding","setIsLoding","JSON","parse","localStorage","getItem","useEffect","async","response","getApi","id","fetchData","contactAccess","leadAccess","HasAccess","_jsx","_Fragment","children","Flex","justifyContent","alignItems","width","Spinner","Grid","templateColumns","gap","GridItem","colSpan","base","Card","_jsxs","Box","display","Heading","size","mb","Link","to","Button","leftIcon","IoIosArrowBack","variant","HSeparator","md","Text","fontSize","fontWeight","color","senderName","recipient","createBy","view","concat","sx","textDecoration","createByName","createByLead","startDate","moment","format","endDate","timestamp","toNow","callDuration","style","whiteSpace","callNotes"],"sourceRoot":""}