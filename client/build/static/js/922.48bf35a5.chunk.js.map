{"version":3,"file":"static/js/922.48bf35a5.chunk.js","mappings":"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","sources":["views/admin/opportunityproject/components/ImportModal.js","views/admin/opportunityproject/index.js","components/commonFileUpload/index.js","components/commonTableModel/ContactModel.js"],"sourcesContent":["import {\n  Button,\n  Grid,\n  GridItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonFileUpload from \"components/commonFileUpload\";\n\nconst ImportModal = (props) => {\n  const { onClose, isOpen, text } = props;\n  const [isLoding, setIsLoding] = useState(false);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    opportunityproject: \"\",\n  };\n\n  const customFields = [\n    {\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      fixed: false,\n      isDefault: false,\n      editable: true,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n        },\n      ],\n      validation: [\n        {\n          require: true,\n          message: \"\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n        },\n        {\n          message: \"\",\n          formikType: \"\",\n        },\n      ],\n    },\n    {\n      name: \"requirement\",\n      label: \"Requirement\",\n      type: \"text\",\n      fixed: false,\n      isDefault: false,\n      editable: true,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n        },\n      ],\n      validation: [\n        {\n          require: false,\n          message: \"\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n        },\n        {\n          message: \"\",\n          formikType: \"\",\n        },\n      ],\n    },\n  ];\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values, { resetForm }) => {\n      AddData();\n      resetForm();\n    },\n  });\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      resetForm();\n      if (values?.opportunityproject) {\n        onClose();\n        navigate(\"/opportunityProjectImport\", {\n          state: {\n            fileData: values?.opportunityproject,\n            customFields: customFields,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <>\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Import Opportunity Project</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n              <GridItem colSpan={{ base: 12 }}>\n                <CommonFileUpload\n                  count={values?.opportunityproject?.length}\n                  onFileSelect={(file) =>\n                    setFieldValue(\"opportunityproject\", file)\n                  }\n                  text={text}\n                />\n                <Text mb=\"10px\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.opportunityproject &&\n                    touched?.opportunityproject && <>Please Select {text}</>}\n                </Text>\n              </GridItem>\n            </Grid>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"brand\"\n              size=\"sm\"\n              onClick={handleSubmit}\n              disabled={isLoding ? true : false}\n            >\n              {isLoding ? <Spinner /> : \"Save\"}\n            </Button>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"red\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              size=\"sm\"\n              onClick={() => {\n                onClose();\n                formik.resetForm();\n              }}\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImportModal;\n","import { DeleteIcon, EditIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Grid,\n  GridItem,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { useEffect, useState } from \"react\";\nimport { CiMenuKebab } from \"react-icons/ci\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { deleteManyApi } from \"services/api\";\nimport CommonCheckTable from \"../../../components/reactTable/checktable\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport { fetchOpportunityProjectData } from \"../../../redux/slices/opportunityprojectSlice\";\nimport Editopportunityproject from \"./Editopportunityproject\";\nimport ImportModal from \"./components/ImportModal\";\n\nconst Index = () => {\n  const title = \"Opportunity Project\";\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [permission] = HasAccess([\"Opportunity Project\"]);\n\n  const [isLoding, setIsLoding] = useState(false);\n  const [searchDisplay, setSearchDisplay] = useState(false);\n  const [action, setAction] = useState(false);\n  const [opportunityproject, setOpportunityProject] = useState([]);\n  const [deleteMany, setDeleteMany] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [selectedId, setSelectedId] = useState();\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isImport, setIsImport] = useState(false);\n  const [userAction, setUserAction] = useState(\"\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const data = useSelector((state) => state?.opportunityProjectData?.data);\n  const searchedDataOut = useSelector(\n    (state) => state?.advanceSearchData?.searchResult,\n  );\n\n  const fetchData = async () => {\n    setIsLoding(true);\n    dispatch(fetchOpportunityProjectData());\n    setIsLoding(false);\n  };\n\n  const actionHeader = {\n    Header: \"Action\",\n    accessor: \"action\",\n    isSortable: false,\n    center: true,\n    cell: ({ row, i }) => (\n      <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n        <Menu isLazy>\n          <MenuButton>\n            <CiMenuKebab />\n          </MenuButton>\n          <MenuList\n            minW={\"fit-content\"}\n            transform={\"translate(1520px, 173px);\"}\n          >\n            {permission?.update && (\n              <MenuItem\n                py={2.5}\n                icon={<EditIcon fontSize={15} mb={1} />}\n                onClick={() => {\n                  onOpen();\n                  setUserAction(\"edit\");\n                  setEditData(row?.original);\n                  setSelectedId(row?.values?._id);\n                }}\n              >\n                Edit\n              </MenuItem>\n            )}\n            {permission?.view && (\n              <MenuItem\n                py={2.5}\n                color={\"green\"}\n                icon={<ViewIcon mb={1} fontSize={15} />}\n                onClick={() => {\n                  navigate(`/opportunityprojectView/${row?.values?._id}`, {\n                    state: { OpportunityList: data },\n                  });\n                }}\n              >\n                View\n              </MenuItem>\n            )}\n            {permission?.delete && (\n              <MenuItem\n                py={2.5}\n                color={\"red\"}\n                icon={<DeleteIcon fontSize={15} mb={1} />}\n                onClick={() => {\n                  setDeleteMany(true);\n                  setSelectedValues([row?.values?._id]);\n                }}\n              >\n                Delete\n              </MenuItem>\n            )}\n          </MenuList>\n        </Menu>\n      </Text>\n    ),\n  };\n  const tempTableColumns = [\n    { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n    {\n      Header: \"Name\",\n      accessor: \"name\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text\n            onClick={() =>\n              navigate(`/opportunityprojectView/${cell?.row?.original._id}`, {\n                state: { OpportunityList: data },\n              })\n            }\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n              cursor: \"pointer\",\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"Requirement\", accessor: \"requirement\" },\n    ...(permission?.update || permission?.view || permission?.delete\n      ? [actionHeader]\n      : []),\n  ];\n\n  const handleDeleteOpportunity = async (ids) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteManyApi(\"api/task/deleteMany\", ids);\n      if (response?.status === 200) {\n        setSelectedValues([]);\n        setDeleteMany(false);\n        setAction((pre) => !pre);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  useEffect(() => {\n    if (window?.location?.pathname === \"/opportunityproject\") {\n      fetchData();\n    }\n  }, [action]);\n\n  const handleOpen = () => {\n    setUserAction(\"add\");\n    onOpen();\n  };\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleDeleteClick = async () => {\n    try {\n      setIsLoding(true);\n      let response = await deleteManyApi(\n        `api/opportunityproject/deleteMany`,\n        selectedValues,\n      );\n      if (response?.status === 200) {\n        setSelectedValues([]);\n        setDeleteMany(false);\n        setAction((pre) => !pre);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={4}>\n        {!isLoding && (\n          <GridItem colSpan={6}>\n            <CommonCheckTable\n              title={title}\n              isLoding={isLoding}\n              searchDisplay={searchDisplay}\n              setSearchDisplay={setSearchDisplay}\n              columnData={tempTableColumns ?? []}\n              allData={data ?? []}\n              AdvanceSearch={false}\n              tableData={searchDisplay ? searchedDataOut : data}\n              tableCustomFields={\n                opportunityproject?.[0]?.fields?.filter(\n                  (field) => field?.isTableField === true,\n                ) || []\n              }\n              access={permission}\n              action={action}\n              setAction={setAction}\n              isOpen={isOpen}\n              onClose={onclose}\n              onOpen={handleOpen}\n              selectedValues={selectedValues}\n              setSelectedValues={setSelectedValues}\n              setDelete={setDeleteMany}\n              setIsImport={setIsImport}\n            />\n            <Editopportunityproject\n              isOpen={isOpen}\n              onClose={handleClose}\n              data={editData}\n              selectedId={selectedId}\n              action={action}\n              setAction={setAction}\n              userAction={userAction}\n              fetchData={fetchData}\n            />\n            <CommonDeleteModel\n              isOpen={deleteMany}\n              onClose={() => setDeleteMany(false)}\n              type=\"Opportunity Project\"\n              handleDeleteData={handleDeleteClick}\n              ids={selectedValues}\n            />\n            <ImportModal\n              text=\"Opportunity Project file\"\n              isOpen={isImport}\n              onClose={setIsImport}\n              customFields={[]}\n            />\n          </GridItem>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Index;\n","// Chakra imports\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Icon,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function CommonFileUpload(props) {\n  // const { used, total, count, ...rest } = props;\n  const { count, text, onFileSelect } = props;\n  // Chakra Color Mode\n  const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  return (\n    <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n      <GridItem colSpan={{ base: 12 }}>\n        <Dropzone\n          w={{ base: \"100%\" }}\n          me=\"36px\"\n          minH={200}\n          img={text === \"Property Photos\" ? \"img\" : \"\"}\n          csv={\"csv\"}\n          height={\"100%\"}\n          onFileSelect={onFileSelect}\n          isMultipleAllow={false}\n          content={\n            <Box>\n              <Icon as={MdUpload} w=\"80px\" h=\"80px\" color={brandColor} />\n              <Flex justify=\"center\" mx=\"auto\" mb=\"12px\">\n                <Text fontSize=\"xl\" fontWeight=\"700\" color={brandColor}>\n                  Upload File\n                </Text>\n              </Flex>\n              {count > 0 && (\n                <Text fontSize=\"sm\" fontWeight=\"500\" color=\"secondaryGray.500\">\n                  Selected Files : {count}\n                </Text>\n              )}\n            </Box>\n          }\n        />\n      </GridItem>\n      <GridItem colSpan={{ base: 12 }}>\n        <Flex direction=\"column\">\n          <Text\n            color={textColorPrimary}\n            fontWeight=\"bold\"\n            textAlign=\"start\"\n            fontSize=\"2xl\"\n            mt={{ base: \"20px\" }}\n          >\n            Upload {text}\n          </Text>\n          <Text\n            color={textColorSecondary}\n            fontSize=\"md\"\n            my={{ base: \"auto\" }}\n            mx=\"auto\"\n            textAlign=\"start\"\n          >\n            Accepted File Type (csv, xlsx file - 15MB max) only 1 file\n          </Text>\n        </Flex>\n      </GridItem>\n    </Grid>\n  );\n}\n","import {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport ContactTable from \"./Contact.js\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { GiClick } from \"react-icons/gi\";\nimport CommonCheckTable from \"components/reactTable/checktable.js\";\nimport { fetchContactCustomFiled } from \"../../redux/slices/contactCustomFiledSlice.js\";\nimport { fetchContactData } from \"../../redux/slices/contactSlice.js\";\nimport { useDispatch } from \"react-redux\";\n\nconst ContactModel = (props) => {\n  const { onClose, isOpen, fieldName, setFieldValue, data } = props;\n  const [selectedValues, setSelectedValues] = useState();\n  const [contactData, setContactData] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async () => {\n    try {\n      setIsLoding(true);\n      setFieldValue(fieldName, selectedValues);\n      onClose();\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchContactCustomFiled());\n    setContactData(result?.payload?.data);\n\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...(result?.payload?.data?.[0]?.fields || [])\n        .filter((field) => field?.isTableField === true)\n        .map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n  useEffect(async () => {\n    await dispatch(fetchContactData());\n    fetchCustomDataFields();\n  }, []);\n  return (\n    <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Select Contact</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {isLoding ? (\n            <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n              <Spinner />\n            </Flex>\n          ) : (\n            <CommonCheckTable\n              title={\"Contacts\"}\n              isLoding={isLoding}\n              columnData={columns ?? []}\n              // dataColumn={columns ?? []}\n              allData={data ?? []}\n              tableData={data}\n              tableCustomFields={\n                contactData?.[0]?.fields?.filter(\n                  (field) => field?.isTableField === true,\n                ) || []\n              }\n              AdvanceSearch={() => \"\"}\n              ManageGrid={false}\n              deleteMany={false}\n              selectedValues={selectedValues}\n              setSelectedValues={setSelectedValues}\n              selectType=\"single\"\n              customSearch={false}\n            />\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"brand\"\n            size=\"sm\"\n            me={2}\n            onClick={handleSubmit}\n            disabled={isLoding ? true : false}\n            leftIcon={<GiClick />}\n          >\n            {\" \"}\n            {isLoding ? <Spinner /> : \"Select\"}\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            colorScheme=\"red\"\n            onClick={() => onClose()}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ContactModel;\n"],"names":["props","_values$opportunitypr","onClose","isOpen","text","isLoding","setIsLoding","useState","navigate","useNavigate","customFields","name","label","type","fixed","isDefault","editable","delete","belongsTo","backendType","isTableField","isView","options","value","validation","require","message","min","max","match","formikType","formik","useFormik","initialValues","opportunityproject","onSubmit","values","_ref","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","state","fileData","e","console","log","_jsx","_Fragment","children","_jsxs","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Grid","templateColumns","gap","GridItem","colSpan","base","CommonFileUpload","count","length","onFileSelect","file","Text","mb","color","ModalFooter","Button","variant","size","onClick","disabled","Spinner","colorScheme","sx","marginLeft","textTransform","Index","_opportunityproject$","_opportunityproject$$","dispatch","useDispatch","permission","HasAccess","searchDisplay","setSearchDisplay","action","setAction","setOpportunityProject","deleteMany","setDeleteMany","editData","setEditData","selectedId","setSelectedId","selectedValues","setSelectedValues","isImport","setIsImport","userAction","setUserAction","onOpen","useDisclosure","data","useSelector","_state$opportunityPro","opportunityProjectData","searchedDataOut","_state$advanceSearchD","advanceSearchData","searchResult","fetchData","fetchOpportunityProjectData","actionHeader","Header","accessor","isSortable","center","cell","row","i","fontSize","fontWeight","textAlign","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","original","_id","view","ViewIcon","_row$values2","OpportunityList","DeleteIcon","_row$values3","tempTableColumns","width","className","_cell$row","me","textDecoration","cursor","useEffect","_window","_window$location","window","location","pathname","CommonCheckTable","title","columnData","allData","AdvanceSearch","tableData","tableCustomFields","fields","filter","field","access","onclose","handleOpen","setDelete","Editopportunityproject","handleClose","CommonDeleteModel","handleDeleteData","response","deleteManyApi","status","pre","error","ids","ImportModal","textColorPrimary","useColorModeValue","brandColor","Dropzone","w","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","Flex","justify","mx","direction","mt","my","_contactData$","_contactData$$fields","fieldName","contactData","setContactData","columns","setColumns","fetchContactData","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","result","fetchContactCustomFiled","payload","map","fetchCustomDataFields","justifyContent","alignItems","ManageGrid","selectType","customSearch","leftIcon","GiClick"],"sourceRoot":""}