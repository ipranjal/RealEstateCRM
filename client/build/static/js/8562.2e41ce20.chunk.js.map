{"version":3,"file":"static/js/8562.2e41ce20.chunk.js","mappings":"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","sources":["views/admin/opportunities/View.js"],"sourcesContent":["import {\n  Button,\n  Grid,\n  GridItem,\n  Flex,\n  IconButton,\n  Text,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  Box,\n  Heading,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\nimport {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BiLink } from \"react-icons/bi\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Card from \"components/card/Card\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport AddEdit from \"./AddEdit\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteManyApi, putApi, getApi } from \"../../../services/api\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { opprtunitiesSchema } from \"../../../schema/opprtunitiesSchema\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { toast } from \"react-toastify\";\n\nconst View = (props) => {\n  const params = useParams();\n  const { id } = params;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const [opportunityAccess, accountAccess] = HasAccess([\n    \"Opportunities\",\n    \"Account\",\n  ]);\n\n  const [data, setData] = useState();\n  const { onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [deleteManyModel, setDeleteManyModel] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const [type, setType] = useState(\"\");\n  const [editableField, setEditableField] = useState(null);\n  const [editableFieldName, setEditableFieldName] = useState(null);\n  const today = new Date()?.toISOString()?.split(\"T\")[0];\n  const todayTime = new Date()?.toISOString()?.split(\".\")[0];\n  const fetchViewData = async () => {\n    if (id) {\n      let result = await getApi(\"api/opportunity/view/\", id);\n      setData(result?.data);\n    }\n  };\n  const generatePDF = () => {\n    setLoading(true);\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n\n    if (element) {\n      hideBtn.style.display = \"none\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `Opportunities_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          setLoading(false);\n          hideBtn.style.display = \"\";\n        });\n      // }, 500);\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n      setLoading(false);\n    }\n  };\n  const handleDeleteOpportunities = async (ids) => {\n    try {\n      let response = await deleteManyApi(\"api/opportunities/deleteMany\", ids);\n      if (response?.status === 200) {\n        navigate(\"/opportunities\");\n        toast.success(`Opprtunities Delete successfully`);\n        setDeleteManyModel(false);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(`server error`);\n    }\n  };\n\n  const initialValues = {\n    opportunityName: data?.opportunityName,\n    accountName: data?.accountName,\n    assignUser: data?.assignUser,\n    type: data?.type,\n    leadSource: data?.leadSource,\n    currency: data?.currency,\n    opportunityAmount: data?.opportunityAmount,\n    amount: data?.amount,\n    expectedCloseDate: data?.expectedCloseDate,\n    nextStep: data?.nextStep,\n    salesStage: data?.salesStage,\n    probability: data?.probability,\n    description: data?.description,\n    modifiedBy: JSON.parse(localStorage.getItem(\"user\"))._id,\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: opprtunitiesSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, { resetForm }) => {\n      setEditableField(null);\n      const payload = {\n        ...values,\n        modifiedDate: new Date(),\n      };\n      let response = await putApi(`api/opportunity/edit/${id}`, payload);\n      if (response?.status === 200) {\n        fetchViewData();\n        toast.success(`${editableFieldName} Update successfully`);\n      } else {\n        toast.error(`${editableFieldName} not Update`);\n      }\n    },\n  });\n  const handleDoubleClick = (fieldName, value, name) => {\n    formik.setFieldValue(fieldName, value);\n    setEditableField(fieldName);\n    setEditableFieldName(name);\n  };\n\n  const handleBlur = (e) => {\n    formik.handleSubmit();\n  };\n  useEffect(() => {\n    fetchViewData();\n  }, [id, edit]);\n\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n        <GridItem colSpan={{ base: 4 }}>\n          <Heading size=\"lg\" m={3}>\n            {data?.opportunityName || \"\"}\n          </Heading>\n        </GridItem>\n        <GridItem colSpan={{ base: 4 }}>\n          <Card>\n            <Grid gap={4}>\n              <GridItem colSpan={2}>\n                <Box>\n                  <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Flex id=\"hide-btn\">\n                      <Heading size=\"md\" mb={3}>\n                        Opportunities Details\n                      </Heading>\n                      <Menu>\n                        {(user.role === \"superAdmin\" ||\n                          opportunityAccess?.create ||\n                          opportunityAccess?.update ||\n                          opportunityAccess?.delete) && (\n                          <MenuButton\n                            variant=\"outline\"\n                            colorScheme=\"blackAlpha\"\n                            size=\"sm\"\n                            va\n                            mr={2.5}\n                            as={Button}\n                            rightIcon={<ChevronDownIcon />}\n                          >\n                            Actions\n                          </MenuButton>\n                        )}\n                        <MenuDivider />\n                        <MenuList minWidth={2}>\n                          {(user?.role === \"superAdmin\" ||\n                            opportunityAccess?.create) && (\n                            <MenuItem\n                              onClick={() => {\n                                setEdit(true);\n                                setType(\"add\");\n                                formik.resetForm();\n                              }}\n                              alignItems={\"start\"}\n                              color={\"blue\"}\n                              icon={<AddIcon />}\n                            >\n                              Add\n                            </MenuItem>\n                          )}\n                          {(user?.role === \"superAdmin\" ||\n                            opportunityAccess?.update) && (\n                            <MenuItem\n                              onClick={() => {\n                                setEdit(true);\n                                setType(\"edit\");\n                              }}\n                              alignItems={\"start\"}\n                              icon={<EditIcon />}\n                            >\n                              Edit\n                            </MenuItem>\n                          )}\n                          <MenuItem\n                            onClick={generatePDF}\n                            alignItems={\"start\"}\n                            icon={<FaFilePdf />}\n                            display={\"flex\"}\n                            style={{ alignItems: \"center\" }}\n                          >\n                            Print as PDF\n                          </MenuItem>\n\n                          {(user?.role === \"superAdmin\" ||\n                            opportunityAccess?.delete) && (\n                            <>\n                              <MenuDivider />\n                              <MenuItem\n                                alignItems={\"start\"}\n                                onClick={() => setDeleteManyModel(true)}\n                                color={\"red\"}\n                                icon={<DeleteIcon />}\n                              >\n                                Delete\n                              </MenuItem>\n                            </>\n                          )}\n                        </MenuList>\n                      </Menu>\n                      <Button\n                        leftIcon={<IoIosArrowBack />}\n                        size=\"sm\"\n                        variant=\"brand\"\n                        onClick={() => navigate(-1)}\n                      >\n                        Back\n                      </Button>\n                    </Flex>\n                  </Box>\n                  <HSeparator />\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Opportunity Name{\" \"}\n                </Text>\n                {editableField === \"opportunityName\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"opportunityName\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.opportunityName}\n                      borderColor={\n                        formik?.errors?.opportunityName &&\n                        formik?.touched?.opportunityName\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.opportunityName &&\n                        formik?.touched?.opportunityName &&\n                        formik?.errors?.opportunityName}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"opportunityName\",\n                        data?.opportunityName,\n                        \"Opportunity Name\",\n                      )\n                    }\n                  >\n                    {data?.opportunityName ? data?.opportunityName : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Account Name{\" \"}\n                </Text>\n                {data?.accountName ? (\n                  <Link\n                    to={\n                      accountAccess?.view && `/accountView/${data?.accountName}`\n                    }\n                  >\n                    <Text\n                      color={\n                        accountAccess?.view ? \"blue.500\" : \"blackAlpha.900\"\n                      }\n                      sx={{\n                        \"&:hover\": {\n                          color: accountAccess?.view\n                            ? \"blue.500\"\n                            : \"blackAlpha.900\",\n                          textDecoration: accountAccess?.view\n                            ? \"underline\"\n                            : \"none\",\n                        },\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {data?.accountName2 ? data?.accountName2 : \" - \"}\n                    </Text>\n                  </Link>\n                ) : (\n                  <Text\n                    color={accountAccess?.view ? \"blue.500\" : \"blackAlpha.900\"}\n                    sx={{\n                      \"&:hover\": {\n                        color: accountAccess?.view\n                          ? \"blue.500\"\n                          : \"blackAlpha.900\",\n                        textDecoration: accountAccess?.view\n                          ? \"underline\"\n                          : \"none\",\n                      },\n                    }}\n                  >\n                    {data?.accountName2 ? data?.accountName2 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Assigned User{\" \"}\n                </Text>\n                {data?.assignUser ? (\n                  <Link\n                    to={\n                      user?.role === \"superAdmin\" &&\n                      `/userView/${data?.assignUser}`\n                    }\n                  >\n                    <Text\n                      color={\n                        user?.role === \"superAdmin\"\n                          ? \"blue.500\"\n                          : \"blackAlpha.900\"\n                      }\n                      sx={{\n                        \"&:hover\": {\n                          color:\n                            user?.role === \"superAdmin\"\n                              ? \"blue.500\"\n                              : \"blackAlpha.900\",\n                          textDecoration:\n                            user?.role === \"superAdmin\" ? \"underline\" : \"none\",\n                        },\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {data?.assignUserName ? data?.assignUserName : \" - \"}\n                    </Text>\n                  </Link>\n                ) : (\n                  <Text\n                    color={\n                      user?.role === \"superAdmin\"\n                        ? \"blue.500\"\n                        : \"blackAlpha.900\"\n                    }\n                    sx={{\n                      \"&:hover\": {\n                        color:\n                          user?.role === \"superAdmin\"\n                            ? \"blue.500\"\n                            : \"blackAlpha.900\",\n                        textDecoration:\n                          user?.role === \"superAdmin\" ? \"underline\" : \"none\",\n                      },\n                    }}\n                  >\n                    {data?.assignUserName ? data?.assignUserName : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Type\n                </Text>\n                {editableField === \"type\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.type}\n                      name=\"type\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      mb={\n                        formik?.errors?.type && formik?.touched?.type\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Type\"}\n                      borderColor={\n                        formik?.errors?.type && formik?.touched?.type\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value={\"Existing Bussiness\"}>\n                        Existing Bussiness\n                      </option>\n                      <option value={\"New Bussiness\"}>New Bussiness</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.type &&\n                        formik?.touched?.type &&\n                        formik?.errors?.type}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"type\", data?.type, \"Type\")\n                    }\n                  >\n                    {data?.type ? data?.type : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Lead Source\n                </Text>\n                {editableField === \"leadSource\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.leadSource}\n                      name=\"leadSource\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      mb={\n                        formik?.errors?.leadSource &&\n                        formik?.touched?.leadSource\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Lead Source\"}\n                      borderColor={\n                        formik?.errors?.leadSource &&\n                        formik?.touched?.leadSource\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value={\"Cold Call\"}>Cold Call</option>\n                      <option value={\"Existing Customer\"}>\n                        Existing Customer\n                      </option>\n                      <option value={\"Self Generated\"}>Self Generated</option>\n                      <option value={\"Employee\"}>Employee</option>\n                      <option value={\"Partner\"}>Partner</option>\n                      <option value={\"Public Relation\"}>Public Relation</option>\n                      <option value={\"Direct Mail\"}>Direct Mail</option>\n                      <option value={\"Conference\"}>Conference</option>\n                      <option value={\"Trade Show\"}>Trade Show</option>\n                      <option value={\"Web Site\"}>Web Site</option>\n                      <option value={\"Word Of Mouth\"}>Word Of Mouth</option>\n                      <option value={\"Email\"}>Email</option>\n                      <option value={\"Other\"}>Other</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.leadSource &&\n                        formik?.touched?.leadSource &&\n                        formik?.errors?.leadSource}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"leadSource\",\n                        data?.leadSource,\n                        \"Lead Source\",\n                      )\n                    }\n                  >\n                    {data?.leadSource ? data?.leadSource : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Currency\n                </Text>\n                {editableField === \"currency\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.currency}\n                      name=\"currency\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      mb={\n                        formik?.errors?.currency && formik?.touched?.currency\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Select Currency\"}\n                      borderColor={\n                        formik?.errors?.currency && formik?.touched?.currency\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value={\"$\"}>USD</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.currency &&\n                        formik?.touched?.currency &&\n                        formik?.errors?.currency}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"currency\", data?.currency, \"Currency\")\n                    }\n                  >\n                    {data?.currency ? data?.currency : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Opportunity Amount\n                </Text>\n                {editableField === \"opportunityAmount\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"opportunityAmount\"\n                      type=\"number\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.opportunityAmount}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.opportunityAmount &&\n                        formik?.touched?.opportunityAmount\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.opportunityAmount &&\n                        formik?.touched?.opportunityAmount &&\n                        formik?.errors?.opportunityAmount}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"opportunityAmount\",\n                        data?.opportunityAmount,\n                        \"Opportunity Amount\",\n                      )\n                    }\n                  >\n                    {data?.opportunityAmount ? data?.opportunityAmount : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Amount\n                </Text>\n                {editableField === \"amount\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"amount\"\n                      type=\"number\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.amount}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.amount && formik?.touched?.amount\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors.amount &&\n                        formik?.touched.amount &&\n                        formik?.errors.amount}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"amount\", data?.amount, \"Amount\")\n                    }\n                  >\n                    {data?.amount ? data?.amount : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Expected Close Date\n                </Text>\n                {editableField === \"expectedCloseDate\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"expectedCloseDate\"\n                      type=\"date\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={dayjs(formik?.values?.expectedCloseDate)?.format(\n                        \"YYYY-MM-DD\",\n                      )}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.expectedCloseDate &&\n                        formik?.touched?.expectedCloseDate\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.expectedCloseDate &&\n                        formik?.touched?.expectedCloseDate &&\n                        formik?.errors?.expectedCloseDate}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"expectedCloseDate\",\n                        data?.expectedCloseDate,\n                        \"Expected Close Date\",\n                      )\n                    }\n                  >\n                    {data?.expectedCloseDate\n                      ? dayjs(data?.expectedCloseDate)?.format(\"YYYY-MM-DD\")\n                      : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Next Step\n                </Text>\n                {editableField === \"nextStep\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"nextStep\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.nextStep}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.nextStep && formik?.touched?.nextStep\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.nextStep &&\n                        formik?.touched?.nextStep &&\n                        formik?.errors?.nextStep}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"nextStep\", data?.nextStep, \"Next Step\")\n                    }\n                  >\n                    {data?.nextStep ? data?.nextStep : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Sales Stage\n                </Text>\n                {editableField === \"salesStage\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.salesStage}\n                      name=\"salesStage\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      mb={\n                        formik?.errors?.salesStage &&\n                        formik?.touched?.salesStage\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Sales Stage\"}\n                      borderColor={\n                        formik?.errors?.salesStage &&\n                        formik?.touched?.salesStage\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value={\"Prospecting\"}>Prospecting</option>\n                      <option value={\"Qualification\"}>Qualification</option>\n                      <option value={\"Needs Analysis\"}>Needs Analysis</option>\n                      <option value={\"Value Propositon\"}>\n                        Value Propositon\n                      </option>\n                      <option value={\"Identifying Decision Makers\"}>\n                        Identifying Decision Makers\n                      </option>\n                      <option value={\"Perception Analysis\"}>\n                        Perception Analysis\n                      </option>\n                      <option value={\"Proposal/Price Quote\"}>\n                        Proposal/Price Quote\n                      </option>\n                      <option value={\"Negotiation/Review\"}>\n                        Negotiation/Review\n                      </option>\n                      <option value={\"Closed/Won\"}>Closed/Won</option>\n                      <option value={\"Closed/Lost\"}>Closed/Lost</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.salesStage &&\n                        formik?.touched?.salesStage &&\n                        formik?.errors?.salesStage}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"salesStage\",\n                        data?.salesStage,\n                        \"Sales Stage\",\n                      )\n                    }\n                  >\n                    {data?.salesStage ? data?.salesStage : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Probability\n                </Text>\n                {editableField === \"probability\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"probability\"\n                      type=\"number\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.probability}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.probability &&\n                        formik?.touched?.probability\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors.probability &&\n                        formik?.touched?.probability &&\n                        formik?.errors?.probability}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"probability\",\n                        data?.probability,\n                        \"Probability\",\n                      )\n                    }\n                  >\n                    {data?.probability ? data?.probability : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Description\n                </Text>\n                {editableField === \"description\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"description\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.description}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.description &&\n                        formik?.touched?.description\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.description &&\n                        formik?.touched?.description &&\n                        formik?.errors?.description}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"description\",\n                        data?.description,\n                        \"Description\",\n                      )\n                    }\n                  >\n                    {data?.description ? data?.description : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n\n              {/* <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\n                                <Link to={data?.assignTo ? opportunityAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\n                                    <Text color={(data?.category === 'contact' && (opportunityAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\n                                </Link>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\n                                {\n                                    editableField === \"description\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.description}\n                                                autoFocus\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\n                                {\n                                    editableField === \"notes\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"notes\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.notes}\n                                                autoFocus\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\n\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\n                                }\n                            </GridItem> */}\n            </Grid>\n          </Card>\n        </GridItem>\n      </Grid>\n      {(opportunityAccess?.update ||\n        opportunityAccess?.delete ||\n        user?.role === \"superAdmin\") && (\n        <Card mt={3}>\n          <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n            <GridItem colStart={6}>\n              <Flex justifyContent={\"right\"}>\n                {(opportunityAccess?.update || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    onClick={() => {\n                      setEdit(true);\n                      setType(\"edit\");\n                    }}\n                    leftIcon={<EditIcon />}\n                    mr={2.5}\n                    variant=\"outline\"\n                    colorScheme=\"green\"\n                  >\n                    Edit\n                  </Button>\n                )}\n                {(opportunityAccess?.delete || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    style={{ background: \"red.800\" }}\n                    onClick={() => setDeleteManyModel(true)}\n                    leftIcon={<DeleteIcon />}\n                    colorScheme=\"red\"\n                  >\n                    Delete\n                  </Button>\n                )}\n              </Flex>\n            </GridItem>\n          </Grid>\n        </Card>\n      )}\n      <AddEdit\n        isOpen={edit}\n        size=\"lg\"\n        onClose={() => setEdit(false)}\n        viewClose={onClose}\n        selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id}\n        type={type}\n      />\n      <CommonDeleteModel\n        isOpen={deleteManyModel}\n        onClose={() => setDeleteManyModel(false)}\n        type=\"Opportunities\"\n        handleDeleteData={handleDeleteOpportunities}\n        ids={[id]}\n      />\n    </div>\n  );\n};\n\nexport default View;\n"],"names":["props","_Date","_Date$toISOString","_Date2","_Date2$toISOString","_formik$values","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$values2","_formik$errors4","_formik$touched3","_formik$errors5","_formik$touched4","_formik$errors6","_formik$touched5","_formik$errors7","_formik$values3","_formik$errors8","_formik$touched6","_formik$errors9","_formik$touched7","_formik$errors10","_formik$touched8","_formik$errors11","_formik$values4","_formik$errors12","_formik$touched9","_formik$errors13","_formik$touched10","_formik$errors14","_formik$touched11","_formik$errors15","_formik$values5","_formik$errors16","_formik$touched12","_formik$errors17","_formik$touched13","_formik$errors18","_formik$values6","_formik$errors19","_formik$touched14","_dayjs","_formik$values7","_formik$errors20","_formik$touched15","_formik$errors21","_formik$touched16","_formik$errors22","_dayjs2","_formik$values8","_formik$errors23","_formik$touched17","_formik$errors24","_formik$touched18","_formik$errors25","_formik$values9","_formik$errors26","_formik$touched19","_formik$errors27","_formik$touched20","_formik$errors28","_formik$touched21","_formik$errors29","_formik$values10","_formik$errors30","_formik$touched22","_formik$touched23","_formik$errors31","_formik$values11","_formik$errors32","_formik$touched24","_formik$errors33","_formik$touched25","_formik$errors34","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","opportunityAccess","accountAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","type","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","opportunityName","accountName","assignUser","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","modifiedBy","_id","formik","useFormik","validationSchema","opprtunitiesSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","modifiedDate","response","putApi","status","toast","success","error","handleDoubleClick","fieldName","value","name","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","Flex","mb","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Link","to","view","sx","textDecoration","cursor","accountName2","assignUserName","Select","undefined","placeholder","dayjs","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log"],"sourceRoot":""}