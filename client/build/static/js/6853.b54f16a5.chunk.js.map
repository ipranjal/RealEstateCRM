{"version":3,"file":"static/js/6853.b54f16a5.chunk.js","mappings":"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","sources":["views/admin/reports/components/reportChart.js","views/admin/reports/index.js"],"sourcesContent":["import { Box, Grid, Radio, RadioGroup, Select, Stack } from \"@chakra-ui/react\";\nimport Card from \"components/card/Card\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useSelector } from \"react-redux\";\nimport { postApi } from \"services/api\";\n\nconst ReportChart = (props) => {\n  const { dashboard } = props;\n  const [reportChart, setReportChart] = useState({});\n  const [startDate, setStartDate] = useState(\n    new Date(new Date() - 14 * 24 * 60 * 60 * 1000),\n  );\n  const [endDate, setEndDate] = useState(new Date());\n  const [select, setSelect] = useState(\"all\");\n  const [selection, setSelection] = useState(\"day\");\n  const modules = useSelector((state) => state?.modules?.data);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const isEmailsActive = modules?.find((item) => item?.moduleName === \"Emails\");\n  const isCallsActive = modules?.find((item) => item?.moduleName === \"Calls\");\n  const featchChart = async () => {\n    const data = {\n      startDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      endDate: moment(endDate).format(\"YYYY-MM-DD\"),\n      filter: selection,\n    };\n    let result = await postApi(\n      user?.role === \"superAdmin\"\n        ? \"api/reporting/index\"\n        : `api/reporting/index?sender=${user?._id}`,\n      data,\n    );\n    if (result?.status === 200) {\n      setReportChart(result?.data);\n    }\n  };\n\n  const options = {\n    chart: {\n      id: \"line-chart\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      title: {\n        text: \"Count\",\n      },\n    },\n    dataLabels: {\n      enabled: true,\n    },\n  };\n\n  const series = Object?.keys(reportChart)?.map((key) => {\n    const dataSet = reportChart[key][0];\n    let seriesData = [];\n\n    if (dataSet?.Emails && isEmailsActive?.isActive) {\n      seriesData = seriesData?.concat(\n        dataSet?.Emails?.map((item) => ({\n          x: item?.date,\n          y: item?.Emailcount,\n        })),\n      );\n    }\n    if (dataSet?.Calls && isCallsActive?.isActive) {\n      seriesData = seriesData?.concat(\n        dataSet?.Calls?.map((item) => ({ x: item?.date, y: item?.Callcount })),\n      );\n    }\n\n    return {\n      name:\n        key === \"Email\" && isEmailsActive?.isActive\n          ? \"Emails\"\n          : key === \"Call\" && isCallsActive?.isActive\n            ? \"Call\"\n            : key === \"Email\" &&\n                isEmailsActive?.isActive &&\n                key === \"Call\" &&\n                isCallsActive?.isActive\n              ? key\n              : \"\",\n      data: seriesData,\n    };\n  });\n\n  useEffect(() => {\n    featchChart();\n  }, [startDate, endDate, selection]);\n\n  const selectedSeries =\n    select === \"all\"\n      ? series?.filter((series) => series?.name !== \"\")\n      : series?.filter((series) => series?.name === select);\n\n  return (\n    <Card>\n      {!dashboard && (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap={\"wrap\"}\n          justifyContent=\"space-between\"\n          mb={4}\n        >\n          <Select\n            value={select}\n            onChange={(e) => setSelect(e?.target?.value)}\n            size=\"sm\"\n            width={{ base: \"100%\", md: \"15%\" }}\n            mb={{ base: 3, md: \"auto\" }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"EmailDetails\">Email</option>\n            <option value=\"outboundcall\">Call</option>\n          </Select>\n          <Box\n            width={{ base: \"100%\", md: \"auto\" }}\n            flexWrap={\"wrap\"}\n            justifyContent={\"left\"}\n            mb={{ base: 3, md: \"auto\" }}\n            display=\"flex\"\n          >\n            <ReactDatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              className=\"datePickerBorder\"\n            />\n            <ReactDatePicker\n              selected={endDate}\n              onChange={(date) => setEndDate(date)}\n              className=\"datePickerBorder\"\n            />\n          </Box>\n          <Box\n            width={{ base: \"100%\", md: \"auto\" }}\n            display={\"flex\"}\n            justifyContent={\"right\"}\n            mb={{ base: 3, md: \"auto\" }}\n          >\n            <RadioGroup onChange={(e) => setSelection(e)} value={selection}>\n              <Stack direction=\"row\">\n                <Radio value=\"day\">Daily</Radio>\n                <Radio value=\"week\">Weekly</Radio>\n              </Stack>\n            </RadioGroup>\n          </Box>\n        </Box>\n      )}\n      <div id=\"chart\">\n        <div id=\"chart-timeline\">\n          {selectedSeries && (\n            <ReactApexChart\n              options={options}\n              series={selectedSeries}\n              type=\"area\"\n              height={300}\n            />\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ReportChart;\n","import Card from \"components/card/Card\";\nimport { useEffect, useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getApi } from \"services/api\";\nimport ReportChart from \"./components/reportChart\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\n\nconst Report = () => {\n  const title = \"Reports\";\n  const [data, setData] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const [selectedValues, setSelectedValues] = useState([]);\n  // const [selectedColumns, setSelectedColumns] = useState([]);\n  // const [columns, setColumns] = useState([]);\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const tableColumns = [\n    { Header: \"Email Sent\", accessor: \"emailsent\" },\n    { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\n  ];\n\n  // const fetchCustomDataFields = async () => {\n  //     const tempTableColumns = [\n  //         { Header: '#', accessor: '_id' },\n  //         { Header: 'Name', accessor: 'firstName' },\n  //         { Header: 'Email Sent', accessor: 'emailsent' },\n  //         { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\n  //     ];\n  //     // setSelectedColumns(JSON.parse(JSON.stringify(tempTableColumns)));\n  // }\n\n  if (user?.role === \"superAdmin\") {\n    tableColumns?.unshift(\n      {\n        Header: \"#\",\n        accessor: \"_id\",\n        isSortable: false,\n        width: 10,\n      },\n      { Header: \"Name\", accessor: \"firstName\" },\n    );\n  }\n\n  const fetchData = async () => {\n    setIsLoding(true);\n    let result = await getApi(\n      user?.role === \"superAdmin\"\n        ? \"api/reporting\"\n        : `api/reporting?_id=${user?._id}`,\n    );\n    if (result && result?.status === 200) {\n      setData(result?.data);\n    }\n    setIsLoding(false);\n  };\n\n  // const [columns, setColumns] = useState([...tableColumns]);\n  // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n  // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n  useEffect(() => {\n    fetchData();\n    // fetchCustomDataFields()\n  }, []);\n\n  return (\n    <div>\n      <ReportChart />\n      <Card mt={4}>\n        <CommonCheckTable\n          title={title}\n          isLoding={isLoding}\n          columnData={tableColumns ?? []}\n          // dataColumn={dataColumn ?? []}\n          allData={data ?? []}\n          tableData={data}\n          AdvanceSearch={false}\n          checkBox={false}\n          tableCustomFields={[]}\n          deleteMany={true}\n          // selectedValues={selectedValues}\n          // setSelectedValues={setSelectedValues}\n          // selectedColumns={selectedColumns}\n          // setSelectedColumns={setSelectedColumns}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Report;\n"],"names":["props","_Object$keys","dashboard","reportChart","setReportChart","useState","startDate","setStartDate","Date","endDate","setEndDate","select","setSelect","selection","setSelection","modules","useSelector","state","_state$modules","data","user","JSON","parse","localStorage","getItem","isEmailsActive","find","item","moduleName","isCallsActive","series","Object","keys","map","key","dataSet","seriesData","_seriesData","_dataSet$Emails","_seriesData2","_dataSet$Calls","Emails","isActive","concat","x","date","y","Emailcount","Calls","Callcount","name","useEffect","async","moment","format","filter","result","postApi","role","_id","status","featchChart","selectedSeries","_jsxs","Card","children","Box","display","alignItems","flexWrap","justifyContent","mb","Select","value","onChange","e","_e$target","target","size","width","base","md","_jsx","ReactDatePicker","selected","className","RadioGroup","Stack","direction","Radio","id","ReactApexChart","options","chart","xaxis","type","yaxis","title","text","dataLabels","enabled","height","Report","setData","isLoding","setIsLoding","selectedValues","setSelectedValues","tableColumns","Header","accessor","unshift","isSortable","getApi","fetchData","ReportChart","mt","CommonCheckTable","columnData","allData","tableData","AdvanceSearch","checkBox","tableCustomFields","deleteMany"],"sourceRoot":""}