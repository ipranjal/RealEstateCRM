{"version":3,"file":"static/js/3093.656ba264.chunk.js","mappings":"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","sources":["views/admin/phoneCall/View.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Text,\n} from \"@chakra-ui/react\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport html2pdf from \"html2pdf.js\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { getApi } from \"services/api\";\nimport CommonCheckTable from \"../../../components/reactTable/checktable\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport { fetchPropertyCustomFiled } from \"../../../redux/slices/propertyCustomFiledSlice.js\";\n\nconst View = () => {\n  const param = useParams();\n  const navigate = useNavigate();\n\n  const [data, setData] = useState();\n  const [isLoding, setIsLoding] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectedValues, setSelectedValues] = useState();\n  const [columns, setColumns] = useState([]);\n  const dispatch = useDispatch();\n  const fetchData = async () => {\n    setIsLoding(true);\n    let response = await getApi(\"api/phoneCall/view/\", param.id);\n    setData(response?.data);\n    setIsLoding(false);\n  };\n\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...result?.payload?.data?.[0]?.fields\n        ?.filter((field) => field?.isTableField === true)\n        ?.map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n\n  const generatePDF = () => {\n    setLoading(true);\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n\n    if (element) {\n      hideBtn.style.display = \"none\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `PhoneCall_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          setLoading(false);\n          hideBtn.style.display = \"\";\n        });\n      // }, 500);\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    fetchCustomDataFields();\n  }, []);\n\n  const [contactAccess, leadAccess, PropertiesAccess] = HasAccess([\n    \"Contacts\",\n    \"Leads\",\n    \"Properties\",\n  ]);\n\n  return (\n    <>\n      {isLoding ? (\n        <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n          <Spinner />\n        </Flex>\n      ) : (\n        <>\n          <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n            <GridItem colSpan={{ base: 4 }}>\n              <Heading size=\"lg\" m={3}>\n                {data?.senderName || \"\"}\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ base: 4 }}>\n              <Card>\n                <Grid gap={4}>\n                  <GridItem colSpan={2}>\n                    <Box>\n                      <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                        <Heading size=\"md\" mb={3}>\n                          Call Details\n                        </Heading>\n                        <Box id=\"hide-btn\">\n                          <Button\n                            leftIcon={<FaFilePdf />}\n                            size=\"sm\"\n                            variant=\"brand\"\n                            onClick={generatePDF}\n                            disabled={loading}\n                          >\n                            {loading ? \"Please Wait...\" : \"Print as PDF\"}\n                          </Button>\n                          <Button\n                            leftIcon={<IoIosArrowBack />}\n                            size=\"sm\"\n                            variant=\"brand\"\n                            onClick={() => navigate(-1)}\n                            style={{ marginLeft: 10 }}\n                          >\n                            Back\n                          </Button>\n                        </Box>\n                      </Box>\n                      <HSeparator />\n                    </Box>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Sender{\" \"}\n                    </Text>\n                    <Text>{data?.senderName ? data?.senderName : \" - \"}</Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Recipient{\" \"}\n                    </Text>\n                    <Text>{data?.recipient ? data?.recipient : \" - \"}</Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Create to{\" \"}\n                    </Text>\n                    {data?.createBy ? (\n                      <Link\n                        to={\n                          contactAccess?.view &&\n                          `/contactView/${data?.createBy}`\n                        }\n                      >\n                        <Text\n                          color={\n                            contactAccess?.view ? \"blue.500\" : \"blackAlpha.900\"\n                          }\n                          sx={{\n                            \"&:hover\": {\n                              color: contactAccess?.view\n                                ? \"blue.500\"\n                                : \"blackAlpha.900\",\n                              textDecoration: contactAccess?.view\n                                ? \"underline\"\n                                : \"none\",\n                            },\n                          }}\n                        >\n                          {data?.createByName ? data?.createByName : \" - \"}\n                        </Text>\n                      </Link>\n                    ) : (\n                      <Link\n                        to={\n                          leadAccess?.view && `/leadView/${data?.createByLead}`\n                        }\n                      >\n                        <Text\n                          color={\n                            leadAccess?.view ? \"blue.500\" : \"blackAlpha.900\"\n                          }\n                          sx={{\n                            \"&:hover\": {\n                              color: leadAccess?.view\n                                ? \"blue.500\"\n                                : \"blackAlpha.900\",\n                              textDecoration: leadAccess?.view\n                                ? \"underline\"\n                                : \"none\",\n                            },\n                          }}\n                        >\n                          {data?.createByName ? data?.createByName : \" - \"}\n                        </Text>\n                      </Link>\n                    )}\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Realeted To{\" \"}\n                    </Text>\n                    <Text>\n                      {data?.createBy\n                        ? \"contact\"\n                        : data?.createByLead && \"lead\"}\n                    </Text>\n                  </GridItem>\n\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Start Date{\" \"}\n                    </Text>\n                    <Text>\n                      {\" \"}\n                      {data?.startDate\n                        ? moment(data?.startDate).format(\"lll \")\n                        : \" - \"}{\" \"}\n                    </Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      End Date{\" \"}\n                    </Text>\n                    <Text>\n                      {\" \"}\n                      {data?.endDate\n                        ? moment(data?.endDate).format(\"lll \")\n                        : \" - \"}{\" \"}\n                    </Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Timestamp{\" \"}\n                    </Text>\n                    <Text>\n                      {\" \"}\n                      {data?.timestamp\n                        ? moment(data?.timestamp).format(\"DD-MM-YYYY  h:mma \")\n                        : \" - \"}{\" \"}\n                      [\n                      {data?.timestamp\n                        ? moment(data?.timestamp).toNow()\n                        : \" - \"}\n                      ]\n                    </Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Call Duration{\" \"}\n                    </Text>\n                    <Text>\n                      {data?.callDuration ? data?.callDuration : \" - \"}\n                    </Text>\n                  </GridItem>\n                  <GridItem colSpan={{ base: 2, md: 1 }}>\n                    <Text\n                      fontSize=\"sm\"\n                      fontWeight=\"bold\"\n                      color={\"blackAlpha.900\"}\n                    >\n                      {\" \"}\n                      Sales Agent{\" \"}\n                    </Text>\n                    <pre style={{ whiteSpace: \"pre-wrap\" }}>\n                      {data?.salesAgentName ? data?.salesAgentName : \" - \"}\n                    </pre>\n                  </GridItem>\n                  {/* <GridItem colSpan={{ base: 2 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Notes </Text>\n                                        <pre style={{ whiteSpace: 'pre-wrap' }}>{data?.callNotes ? data?.callNotes : ' - '}</pre>\n                                    </GridItem> */}\n                </Grid>\n              </Card>\n            </GridItem>\n          </Grid>\n\n          <Card mt={3}>\n            <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n              <GridItem colSpan={{ base: 2 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Call Notes{\" \"}\n                </Text>\n                <pre style={{ whiteSpace: \"pre-wrap\" }}>\n                  {data?.callNotes ? data?.callNotes : \" - \"}\n                </pre>\n              </GridItem>\n            </Grid>\n          </Card>\n\n          <Grid templateColumns=\"repeat(2, 1fr)\" gap={1} mt={3}>\n            <GridItem colSpan={{ base: 2 }}>\n              <CommonCheckTable\n                title={\"Properties\"}\n                isLoding={isLoding}\n                columnData={columns ?? []}\n                allData={data?.properties ?? []}\n                tableData={data?.properties ?? []}\n                AdvanceSearch={false}\n                tableCustomFields={\n                  data?.properties?.[0]?.fields?.filter(\n                    (field) => field?.isTableField === true,\n                  ) || []\n                }\n                addBtn={false}\n                ManageGrid={false}\n                deleteMany={false}\n                checkBox={false}\n                access={PropertiesAccess}\n                selectedValues={selectedValues}\n                setSelectedValues={setSelectedValues}\n              />\n            </GridItem>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default View;\n"],"names":["View","_data$properties","_data$properties2","_data$properties3","_data$properties3$","_data$properties3$$fi","param","useParams","navigate","useNavigate","data","setData","useState","isLoding","setIsLoding","loading","setLoading","selectedValues","setSelectedValues","columns","setColumns","dispatch","useDispatch","useEffect","async","response","getApi","id","fetchData","_result$payload","_result$payload$data","_result$payload$data$","_result$payload$data$2","_result$payload$data$3","result","fetchPropertyCustomFiled","tempTableColumns","Header","accessor","isSortable","width","payload","fields","filter","field","isTableField","map","label","name","fetchCustomDataFields","contactAccess","leadAccess","PropertiesAccess","HasAccess","_jsx","_Fragment","children","Flex","justifyContent","alignItems","Spinner","_jsxs","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","size","m","senderName","Card","Box","display","mb","Button","leftIcon","FaFilePdf","variant","onClick","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","error","disabled","IoIosArrowBack","marginLeft","HSeparator","md","Text","fontSize","fontWeight","color","recipient","createBy","Link","to","view","sx","textDecoration","createByName","createByLead","startDate","endDate","timestamp","toNow","callDuration","whiteSpace","salesAgentName","mt","callNotes","CommonCheckTable","title","columnData","allData","properties","tableData","AdvanceSearch","tableCustomFields","addBtn","ManageGrid","deleteMany","checkBox","access"],"sourceRoot":""}