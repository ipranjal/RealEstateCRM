{"version":3,"file":"static/js/5615.82842cb8.chunk.js","mappings":"0LAee,SAASA,EAAiBC,GAEvC,MAAM,MAAEC,EAAK,KAAEC,EAAI,aAAEC,GAAiBH,EAEhCI,GAAmBC,EAAAA,EAAAA,IAAkB,oBAAqB,SAC1DC,GAAaD,EAAAA,EAAAA,IAAkB,YAAa,SAElD,OACEE,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,gBAAgB,kBAAkBC,IAAK,EAAEC,SAAA,EAC7CC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,UAC9BC,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CACPC,EAAG,CAAEF,KAAM,QACXG,GAAG,OACHC,KAAM,IACNC,IAAc,oBAATlB,EAA6B,MAAQ,GAC1CmB,IAAK,MACLC,OAAQ,OACRnB,aAAcA,EACdoB,iBAAiB,EACjBC,SACEjB,EAAAA,EAAAA,MAACkB,EAAAA,IAAG,CAAAd,SAAA,EACFC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAIC,EAAAA,IAAUX,EAAE,OAAOY,EAAE,OAAOC,MAAOxB,KAC7CM,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACC,QAAQ,SAASC,GAAG,OAAOC,GAAG,OAAMvB,UACxCC,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAMP,MAAOxB,EAAWK,SAAC,kBAIzDV,EAAQ,IACPM,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAMP,MAAM,oBAAmBnB,SAAA,CAAC,oBAC3CV,aAO9BW,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,UAC9BJ,EAAAA,EAAAA,MAACwB,EAAAA,KAAI,CAACO,UAAU,SAAQ3B,SAAA,EACtBJ,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CACHL,MAAO1B,EACPiC,WAAW,OACXE,UAAU,QACVH,SAAS,MACTI,GAAI,CAAEzB,KAAM,QAASJ,SAAA,CACtB,UACST,MAEVU,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CACHL,MA1CiB,WA2CjBM,SAAS,KACTK,GAAI,CAAE1B,KAAM,QACZkB,GAAG,OACHM,UAAU,QAAO5B,SAClB,sEAOX,C,gSChDA,MA8OA,EA9OiCX,IAC/B,MAAM,MACJ0C,EAAK,QACLC,EAAO,cACPC,EAAa,iBACbC,EAAgB,SAChBC,EAAQ,gBACRC,EAAe,qBACfC,EAAoB,eACpBC,EAAc,aACdC,GACElD,EAEEmD,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,OAAW,CAClCC,KAAMD,EAAAA,SACNE,YAAaF,EAAAA,SACbG,IAAKH,EAAAA,SACLI,aAAcJ,EAAAA,WAEVK,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAboB,CACpBN,KAAM,GACNC,YAAa,GACbC,IAAK,GACLC,aAAc,IAUdL,iBAAkBA,EAClBS,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC9Bb,GAASe,EAAAA,EAAAA,IAAeH,IACxBZ,GACEgB,EAAAA,EAAAA,IAAc,CAAEJ,OAAQA,EAAQpB,QAASA,EAASyB,KAAM,aAS1D,MAAMC,EAAW,CACf,CACEd,KAAM,CAAC,QACPe,MAAOP,EAAOR,MAEhB,CACEA,KAAM,CAAC,eACPe,MAAOP,EAAOP,aAEhB,CACED,KAAM,CAAC,OACPe,MAAOP,EAAON,KAEhB,CACEF,KAAM,CAAC,gBACPe,MAAOP,EAAOL,eAGlBP,GAASoB,EAAAA,EAAAA,IAAwB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUG,QAAQC,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMH,UAC1DtB,GAAqB,GACrBH,GAAiB,GACjBoB,IACAf,EAAa,GAAG,KAId,OACJwB,EAAM,QACNC,EAAO,OACPZ,EAAM,WACNa,EAAU,aACVC,EAAY,aACZC,EAAY,cACZC,EAAa,UACbd,EAAS,MACTe,GACErB,EAEJ,OACE/C,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEJ,EAAAA,EAAAA,MAAC2E,EAAAA,GAAK,CACJC,QAASA,KACPtC,GAAiB,GACjBoB,GAAW,EAEbmB,OAAQxC,EACRyC,YAAU,EAAA1E,SAAA,EAEVC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAY,KACb/E,EAAAA,EAAAA,MAACgF,EAAAA,GAAY,CAAA5E,SAAA,EACXC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAW,CAAA7E,SAAC,oBACbC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAgB,CACfC,QAASA,KACP7C,GAAiB,GACjBoB,GAAW,KAGfrD,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACRJ,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,gBAAgB,kBAAkByB,GAAI,EAAGxB,IAAK,EAAEC,SAAA,EACpDJ,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACrCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CACRC,QAAQ,OACRC,GAAG,MACH3D,SAAS,KACTC,WAAW,MACXP,MAAO,OACPI,GAAG,IACHM,GAAI,EAAE7B,SACP,kBAGDC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACJ5D,SAAS,KACT6D,SAAUpB,EACVqB,OAAQtB,EACRN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQR,KACfA,KAAK,OACL4C,YAAY,qBACZ9D,WAAW,SAEb9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAC1B,KACM,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQnB,QAAe,OAAPoB,QAAO,IAAPA,OAAO,EAAPA,EAASpB,QAAc,OAANmB,QAAM,IAANA,OAAM,EAANA,EAAQnB,aAG9ChD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACrCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CACRC,QAAQ,OACRC,GAAG,MACH3D,SAAS,KACTC,WAAW,MACXP,MAAO,OACPI,GAAG,IACHM,GAAI,EAAE7B,SACP,kBAGDC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACJ5D,SAAS,KACT6D,SAAUpB,EACVqB,OAAQtB,EACRN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQP,YACfD,KAAK,cACLa,KAAK,SACL+B,YAAY,qBACZ9D,WAAW,SAEb9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAC1B,KACM,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQlB,eACA,OAAPmB,QAAO,IAAPA,OAAO,EAAPA,EAASnB,eACH,OAANkB,QAAM,IAANA,OAAM,EAANA,EAAQlB,oBAGdjD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACrCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CACRC,QAAQ,OACRC,GAAG,MACH3D,SAAS,KACTC,WAAW,MACXP,MAAO,OACPI,GAAG,IACHM,GAAI,EAAE7B,SACP,SAGDC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACJ5D,SAAS,KACT6D,SAAUpB,EACVqB,OAAQtB,EACRN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQN,IACfF,KAAK,MACL4C,YAAY,YACZ/B,KAAK,SACL/B,WAAW,SAEb9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAC1B,KACM,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQjB,OAAc,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASlB,OAAa,OAANiB,QAAM,IAANA,OAAM,EAANA,EAAQjB,YAG5ClD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACrCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CACRC,QAAQ,OACRC,GAAG,MACH3D,SAAS,KACTC,WAAW,MACXP,MAAO,OACPI,GAAG,IACHM,GAAI,EAAE7B,SACP,mBAGDC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACJ5D,SAAS,KACT6D,SAAUpB,EACVqB,OAAQtB,EACRN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQL,aACfH,KAAK,eACL4C,YAAY,sBACZ/B,KAAK,QACL/B,WAAW,SAEb9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAC1B,KACM,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQhB,gBACA,OAAPiB,QAAO,IAAPA,OAAO,EAAPA,EAASjB,gBACH,OAANgB,QAAM,IAANA,OAAM,EAANA,EAAQhB,0BAKlBnD,EAAAA,EAAAA,MAAC6F,EAAAA,GAAW,CAAAzF,SAAA,EACVC,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CACLC,KAAK,KACLC,QAAQ,QACRC,GAAI,EACJd,QAASZ,EACT2B,YAAU3D,GAAakC,GAAqBrE,SAE3CmC,GAAWlC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAO,IAAM,YAE5B9F,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CACLC,KAAK,KACLC,QAAQ,UACRI,YAAY,MACZjB,QAASA,IAAMzB,IAAYtD,SAC5B,oBAMN,E,iCClPP,MAkGA,EAlGqBX,IAAW,IAAD4G,EAC7B,MAAM,QAAEzB,EAAO,OAAEC,EAAM,KAAElF,EAAI,aAAE2G,GAAiB7G,GACzC8C,EAAUgE,IAAeC,EAAAA,EAAAA,WAAS,GACnCC,GAAWC,EAAAA,EAAAA,MAMXtD,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cALoB,CACpBqD,SAAU,IAKVpD,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC9BmD,IACAlD,GAAW,KAGT,OACJS,EAAM,QACNC,EAAO,OACPZ,EAAM,WACNa,EAAU,aACVC,EAAY,aACZC,EAAY,cACZC,EAAa,UACbd,GACEN,EAEEwD,EAAUC,UACd,IACEN,GAAY,GACZ7C,IAEU,OAANF,QAAM,IAANA,GAAAA,EAAQmD,WACV/B,IACA6B,EAAS,iBAAkB,CACzBtE,MAAO,CAAE2E,SAAgB,OAANtD,QAAM,IAANA,OAAM,EAANA,EAAQmD,SAAUL,aAAcA,KAGzD,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,CAAC,QACCR,GAAY,EACd,GAGF,OACEvG,EAAAA,EAAAA,MAAC2E,EAAAA,GAAK,CAACC,QAASA,EAASC,OAAQA,EAAQC,YAAU,EAAA1E,SAAA,EACjDC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAY,KACb/E,EAAAA,EAAAA,MAACgF,EAAAA,GAAY,CAAA5E,SAAA,EACXC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAW,CAAA7E,SAAC,oBACbC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAgB,KACjB7E,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACRC,EAAAA,EAAAA,KAACJ,EAAAA,KAAI,CAACC,gBAAgB,kBAAkBC,IAAK,EAAEC,UAC7CJ,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,SAAA,EAC9BC,EAAAA,EAAAA,KAACb,EAAAA,EAAgB,CACfE,MAAa,OAAN8D,QAAM,IAANA,GAAgB,QAAV6C,EAAN7C,EAAQmD,gBAAQ,IAAAN,OAAV,EAANA,EAAkBa,OACzBtH,aAAeuH,GAAS3C,EAAc,WAAY2C,GAClDxH,KAAMA,KAERK,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAC1B,KACM,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQwC,YAAmB,OAAPvC,QAAO,IAAPA,OAAO,EAAPA,EAASuC,YAC5B3G,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAAtE,SAAA,CAAE,iBAAeT,gBAM3BK,EAAAA,EAAAA,MAAC6F,EAAAA,GAAW,CAAAzF,SAAA,EACVC,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CACLC,KAAK,KACLC,QAAQ,QACRb,QAASZ,EACT2B,WAAU3D,EAAwBnC,SAEjCmC,GAAWlC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAO,IAAM,UAE5B9F,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CACLsB,GAAI,CACFC,WAAY,EACZC,cAAe,cAEjBtB,QAAQ,UACRI,YAAY,MACZL,KAAK,KACLZ,QAASA,KACPP,IACAxB,EAAOM,WAAW,EAClBtD,SACH,kBAKC,ECmYZ,EAvdeX,IACb,MAAO8H,EAAQC,IAAahB,EAAAA,EAAAA,WAAS,IAC/B,OAAE3B,EAAM,OAAE4C,EAAM,QAAE7C,IAAY8C,EAAAA,EAAAA,OAC7BC,EAAgBC,IAAqBpB,EAAAA,EAAAA,UAAS,KAC9CnE,EAAeC,IAAoBkE,EAAAA,EAAAA,WAAS,IAC5CqB,EAAqBC,IAA0BtB,EAAAA,EAAAA,UAAS,KACxDuB,EAAkBC,IAAuBxB,EAAAA,EAAAA,UAAS,IAEnDC,GADOwB,KAAKC,MAAMC,aAAaC,QAAQ,UAC5B1B,EAAAA,EAAAA,OACX9D,GAAWC,EAAAA,EAAAA,OACVN,EAAUgE,IAAeC,EAAAA,EAAAA,WAAS,IAClC6B,EAAMC,IAAW9B,EAAAA,EAAAA,UAAS,KAC1B+B,EAAmB9F,IAAwB+D,EAAAA,EAAAA,WAAS,IACpDgC,EAAchG,IAAmBgE,EAAAA,EAAAA,UAAS,KAC1CiC,EAAYC,IAAiBlC,EAAAA,EAAAA,aAC7BmC,EAAaC,IAAapC,EAAAA,EAAAA,WAAS,IACnCqC,EAAMC,IAAWtC,EAAAA,EAAAA,WAAS,IAC1B3C,EAAMkF,IAAWvC,EAAAA,EAAAA,UAAS,KAC1BwC,EAAUC,IAAezC,EAAAA,EAAAA,WAAS,IAElC0C,IAAcC,EAAAA,EAAAA,GAAU,CAAC,YAE1BC,GAAe,CACnBC,OAAQ,SACRC,SAAU,SACVC,YAAY,EACZC,QAAQ,EACRC,KAAMhG,IAAA,IAAC,IAAEiG,EAAG,EAAEC,GAAGlG,EAAA,OACfpD,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAME,UAAW,SAAS5B,UACvDJ,EAAAA,EAAAA,MAAC4J,EAAAA,GAAI,CAACC,QAAM,EAAAzJ,SAAA,EACVC,EAAAA,EAAAA,KAACyJ,EAAAA,GAAU,CAAA1J,UACTC,EAAAA,EAAAA,KAAC0J,EAAAA,IAAW,OAEd/J,EAAAA,EAAAA,MAACgK,EAAAA,GAAQ,CACPC,KAAM,cACNC,UAAW,4BAA4B9J,SAAA,EAE5B,OAAV8I,QAAU,IAAVA,OAAU,EAAVA,EAAYiB,UACX9J,EAAAA,EAAAA,KAAC+J,EAAAA,GAAQ,CACPC,GAAI,IACJC,MAAMjK,EAAAA,EAAAA,KAACkK,EAAAA,SAAQ,CAAC1I,SAAU,GAAIF,GAAI,IAClCwD,QAASA,KAAO,IAADqF,EACbzB,EAAQ,QACRtB,IACAiB,EAAiB,OAAHgB,QAAG,IAAHA,GAAW,QAARc,EAAHd,EAAKlG,cAAM,IAAAgH,OAAR,EAAHA,EAAaC,IAAI,EAC/BrK,SACH,UAIQ,OAAV8I,QAAU,IAAVA,OAAU,EAAVA,EAAYwB,QACXrK,EAAAA,EAAAA,KAAC+J,EAAAA,GAAQ,CACPC,GAAI,IACJ9I,MAAO,QACP+I,MAAMjK,EAAAA,EAAAA,KAACsK,EAAAA,SAAQ,CAAChJ,GAAI,EAAGE,SAAU,KACjCsD,QAASA,KAAO,IAADyF,EACbnE,EAAS,gBAAmB,OAAHiD,QAAG,IAAHA,GAAW,QAARkB,EAAHlB,EAAKlG,cAAM,IAAAoH,OAAR,EAAHA,EAAaH,MAAM,EAC5CrK,SACH,UAIQ,OAAV8I,QAAU,IAAVA,OAAU,EAAVA,EAAY2B,UACXxK,EAAAA,EAAAA,KAAC+J,EAAAA,GAAQ,CACPC,GAAI,IACJ9I,MAAO,MACP+I,MAAMjK,EAAAA,EAAAA,KAACyK,EAAAA,WAAU,CAACjJ,SAAU,GAAIF,GAAI,IACpCwD,QAASA,KAAO,IAAD4F,EACbnC,GAAU,GACVhB,EAAkB,CAAI,OAAH8B,QAAG,IAAHA,GAAW,QAARqB,EAAHrB,EAAKlG,cAAM,IAAAuH,OAAR,EAAHA,EAAaN,KAAK,EACrCrK,SACH,kBAMF,GAGL4K,GAAe,CACnB,CAAE3B,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAO0B,MAAO,IAC1D,CACE5B,OAAQ,eACRC,SAAU,OACVG,KAAOA,IACLpJ,EAAAA,EAAAA,KAAA,OAAK6K,UAAU,YAAW9K,UACxBC,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CACHuD,QAASA,KAAA,IAAAgG,EAAAC,EAAA,OAAMC,GAAmB,OAAJ5B,QAAI,IAAJA,GAAS,QAAL0B,EAAJ1B,EAAMC,WAAG,IAAAyB,GAAU,QAAVC,EAATD,EAAWG,gBAAQ,IAAAF,OAAf,EAAJA,EAAqBX,IAAI,EACvD9J,GAAG,OACHyG,GAAI,CACF,UAAW,CAAE7F,MAAO,WAAYgK,eAAgB,aAChDC,OAAQ,WAEVjK,MAAM,YACNM,SAAS,KACTC,WAAW,MAAK1B,SAEX,OAAJqJ,QAAI,IAAJA,OAAI,EAAJA,EAAM1F,WAKf,CACEsF,OAAQ,eACRC,SAAU,eAEZ,CACED,OAAQ,MACRC,SAAU,OAEZ,CACED,OAAQ,gBACRC,SAAU,mBAEE,OAAVJ,QAAU,IAAVA,GAAAA,EAAYiB,QAAoB,OAAVjB,QAAU,IAAVA,GAAAA,EAAYwB,MAAkB,OAAVxB,QAAU,IAAVA,GAAAA,EAAY2B,OACtD,CAACzB,IACD,IAEAiC,GAAkBI,IACtBhF,EAAS,gBAAgBgF,IAAK,EA4QhC,OAJAC,EAAAA,EAAAA,YAAU,KAhBQ7E,WAChBN,GAAY,GACZ,MAAMoF,QAAe/I,GAASgJ,EAAAA,EAAAA,MAEM,IAADC,EAAL,MAA1BF,EAAOG,QAAQC,OACjBzD,EAAc,OAANqD,QAAM,IAANA,GAAe,QAATE,EAANF,EAAQG,eAAO,IAAAD,OAAT,EAANA,EAAiBxD,MAEzB2D,EAAAA,GAAMC,MAAM,uBAAwB,SAEtC1F,GAAY,EAAM,EAQlB2F,EAAW,GACV,CAAC3E,KAGFvH,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAC8L,EAAAA,EAAgB,CACfC,MAAO,UACP7J,SAAUA,EACV8J,WAAwB,OAAZrB,SAAY,IAAZA,GAAAA,GAAgB,GAE5B5I,QAAa,OAAJiG,QAAI,IAAJA,EAAAA,EAAQ,GACjBiE,UAAWjE,EACXkE,cAAehE,EACfiE,iBAAkB/J,EAClBgK,gBAAiBjE,EACjBkE,mBAAoBlK,EACpBmK,kBAAmB,GACnBC,OAAQ1D,EAORD,YAAaA,EACbxB,OAjEgBoF,KACpBpF,IACAsB,EAAQ,MAAM,EAgEVpB,eAAgBA,EAChBC,kBAAmBA,EACnBgB,UAAWA,EACXkE,YAAY,EACZC,eACE1M,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CACLE,QAAQ,UACRI,YAAY,QACZ4G,UAAU3M,EAAAA,EAAAA,KAAC4M,EAAAA,WAAU,IACrBhL,GAAI,CAAEiL,GAAI,MAAO7H,GAAI,KACrBU,KAAK,KACLZ,QAASA,IAAM7C,GAAiB,GAAMlC,SACvC,mBAIHyH,oBAAqBA,EACrBE,iBAAkBA,EAClBD,uBAAwBA,EACxBE,oBAAqBA,EACrBmF,iBAAiB,mBAGnB9M,EAAAA,EAAAA,KAAC+M,EAAoB,CACnB/K,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBC,qBAAsBA,EACtBL,QAAa,OAAJiG,QAAI,IAAJA,EAAAA,EAAQ,GACjBb,UAAWA,EACXxD,gBAAiB8D,EACjBnF,aAAcqF,KAGhB3H,EAAAA,EAAAA,KAACgN,EAAAA,EAAO,CACNxI,OAAQA,EACRkB,KAAM,KACNnB,QAASA,EACT4C,UAAWA,EACX3D,KAAMA,EACN4E,WAAYA,KAEdpI,EAAAA,EAAAA,KAACiN,EAAAA,EAAiB,CAChBzI,OAAQ8D,EACR/D,QAASA,IAAMgE,GAAU,GACzB/E,KAAK,UACL0J,iBA3Ge1G,UACnB,IACEN,GAAY,GAEY,aADHiH,EAAAA,EAAAA,IAAc,yBAA0BC,IAChD1B,SACXC,EAAAA,GAAM0B,QAAQ,+BACd9F,EAAkB,IAClBgB,GAAU,GACVpB,GAAWmG,IAASA,IAExB,CAAE,MAAO1B,GACPjF,QAAQC,IAAIgF,GACZD,EAAAA,GAAMC,MAAM,eACd,CAAC,QACC1F,GAAY,EACd,GA6FIkH,IAAK9F,KAGPtH,EAAAA,EAAAA,KAACuN,EAAW,CACVjO,KAAK,eACLkF,OAAQmE,EACRpE,QAASqE,EACT3C,aAvVe,CACnB,CACEtD,KAAM,OACN6K,MAAO,eACPhK,KAAM,OACNiK,OAAO,EACPC,WAAW,EACXlD,QAAQ,EACRmD,UAAW,KACXC,YAAa,QACbC,cAAc,EACdC,QAAQ,EACRC,QAAS,CACP,CACEpL,KAAM,GACNe,MAAO,GACP0G,IAAK,4BAEP,CACEzH,KAAM,GACNe,MAAO,GACP0G,IAAK,6BAGT4D,WAAY,CACV,CACEC,SAAS,EACTC,QAAS,2BACT9D,IAAK,4BAEP,CACE+D,KAAK,EACLzK,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACEgE,KAAK,EACL1K,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACE1G,MAAO,GACPwK,QAAS,GACTG,OAAO,EACPjE,IAAK,4BAEP,CACE8D,QAAS,GACTI,WAAY,GACZlE,IAAK,6BAGTA,IAAK,4BAEP,CACEzH,KAAM,cACN6K,MAAO,eACPhK,KAAM,SACNiK,OAAO,EACPC,WAAW,EACXlD,QAAQ,EACRmD,UAAW,KACXC,YAAa,QACbC,cAAc,EACdC,QAAQ,EACRC,QAAS,CACP,CACEpL,KAAM,GACNe,MAAO,GACP0G,IAAK,4BAEP,CACEzH,KAAM,GACNe,MAAO,GACP0G,IAAK,6BAGT4D,WAAY,CACV,CACEC,SAAS,EACTC,QAAS,GACT9D,IAAK,4BAEP,CACE+D,KAAK,EACLzK,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACEgE,KAAK,EACL1K,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACE1G,MAAO,GACPwK,QAAS,GACTG,OAAO,EACPjE,IAAK,4BAEP,CACE8D,QAAS,GACTI,WAAY,GACZlE,IAAK,6BAGTA,IAAK,4BAEP,CACEzH,KAAM,MACN6K,MAAO,MACPhK,KAAM,SACNiK,OAAO,EACPC,WAAW,EACXlD,QAAQ,EACRmD,UAAW,KACXC,YAAa,QACbC,cAAc,EACdC,QAAQ,EACRC,QAAS,CACP,CACEpL,KAAM,GACNe,MAAO,GACP0G,IAAK,4BAEP,CACEzH,KAAM,GACNe,MAAO,GACP0G,IAAK,6BAGT4D,WAAY,CACV,CACEC,SAAS,EACTC,QAAS,GACT9D,IAAK,4BAEP,CACE+D,KAAK,EACLzK,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACEgE,KAAK,EACL1K,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACE1G,MAAO,GACPwK,QAAS,GACTG,OAAO,EACPjE,IAAK,4BAEP,CACE8D,QAAS,GACTI,WAAY,GACZlE,IAAK,6BAGTA,IAAK,4BAEP,CACEzH,KAAM,eACN6K,MAAO,gBACPhK,KAAM,OACNiK,OAAO,EACPC,WAAW,EACXlD,QAAQ,EACRmD,UAAW,KACXC,YAAa,QACbC,cAAc,EACdC,QAAQ,EACRC,QAAS,CACP,CACEpL,KAAM,GACNe,MAAO,GACP0G,IAAK,4BAEP,CACEzH,KAAM,GACNe,MAAO,GACP0G,IAAK,6BAGT4D,WAAY,CACV,CACEC,SAAS,EACTC,QAAS,GACT9D,IAAK,4BAEP,CACE+D,KAAK,EACLzK,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACEgE,KAAK,EACL1K,MAAO,GACPwK,QAAS,GACT9D,IAAK,4BAEP,CACE1G,MAAO,GACPwK,QAAS,GACTG,OAAO,EACPjE,IAAK,4BAEP,CACE8D,QAAS,GACTI,WAAY,QACZlE,IAAK,6BAGTA,IAAK,iCA8HD,C","sources":["components/commonFileUpload/index.js","views/admin/account/components/AccountAdvanceSearch.js","views/admin/account/components/ImportModel.js","views/admin/account/index.js"],"sourcesContent":["// Chakra imports\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Icon,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function CommonFileUpload(props) {\n  // const { used, total, count, ...rest } = props;\n  const { count, text, onFileSelect } = props;\n  // Chakra Color Mode\n  const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  return (\n    <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n      <GridItem colSpan={{ base: 12 }}>\n        <Dropzone\n          w={{ base: \"100%\" }}\n          me=\"36px\"\n          minH={200}\n          img={text === \"Property Photos\" ? \"img\" : \"\"}\n          csv={\"csv\"}\n          height={\"100%\"}\n          onFileSelect={onFileSelect}\n          isMultipleAllow={false}\n          content={\n            <Box>\n              <Icon as={MdUpload} w=\"80px\" h=\"80px\" color={brandColor} />\n              <Flex justify=\"center\" mx=\"auto\" mb=\"12px\">\n                <Text fontSize=\"xl\" fontWeight=\"700\" color={brandColor}>\n                  Upload File\n                </Text>\n              </Flex>\n              {count > 0 && (\n                <Text fontSize=\"sm\" fontWeight=\"500\" color=\"secondaryGray.500\">\n                  Selected Files : {count}\n                </Text>\n              )}\n            </Box>\n          }\n        />\n      </GridItem>\n      <GridItem colSpan={{ base: 12 }}>\n        <Flex direction=\"column\">\n          <Text\n            color={textColorPrimary}\n            fontWeight=\"bold\"\n            textAlign=\"start\"\n            fontSize=\"2xl\"\n            mt={{ base: \"20px\" }}\n          >\n            Upload {text}\n          </Text>\n          <Text\n            color={textColorSecondary}\n            fontSize=\"md\"\n            my={{ base: \"auto\" }}\n            mx=\"auto\"\n            textAlign=\"start\"\n          >\n            Accepted File Type (csv, xlsx file - 15MB max) only 1 file\n          </Text>\n        </Flex>\n      </GridItem>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Grid,\n  GridItem,\n  Input,\n  FormLabel,\n  Select,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport {\n  setSearchValue,\n  getSearchData,\n  setGetTagValues,\n} from \"../../../../redux/slices/advanceSearchSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst OpprtunityAdvanceSearch = (props) => {\n  const {\n    state,\n    allData,\n    advanceSearch,\n    setAdvanceSearch,\n    isLoding,\n    setSearchedData,\n    setDisplaySearchData,\n    setSearchClear,\n    setSearchbox,\n  } = props;\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: \"\",\n    officePhone: \"\",\n    fax: \"\",\n    emailAddress: \"\",\n  };\n  const validationSchema = yup.object({\n    name: yup.string(),\n    officePhone: yup.string(),\n    fax: yup.string(),\n    emailAddress: yup.string(),\n  });\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(setSearchValue(values));\n      dispatch(\n        getSearchData({ values: values, allData: allData, type: \"Account\" }),\n      );\n      // const searchResult = allData?.filter(\n      //     (item) =>\n      //         (!values?.senderName || (item?.senderName && item?.senderName.toLowerCase().includes(values?.senderName?.toLowerCase()))) &&\n      //         (!values?.realetedTo || (values.realetedTo === \"contact\" ? item.createBy : item.createByLead)) &&\n      //         (!values?.createByName || (item?.createByName && item?.createByName.toLowerCase().includes(values?.createByName?.toLowerCase())))\n      // )\n      // let getValue = [values.senderName, values?.realetedTo, values?.createByName].filter(value => value);\n      const getValue = [\n        {\n          name: [\"name\"],\n          value: values.name,\n        },\n        {\n          name: [\"officePhone\"],\n          value: values.officePhone,\n        },\n        {\n          name: [\"fax\"],\n          value: values.fax,\n        },\n        {\n          name: [\"emailAddress\"],\n          value: values.emailAddress,\n        },\n      ];\n      dispatch(setGetTagValues(getValue?.filter((item) => item?.value)));\n      setDisplaySearchData(true);\n      setAdvanceSearch(false);\n      resetForm();\n      setSearchbox(\"\");\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n    dirty,\n  } = formik;\n\n  return (\n    <>\n      <Modal\n        onClose={() => {\n          setAdvanceSearch(false);\n          resetForm();\n        }}\n        isOpen={advanceSearch}\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Advance Search</ModalHeader>\n          <ModalCloseButton\n            onClick={() => {\n              setAdvanceSearch(false);\n              resetForm();\n            }}\n          />\n          <ModalBody>\n            <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"600\"\n                  color={\"#000\"}\n                  mb=\"0\"\n                  mt={2}\n                >\n                  Account Name\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values?.name}\n                  name=\"name\"\n                  placeholder=\"Enter Account Name\"\n                  fontWeight=\"500\"\n                />\n                <Text mb=\"10px\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.name && touched?.name && errors?.name}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"600\"\n                  color={\"#000\"}\n                  mb=\"0\"\n                  mt={2}\n                >\n                  Office Phone\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values?.officePhone}\n                  name=\"officePhone\"\n                  type=\"number\"\n                  placeholder=\"Enter Office Phone\"\n                  fontWeight=\"500\"\n                />\n                <Text mb=\"10px\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.officePhone &&\n                    touched?.officePhone &&\n                    errors?.officePhone}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"600\"\n                  color={\"#000\"}\n                  mb=\"0\"\n                  mt={2}\n                >\n                  Fax\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values?.fax}\n                  name=\"fax\"\n                  placeholder=\"Enter Fax\"\n                  type=\"number\"\n                  fontWeight=\"500\"\n                />\n                <Text mb=\"10px\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.fax && touched?.fax && errors?.fax}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"600\"\n                  color={\"#000\"}\n                  mb=\"0\"\n                  mt={2}\n                >\n                  Email Address\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values?.emailAddress}\n                  name=\"emailAddress\"\n                  placeholder=\"Enter Email Address\"\n                  type=\"email\"\n                  fontWeight=\"500\"\n                />\n                <Text mb=\"10px\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.emailAddress &&\n                    touched?.emailAddress &&\n                    errors?.emailAddress}\n                </Text>\n              </GridItem>\n            </Grid>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              size=\"sm\"\n              variant=\"brand\"\n              mr={2}\n              onClick={handleSubmit}\n              disabled={isLoding || !dirty ? true : false}\n            >\n              {isLoding ? <Spinner /> : \"Search\"}\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              colorScheme=\"red\"\n              onClick={() => resetForm()}\n            >\n              Clear\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default OpprtunityAdvanceSearch;\n","import {\n  Button,\n  Grid,\n  GridItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonFileUpload from \"components/commonFileUpload\";\n\nconst ImportModal = (props) => {\n  const { onClose, isOpen, text, customFields } = props;\n  const [isLoding, setIsLoding] = useState(false);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    accounts: \"\",\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values, { resetForm }) => {\n      AddData();\n      resetForm();\n    },\n  });\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      resetForm();\n\n      if (values?.accounts) {\n        onClose();\n        navigate(\"/accountImport\", {\n          state: { fileData: values?.accounts, customFields: customFields },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Import Account</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n            <GridItem colSpan={{ base: 12 }}>\n              <CommonFileUpload\n                count={values?.accounts?.length}\n                onFileSelect={(file) => setFieldValue(\"accounts\", file)}\n                text={text}\n              />\n              <Text mb=\"10px\" color={\"red\"}>\n                {\" \"}\n                {errors?.accounts && touched?.accounts && (\n                  <>Please Select {text}</>\n                )}\n              </Text>\n            </GridItem>\n          </Grid>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"sm\"\n            variant=\"brand\"\n            onClick={handleSubmit}\n            disabled={isLoding ? true : false}\n          >\n            {isLoding ? <Spinner /> : \"Save\"}\n          </Button>\n          <Button\n            sx={{\n              marginLeft: 2,\n              textTransform: \"capitalize\",\n            }}\n            variant=\"outline\"\n            colorScheme=\"red\"\n            size=\"sm\"\n            onClick={() => {\n              onClose();\n              formik.resetForm();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ImportModal;\n","import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { DeleteIcon, EditIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { getApi, deleteManyApi } from \"services/api\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport CommonCheckTable from \"../../../components/reactTable/checktable\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { CiMenuKebab } from \"react-icons/ci\";\nimport moment from \"moment\";\nimport { MdLeaderboard } from \"react-icons/md\";\nimport { IoIosContact } from \"react-icons/io\";\nimport AddEdit from \"./AddEdit\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchEmailsData } from \"../../../redux/slices/emailsSlice\";\nimport { toast } from \"react-toastify\";\nimport AccountAdvanceSearch from \"./components/AccountAdvanceSearch\";\nimport { fetchAccountData } from \"../../../redux/slices/accountSlice\";\nimport CommonDeleteModel from \"../../../components/commonDeleteModel\";\nimport ImportModal from \"./components/ImportModel\";\n\nconst Index = (props) => {\n  const [action, setAction] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [advanceSearch, setAdvanceSearch] = useState(false);\n  const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\n  const [searchboxOutside, setSearchboxOutside] = useState(\"\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isLoding, setIsLoding] = useState(false);\n  const [data, setData] = useState([]);\n  const [displaySearchData, setDisplaySearchData] = useState(false);\n  const [searchedData, setSearchedData] = useState([]);\n  const [selectedId, setSelectedId] = useState();\n  const [deleteModel, setDelete] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [isImport, setIsImport] = useState(false);\n\n  const [permission] = HasAccess([\"Account\"]);\n\n  const actionHeader = {\n    Header: \"Action\",\n    accessor: \"action\",\n    isSortable: false,\n    center: true,\n    cell: ({ row, i }) => (\n      <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n        <Menu isLazy>\n          <MenuButton>\n            <CiMenuKebab />\n          </MenuButton>\n          <MenuList\n            minW={\"fit-content\"}\n            transform={\"translate(1520px, 173px);\"}\n          >\n            {permission?.update && (\n              <MenuItem\n                py={2.5}\n                icon={<EditIcon fontSize={15} mb={1} />}\n                onClick={() => {\n                  setType(\"edit\");\n                  onOpen();\n                  setSelectedId(row?.values?._id);\n                }}\n              >\n                Edit\n              </MenuItem>\n            )}\n            {permission?.view && (\n              <MenuItem\n                py={2.5}\n                color={\"green\"}\n                icon={<ViewIcon mb={1} fontSize={15} />}\n                onClick={() => {\n                  navigate(`/accountView/${row?.values?._id}`);\n                }}\n              >\n                View\n              </MenuItem>\n            )}\n            {permission?.delete && (\n              <MenuItem\n                py={2.5}\n                color={\"red\"}\n                icon={<DeleteIcon fontSize={15} mb={1} />}\n                onClick={() => {\n                  setDelete(true);\n                  setSelectedValues([row?.values?._id]);\n                }}\n              >\n                Delete\n              </MenuItem>\n            )}\n          </MenuList>\n        </Menu>\n      </Text>\n    ),\n  };\n  const tableColumns = [\n    { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n    {\n      Header: \"Account Name\",\n      accessor: \"name\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text\n            onClick={() => handleViewOpen(cell?.row?.original?._id)}\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n              cursor: \"pointer\",\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Office Phone\",\n      accessor: \"officePhone\",\n    },\n    {\n      Header: \"Fax\",\n      accessor: \"fax\",\n    },\n    {\n      Header: \"Email Address\",\n      accessor: \"emailAddress\",\n    },\n    ...(permission?.update || permission?.view || permission?.delete\n      ? [actionHeader]\n      : []),\n  ];\n  const handleViewOpen = (id) => {\n    navigate(`/accountView/${id}`);\n  };\n  const customFields = [\n    {\n      name: \"name\",\n      label: \"Account Name\",\n      type: \"text\",\n      fixed: false,\n      isDefault: false,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8112cf3cbec6b5286c0\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8112cf3cbec6b5286c1\",\n        },\n      ],\n      validation: [\n        {\n          require: true,\n          message: \"Account Name is required\",\n          _id: \"6694b8112cf3cbec6b5286c2\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8112cf3cbec6b5286c3\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8112cf3cbec6b5286c4\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n          _id: \"6694b8112cf3cbec6b5286c5\",\n        },\n        {\n          message: \"\",\n          formikType: \"\",\n          _id: \"6694b8112cf3cbec6b5286c6\",\n        },\n      ],\n      _id: \"6694b8112cf3cbec6b5286bf\",\n    },\n    {\n      name: \"officePhone\",\n      label: \"Office Phone\",\n      type: \"number\",\n      fixed: false,\n      isDefault: false,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8662cf3cbec6b5289fd\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8662cf3cbec6b5289fe\",\n        },\n      ],\n      validation: [\n        {\n          require: false,\n          message: \"\",\n          _id: \"6694b8662cf3cbec6b5289ff\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8662cf3cbec6b528a00\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8662cf3cbec6b528a01\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n          _id: \"6694b8662cf3cbec6b528a02\",\n        },\n        {\n          message: \"\",\n          formikType: \"\",\n          _id: \"6694b8662cf3cbec6b528a03\",\n        },\n      ],\n      _id: \"6694b8662cf3cbec6b5289fc\",\n    },\n    {\n      name: \"fax\",\n      label: \"Fax\",\n      type: \"number\",\n      fixed: false,\n      isDefault: false,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8742cf3cbec6b528d52\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8742cf3cbec6b528d53\",\n        },\n      ],\n      validation: [\n        {\n          require: false,\n          message: \"\",\n          _id: \"6694b8742cf3cbec6b528d54\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8742cf3cbec6b528d55\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8742cf3cbec6b528d56\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n          _id: \"6694b8742cf3cbec6b528d57\",\n        },\n        {\n          message: \"\",\n          formikType: \"\",\n          _id: \"6694b8742cf3cbec6b528d58\",\n        },\n      ],\n      _id: \"6694b8742cf3cbec6b528d51\",\n    },\n    {\n      name: \"emailAddress\",\n      label: \"Email Address\",\n      type: \"text\",\n      fixed: false,\n      isDefault: false,\n      delete: false,\n      belongsTo: null,\n      backendType: \"Mixed\",\n      isTableField: false,\n      isView: false,\n      options: [\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8942cf3cbec6b5290bf\",\n        },\n        {\n          name: \"\",\n          value: \"\",\n          _id: \"6694b8942cf3cbec6b5290c0\",\n        },\n      ],\n      validation: [\n        {\n          require: false,\n          message: \"\",\n          _id: \"6694b8942cf3cbec6b5290c1\",\n        },\n        {\n          min: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8942cf3cbec6b5290c2\",\n        },\n        {\n          max: false,\n          value: \"\",\n          message: \"\",\n          _id: \"6694b8942cf3cbec6b5290c3\",\n        },\n        {\n          value: \"\",\n          message: \"\",\n          match: false,\n          _id: \"6694b8942cf3cbec6b5290c4\",\n        },\n        {\n          message: \"\",\n          formikType: \"email\",\n          _id: \"6694b8942cf3cbec6b5290c5\",\n        },\n      ],\n      _id: \"6694b8942cf3cbec6b5290be\",\n    },\n  ];\n\n  const handleOpenAdd = () => {\n    onOpen();\n    setType(\"add\");\n  };\n\n  const handleDelete = async (ids) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteManyApi(\"api/account/deleteMany\", ids);\n      if (response.status === 200) {\n        toast.success(`Account Delete successfully`);\n        setSelectedValues([]);\n        setDelete(false);\n        setAction((pre) => !pre);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(`server error`);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const fetchData = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchAccountData());\n\n    if (result.payload.status === 200) {\n      setData(result?.payload?.data);\n    } else {\n      toast.error(\"Failed to fetch data\", \"error\");\n    }\n    setIsLoding(false);\n  };\n\n  // const [columns, setColumns] = useState([...tableColumns]);\n  // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n  // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n\n  useEffect(() => {\n    fetchData();\n  }, [action]);\n\n  return (\n    <div>\n      <CommonCheckTable\n        title={\"Account\"}\n        isLoding={isLoding}\n        columnData={tableColumns ?? []}\n        // dataColumn={dataColumn ?? []}\n        allData={data ?? []}\n        tableData={data}\n        searchDisplay={displaySearchData}\n        setSearchDisplay={setDisplaySearchData}\n        searchedDataOut={searchedData}\n        setSearchedDataOut={setSearchedData}\n        tableCustomFields={[]}\n        access={permission}\n        // action={action}\n        // setAction={setAction}\n        // selectedColumns={selectedColumns}\n        // setSelectedColumns={setSelectedColumns}\n        // isOpen={isOpen}\n        // onClose={onclose}\n        setIsImport={setIsImport}\n        onOpen={handleOpenAdd}\n        selectedValues={selectedValues}\n        setSelectedValues={setSelectedValues}\n        setDelete={setDelete}\n        deleteMany={false}\n        AdvanceSearch={\n          <Button\n            variant=\"outline\"\n            colorScheme=\"brand\"\n            leftIcon={<SearchIcon />}\n            mt={{ sm: \"5px\", md: \"0\" }}\n            size=\"sm\"\n            onClick={() => setAdvanceSearch(true)}\n          >\n            Advance Search\n          </Button>\n        }\n        getTagValuesOutSide={getTagValuesOutSide}\n        searchboxOutside={searchboxOutside}\n        setGetTagValuesOutside={setGetTagValuesOutside}\n        setSearchboxOutside={setSearchboxOutside}\n        handleSearchType=\"AccountSearch\"\n      />\n\n      <AccountAdvanceSearch\n        advanceSearch={advanceSearch}\n        setAdvanceSearch={setAdvanceSearch}\n        setSearchedData={setSearchedData}\n        setDisplaySearchData={setDisplaySearchData}\n        allData={data ?? []}\n        setAction={setAction}\n        setGetTagValues={setGetTagValuesOutside}\n        setSearchbox={setSearchboxOutside}\n      />\n\n      <AddEdit\n        isOpen={isOpen}\n        size={\"lg\"}\n        onClose={onClose}\n        setAction={setAction}\n        type={type}\n        selectedId={selectedId}\n      />\n      <CommonDeleteModel\n        isOpen={deleteModel}\n        onClose={() => setDelete(false)}\n        type=\"Account\"\n        handleDeleteData={handleDelete}\n        ids={selectedValues}\n      />\n\n      <ImportModal\n        text=\"Account file\"\n        isOpen={isImport}\n        onClose={setIsImport}\n        customFields={customFields}\n      />\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":["CommonFileUpload","props","count","text","onFileSelect","textColorPrimary","useColorModeValue","brandColor","_jsxs","Grid","templateColumns","gap","children","_jsx","GridItem","colSpan","base","Dropzone","w","me","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","color","Flex","justify","mx","mb","Text","fontSize","fontWeight","direction","textAlign","mt","my","state","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","useDispatch","validationSchema","yup","name","officePhone","fax","emailAddress","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","type","getValue","value","setGetTagValues","filter","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_Fragment","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","md","FormLabel","display","ms","Input","onChange","onBlur","placeholder","ModalFooter","Button","size","variant","mr","disabled","Spinner","colorScheme","_values$accounts","customFields","setIsLoding","useState","navigate","useNavigate","accounts","AddData","async","fileData","e","console","log","length","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","JSON","parse","localStorage","getItem","data","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","HasAccess","actionHeader","Header","accessor","isSortable","center","cell","row","i","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","delete","DeleteIcon","_row$values3","tableColumns","width","className","_cell$row","_cell$row$original","handleViewOpen","original","textDecoration","cursor","id","useEffect","result","fetchAccountData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","tableData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","handleOpenAdd","deleteMany","AdvanceSearch","leftIcon","SearchIcon","sm","handleSearchType","AccountAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","success","pre","ImportModal","label","fixed","isDefault","belongsTo","backendType","isTableField","isView","options","validation","require","message","min","max","match","formikType"],"sourceRoot":""}