{"version":3,"file":"static/js/5293.29c4d212.chunk.js","mappings":"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","sources":["views/admin/contact/Add.js","views/admin/contact/Edit.js","views/admin/contact/components/propertyModel.js","views/admin/quotes/AddEdit.js","views/admin/contact/View.js","schema/quoteSchema.js"],"sourcesContent":["import { CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { postApi } from \"services/api\";\nimport { generateValidationSchema } from \"utils\";\nimport CustomForm from \"utils/customForm\";\nimport * as yup from \"yup\";\n\nconst Add = (props) => {\n  const [isLoding, setIsLoding] = useState(false);\n\n  const initialFieldValues = Object?.fromEntries(\n    (props?.contactData?.fields || [])?.map((field) => [field?.name, \"\"]),\n  );\n  const initialValues = {\n    ...initialFieldValues,\n    createBy: JSON.parse(localStorage.getItem(\"user\"))._id,\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: yup\n      .object()\n      .shape(generateValidationSchema(props?.contactData?.fields)),\n    onSubmit: (values, { resetForm }) => {\n      AddData();\n      resetForm();\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await postApi(\"api/form/add\", {\n        ...values,\n        moduleId: props?.contactData?._id,\n      });\n      if (response?.status === 200) {\n        props.onClose();\n        props.setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const handleCancel = () => {\n    formik.resetForm();\n    props.onClose();\n  };\n\n  return (\n    <div>\n      <Drawer isOpen={props?.isOpen} size={props?.size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            display=\"flex\"\n          >\n            Add Contact\n            <IconButton onClick={props?.onClose} icon={<CloseIcon />} />\n          </DrawerHeader>\n          <DrawerBody>\n            <CustomForm\n              moduleData={props?.contactData}\n              values={values}\n              setFieldValue={setFieldValue}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              errors={errors}\n              touched={touched}\n            />\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button\n              sx={{ textTransform: \"capitalize\" }}\n              variant=\"brand\"\n              disabled={isLoding ? true : false}\n              type=\"submit\"\n              size=\"sm\"\n              onClick={handleSubmit}\n            >\n              {isLoding ? <Spinner /> : \"Save\"}\n            </Button>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"red\"\n              size=\"sm\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              onClick={handleCancel}\n            >\n              Close\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Add;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Flex,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getApi, putApi } from \"services/api\";\nimport { generateValidationSchema } from \"../../../utils\";\nimport * as yup from \"yup\";\nimport CustomForm from \"utils/customForm\";\n\nconst Edit = (props) => {\n  const { data } = props;\n  const [isLoding, setIsLoding] = useState(false);\n  const initialFieldValues = Object?.fromEntries(\n    (props?.contactData?.fields || [])?.map((field) => [field?.name, \"\"]),\n  );\n\n  //     lastName: \"\",\n  //     title: \"\",\n  //     email: \"\",\n  //     phoneNumber: \"\",\n  //     mobileNumber: \"\",\n  //     physicalAddress: \"\",\n  //     mailingAddress: \"\",\n  //     preferredContactMethod: \"\",\n  //     // 2.Lead Source Information\n  //     leadSource: \"\",\n  //     referralSource: \"\",\n  //     campaignSource: \"\",\n  //     // 3. Status and Classifications\n  //     leadStatus: \"\",\n  //     leadRating: \"\",\n  //     leadConversionProbability: \"\",\n  //     // 4. Property of Interest\n  //     // 5. History:\n  //     notesandComments: \"\",\n  //     // 6. Tags or Categories\n  //     tagsOrLabelsForcategorizingcontacts: \"\",\n  //     // 7. Important Dates::\n  //     birthday: \"\",\n  //     anniversary: \"\",\n  //     keyMilestones: \"\",\n  //     // 8. Additional Personal Information\n  //     dob: \"\",\n  //     gender: \"\",\n  //     occupation: \"\",\n  //     interestsOrHobbies: \"\",\n  //     // 9. Preferred  Communication Preferences:\n  //     communicationFrequency: \"\",\n  //     preferences: \"\",\n  //     // 10. Social Media Profiles:\n  //     linkedInProfile: \"\",\n  //     facebookProfile: \"\",\n  //     twitterHandle: \"\",\n  //     otherProfiles: \"\",\n  //     // 11. Lead Assignment and Team Collaboration:\n  //     agentOrTeamMember: \"\",\n  //     internalNotesOrComments: \"\",\n  //     createBy: JSON.parse(localStorage.getItem('user'))._id,\n  // });\n  const [initialValues, setInitialValues] = useState({\n    ...initialFieldValues,\n    createBy: JSON.parse(localStorage.getItem(\"user\"))?._id,\n  });\n  const param = useParams();\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    enableReinitialize: true,\n    validationSchema: yup\n      ?.object()\n      ?.shape(generateValidationSchema(props?.contactData?.fields)),\n    onSubmit: (values, { resetForm }) => {\n      EditData();\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  } = formik;\n\n  const EditData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await putApi(\n        `api/form/edit/${props?.selectedId || param?.id}`,\n        { ...values, moduleId: props?.moduleId },\n      );\n      if (response?.status === 200) {\n        props?.onClose();\n        props?.setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const handleClose = () => {\n    props.onClose(false);\n    props.setSelectedId && props?.setSelectedId();\n  };\n  let response;\n  const fetchData = async () => {\n    if (data) {\n      setInitialValues((prev) => ({ ...prev, ...data }));\n    } else if (props?.selectedId || param?.id) {\n      try {\n        setIsLoding(true);\n        response = await getApi(\n          \"api/contact/view/\",\n          props?.selectedId ? props?.selectedId : param?.id,\n        );\n        setInitialValues((prev) => ({ ...prev, ...response?.data?.contact }));\n      } catch (e) {\n        console.error(e);\n      } finally {\n        setIsLoding(false);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [props?.selectedId, data]);\n\n  return (\n    <div>\n      <Drawer isOpen={props?.isOpen} size={props?.size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            display=\"flex\"\n          >\n            Edit {values?.fullName || \"Contact\"}\n            <IconButton onClick={handleClose} icon={<CloseIcon />} />\n          </DrawerHeader>\n          <DrawerBody>\n            {isLoding ? (\n              <Flex\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                width=\"100%\"\n              >\n                <Spinner />\n              </Flex>\n            ) : (\n              <CustomForm\n                moduleData={props?.contactData}\n                values={values}\n                setFieldValue={setFieldValue}\n                handleChange={handleChange}\n                handleBlur={handleBlur}\n                errors={errors}\n                touched={touched}\n              />\n            )}\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button\n              sx={{ textTransform: \"capitalize\" }}\n              variant=\"brand\"\n              type=\"submit\"\n              size=\"sm\"\n              disabled={isLoding ? true : false}\n              onClick={handleSubmit}\n            >\n              {isLoding ? <Spinner /> : \"Update\"}\n            </Button>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"red\"\n              size=\"sm\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              onClick={handleClose}\n            >\n              Close\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Edit;\n","import {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport { postApi } from \"services/api\";\nimport { fetchPropertyData } from \"../../../../redux/slices/propertySlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\nimport { fetchPropertyCustomFiled } from \"../../../../redux/slices/propertyCustomFiledSlice\";\n\nconst PropertyModel = (props) => {\n  const { onClose, isOpen, fetchData, id, interestProperty } = props;\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  // const [data, setData] = useState([])\n  const [propertyData, setPropertyData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state?.propertyData?.data);\n\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    setPropertyData(result?.payload?.data);\n\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...result?.payload?.data?.[0]?.fields\n        ?.filter((field) => field?.isTableField === true)\n        ?.map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n  const uniqueValues = [...new Set(selectedValues)];\n\n  const handleSubmit = async () => {\n    try {\n      setIsLoding(true);\n      let result = await postApi(\n        `api/contact/add-property-interest/${id}`,\n        uniqueValues,\n      );\n      if (result && result?.status === 200) {\n        fetchData();\n        onClose();\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchPropertyData());\n    fetchCustomDataFields();\n  }, []);\n\n  useEffect(() => {\n    interestProperty?.map((item) =>\n      setSelectedValues((prevSelectedValues) => [...prevSelectedValues, item]),\n    );\n  }, [interestProperty]);\n\n  return (\n    <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Select Interested Property</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {isLoding ? (\n            <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n              <Spinner />\n            </Flex>\n          ) : (\n            <CommonCheckTable\n              title={\"Properties\"}\n              isLoding={isLoding}\n              columnData={columns ?? []}\n              // dataColumn={columns ?? []}\n              allData={data ?? []}\n              tableData={data}\n              tableCustomFields={\n                propertyData?.[0]?.fields?.filter(\n                  (field) => field?.isTableField === true,\n                ) || []\n              }\n              AdvanceSearch={() => \"\"}\n              ManageGrid={false}\n              deleteMany={false}\n              selectedValues={selectedValues}\n              setSelectedValues={setSelectedValues}\n              selectType=\"multiple\"\n              customSearch={false}\n            />\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"sm\"\n            variant=\"brand\"\n            onClick={handleSubmit}\n            disabled={isLoding ? true : false}\n          >\n            {\" \"}\n            {isLoding ? <Spinner /> : \"Save\"}\n          </Button>\n          <Button\n            size=\"sm\"\n            sx={{\n              marginLeft: 2,\n              textTransform: \"capitalize\",\n            }}\n            variant=\"outline\"\n            colorScheme=\"red\"\n            onClick={() => onClose()}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default PropertyModel;\n","import { AddIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Flex,\n  FormControl,\n  FormLabel,\n  Grid,\n  GridItem,\n  Heading,\n  IconButton,\n  Input,\n  Select,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Textarea,\n  Th,\n  Thead,\n  Tr,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { LiaMousePointerSolid } from \"react-icons/lia\";\nimport { postApi, getApi, putApi } from \"services/api\";\nimport { generateValidationSchema } from \"utils\";\nimport CustomForm from \"utils/customForm\";\nimport * as yup from \"yup\";\nimport { quoteSchema } from \"../../../schema/quoteSchema\";\nimport UserModel from \"components/commonTableModel/UserModel\";\nimport OpprtunityModel from \"components/commonTableModel/OpprtunityModel\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOpportunityData } from \"../../../redux/slices/opportunitySlice\";\nimport AccountModel from \"components/commonTableModel/AccountModel\";\nimport { fetchAccountData } from \"../../../redux/slices/accountSlice\";\nimport ContactModel from \"components/commonTableModel/ContactModel\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\n\nconst AddEdit = (props) => {\n  const { isOpen, size, onClose, type, setAction, selectedId, contactId } =\n    props;\n  const [isLoding, setIsLoding] = useState(false);\n  const [userModel, setUserModel] = useState(false);\n  const [opprtunityModel, setOpprtunityModel] = useState(false);\n  const [userData, setUserData] = useState([]);\n  const [accountModel, setAccountModel] = useState(false);\n  const [contactModel, setContactModel] = useState(false);\n  const [quotesDetails, setQuotesDetails] = useState({});\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage?.getItem(\"user\"));\n  const [accountAccess, contactAccess, opportunityAccess] = HasAccess([\n    \"Account\",\n    \"Contacts\",\n    \"Opportunities\",\n  ]);\n\n  const opportunityList = useSelector(\n    (state) => state?.opportunityData?.data?.data,\n  );\n  const accountList = useSelector((state) => state?.accountData?.data?.data);\n  const contactList = useSelector((state) => state?.contactData?.data);\n\n  const initialValues = {\n    title: type === \"edit\" ? quotesDetails?.title : \"\",\n    oppotunity: type === \"edit\" ? quotesDetails?.oppotunity : null,\n    quoteStage: type === \"edit\" ? quotesDetails?.quoteStage : \"Draft\",\n    invoiceStatus:\n      type === \"edit\" ? quotesDetails?.invoiceStatus : \"Not Invoiced\",\n    validUntil: type === \"edit\" ? quotesDetails?.validUntil : \"\",\n    assignedTo: type === \"edit\" ? quotesDetails?.assignedTo : null,\n    paymentTerms: type === \"edit\" ? quotesDetails?.paymentTerms : \"\",\n    approvalStatus: type === \"edit\" ? quotesDetails?.approvalStatus : \"\",\n    nonPrimaryEmail: type === \"edit\" ? quotesDetails?.nonPrimaryEmail : \"\",\n    approvalIssues: type === \"edit\" ? quotesDetails?.approvalIssues : \"\",\n    terms: type === \"edit\" ? quotesDetails?.terms : \"\",\n    description: type === \"edit\" ? quotesDetails?.description : \"\",\n    account: type === \"edit\" ? quotesDetails?.account : null,\n    contact:\n      type === \"edit\" ? quotesDetails?.contact : contactId ? contactId : null,\n    billingStreet: type === \"edit\" ? quotesDetails?.billingStreet : \"\",\n    shippingStreet: type === \"edit\" ? quotesDetails?.shippingStreet : \"\",\n    billingCity: type === \"edit\" ? quotesDetails?.billingCity : \"\",\n    shippingCity: type === \"edit\" ? quotesDetails?.shippingCity : \"\",\n    billingState: type === \"edit\" ? quotesDetails?.billingState : \"\",\n    shippingState: type === \"edit\" ? quotesDetails?.shippingState : \"\",\n    billingPostalCode: type === \"edit\" ? quotesDetails?.billingPostalCode : \"\",\n    shippingPostalCode:\n      type === \"edit\" ? quotesDetails?.shippingPostalCode : \"\",\n    billingCountry: type === \"edit\" ? quotesDetails?.billingCountry : \"\",\n    shippingCountry: type === \"edit\" ? quotesDetails?.shippingCountry : \"\",\n    isCheck: type === \"edit\" ? quotesDetails?.isCheck : false,\n    currency: type === \"edit\" ? quotesDetails?.currency : \"$\",\n    total: type === \"edit\" ? quotesDetails?.total : \"\",\n    discount: type === \"edit\" ? quotesDetails?.discount : \"\",\n    subtotal: type === \"edit\" ? quotesDetails?.subtotal : \"\",\n    shipping: type === \"edit\" ? quotesDetails?.shipping : \"\",\n    shippingTax: type === \"edit\" ? quotesDetails?.shippingTax : \"\",\n    ptax: type === \"edit\" ? quotesDetails?.ptax : \"\",\n    tax: type === \"edit\" ? quotesDetails?.tax : \"\",\n    grandTotal: type === \"edit\" ? quotesDetails?.grandTotal : \"\",\n    discountType: type === \"edit\" ? quotesDetails?.discountType : \"none\",\n    items: type === \"edit\" ? quotesDetails?.items : [],\n    createBy: JSON.parse(localStorage.getItem(\"user\"))?._id,\n    modifiedBy: JSON.parse(localStorage.getItem(\"user\"))?._id,\n  };\n\n  const addData = async (values) => {\n    try {\n      setIsLoding(true);\n      let response = await postApi(\"api/quotes/add\", values);\n      if (response?.status === 200) {\n        onClose();\n        toast.success(`Quotes Save successfully`);\n        formik.resetForm();\n        setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n      toast.error(`server error`);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  const editData = async (values) => {\n    try {\n      setIsLoding(true);\n      let response = await putApi(`api/quotes/edit/${selectedId}`, values);\n      if (response?.status === 200) {\n        onClose();\n        toast.success(`Quotes Update successfully`);\n        formik.resetForm();\n        setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n      toast.error(`server error`);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const handleCancel = () => {\n    formik.resetForm();\n    onClose();\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: quoteSchema,\n    enableReinitialize: true,\n    onSubmit: (values, { resetForm }) => {\n      if (type === \"add\") {\n        addData(values);\n      } else {\n        const payload = { ...values, modifiedDate: new Date() };\n        editData(payload);\n      }\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  } = formik;\n\n  const handleCheck = (e) => {\n    setFieldValue(\"isCheck\", e?.target?.checked);\n    if (e?.target?.checked) {\n      setFieldValue(\"shippingStreet\", values?.billingStreet);\n      setFieldValue(\"shippingCity\", values?.billingCity);\n      setFieldValue(\"shippingState\", values?.billingState);\n      setFieldValue(\"shippingPostalCode\", values?.billingPostalCode);\n      setFieldValue(\"shippingCountry\", values?.billingCountry);\n    } else {\n      setFieldValue(\"shippingStreet\", \"\");\n      setFieldValue(\"shippingCity\", \"\");\n      setFieldValue(\"shippingState\", \"\");\n      setFieldValue(\"shippingPostalCode\", \"\");\n      setFieldValue(\"shippingCountry\", \"\");\n    }\n  };\n\n  const fetchData = async () => {\n    setIsLoding(true);\n    let result = await getApi(\"api/user/\");\n    setUserData(result?.data?.user);\n    setIsLoding(false);\n  };\n\n  const fetchQuotesDetails = async () => {\n    if (type === \"edit\") {\n      try {\n        setIsLoding(true);\n        let result = await getApi(\"api/quotes/view/\", selectedId);\n        if (result?.status === 200) {\n          setQuotesDetails(result?.data?.result);\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoding(false);\n      }\n    }\n  };\n\n  const calculateAmounts = (items) => {\n    const totalAmount = items?.reduce((sum, item) => sum + item?.amount, 0);\n    const totalDiscount = items?.reduce(\n      (sum, item) => sum + item?.totalDiscount,\n      0,\n    );\n    const netAmount = Number(totalAmount) - Number(totalDiscount);\n    return { totalAmount, netAmount, discount: totalDiscount };\n  };\n\n  const handleAddItem = () => {\n    setFieldValue(\"items\", [\n      ...values?.items,\n      {\n        id: values?.items?.length + 1,\n        productName: \"\",\n        qty: 0,\n        rate: 0,\n        discount: 0,\n        discountType: \"none\",\n        totalDiscount: 0,\n        amount: 0,\n      },\n    ]);\n  };\n\n  const handleRemoveItem = (index) => {\n    const newItems = values?.items?.filter((_, idx) => idx !== index);\n    setFieldValue(\"items\", newItems);\n    const { totalAmount, netAmount, discount } = calculateAmounts(newItems);\n    setFieldValue(\"total\", totalAmount);\n    setFieldValue(\"grandTotal\", netAmount);\n    setFieldValue(\"discount\", discount);\n  };\n\n  const handleChangeCalculation = (index, field, value) => {\n    const newItems = values?.items?.map((item, idx) => {\n      if (idx === index) {\n        const updatedItem = { ...item, [field]: value };\n        if ([\"qty\", \"rate\", \"discount\", \"discountType\"]?.includes(field)) {\n          const discountValue =\n            updatedItem?.discountType === \"percent\"\n              ? (updatedItem.rate * updatedItem?.qty * updatedItem?.discount) /\n                100\n              : updatedItem?.discountType === \"none\"\n                ? 0\n                : updatedItem?.discount;\n          updatedItem.amount =\n            updatedItem?.rate * updatedItem?.qty - discountValue;\n          updatedItem.totalDiscount = discountValue;\n        }\n        return updatedItem;\n      }\n      return item;\n    });\n\n    setFieldValue(\"items\", newItems);\n    const { totalAmount, netAmount, discount } = calculateAmounts(newItems);\n    setFieldValue(\"discount\", discount);\n    setFieldValue(\"total\", totalAmount);\n    setFieldValue(\"subtotal\", totalAmount);\n    setFieldValue(\"grandTotal\", netAmount);\n  };\n\n  const calculateValues = useCallback(() => {\n    const subtotal = values?.subtotal;\n    const shipping = Number(values?.shipping);\n    const ptax = Number(values?.ptax);\n    const shippingTax = Number(subtotal) + Number(shipping);\n    const tax = (shippingTax * ptax) / 100;\n    const grandTotal = Number(shippingTax) + Number(tax);\n\n    setFieldValue(\"shippingTax\", shippingTax?.toFixed(2));\n    setFieldValue(\"tax\", tax?.toFixed(2));\n    setFieldValue(\"grandTotal\", grandTotal?.toFixed(2));\n  }, [values?.subtotal, values?.shipping, values?.ptax]);\n\n  useEffect(() => {\n    calculateValues();\n  }, [calculateValues]);\n\n  useEffect(() => {\n    if (type === \"edit\") fetchQuotesDetails();\n    if (user?.role === \"superAdmin\") fetchData();\n  }, [type, selectedId]);\n\n  useEffect(() => {\n    if (opportunityList?.length === 0 || opportunityList === undefined) {\n      dispatch(fetchOpportunityData());\n    }\n    if (accountList?.length === 0 || accountList === undefined) {\n      dispatch(fetchAccountData());\n    }\n  }, []);\n\n  return (\n    <div>\n      {userModel && (\n        <UserModel\n          onClose={() => setUserModel(false)}\n          isOpen={userModel}\n          fieldName={\"assignedTo\"}\n          setFieldValue={setFieldValue}\n          data={userData}\n          isLoding={isLoding}\n          setIsLoding={setIsLoding}\n        />\n      )}\n      {opprtunityModel && (\n        <OpprtunityModel\n          onClose={() => setOpprtunityModel(false)}\n          isOpen={opprtunityModel}\n          fieldName={\"oppotunity\"}\n          setFieldValue={setFieldValue}\n          data={opportunityList}\n          isLoding={isLoding}\n          setIsLoding={setIsLoding}\n          type=\"quotes\"\n          billingState=\"billingState\"\n          billingCity=\"billingCity\"\n          billingPostalCode=\"billingPostalCode\"\n          billingCountry=\"billingCountry\"\n          billingStreet=\"billingStreet\"\n        />\n      )}\n      {accountModel && (\n        <AccountModel\n          onClose={() => setAccountModel(false)}\n          isOpen={accountModel}\n          fieldName={\"account\"}\n          setFieldValue={setFieldValue}\n          data={accountList}\n        />\n      )}\n      {contactModel && (\n        <ContactModel\n          isOpen={contactModel}\n          data={contactList}\n          onClose={setContactModel}\n          values={values}\n          fieldName=\"contact\"\n          setFieldValue={setFieldValue}\n        />\n      )}\n\n      <Drawer isOpen={isOpen} size={size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            display=\"flex\"\n          >\n            {type === \"add\" ? \"Add\" : \"Edit\"} Quotes\n            <IconButton onClick={() => handleCancel()} icon={<CloseIcon />} />\n          </DrawerHeader>\n          <DrawerBody>\n            <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n              <GridItem colSpan={{ base: 12 }}>\n                <Heading as=\"h1\" size=\"md\" mt=\"10px\">\n                  Overview\n                </Heading>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Title<Text color={\"red\"}>*</Text>\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.title}\n                  name=\"title\"\n                  onChange={handleChange}\n                  placeholder=\"Title\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.title && touched?.title ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.title && touched?.title && errors?.title}\n                </Text>\n              </GridItem>\n              {(user?.role === \"superAdmin\" || opportunityAccess?.view) && (\n                <GridItem colSpan={{ base: 12, md: 6 }}>\n                  <FormLabel\n                    display=\"flex\"\n                    ms=\"4px\"\n                    fontSize=\"sm\"\n                    fontWeight=\"500\"\n                    mb=\"8px\"\n                  >\n                    Opportunity\n                  </FormLabel>\n                  <Flex justifyContent={\"space-between\"}>\n                    <Select\n                      value={values?.oppotunity}\n                      name=\"oppotunity\"\n                      onChange={handleChange}\n                      mb={\n                        errors?.oppotunity && touched?.oppotunity\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Opportunity\"}\n                      borderColor={\n                        errors?.oppotunity && touched?.oppotunity\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      {opportunityList?.length > 0 &&\n                        opportunityList?.map((item) => {\n                          return (\n                            <option\n                              value={item?._id}\n                              key={item?._id}\n                            >{`${item?.opportunityName}`}</option>\n                          );\n                        })}\n                    </Select>\n                    <IconButton\n                      onClick={() => setOpprtunityModel(true)}\n                      ml={2}\n                      fontSize=\"25px\"\n                      icon={<LiaMousePointerSolid />}\n                    />\n                  </Flex>\n                  <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                    {\" \"}\n                    {errors?.oppotunity &&\n                      touched?.oppotunity &&\n                      errors?.oppotunity}\n                  </Text>\n                </GridItem>\n              )}\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Quote Stage<Text color={\"red\"}>*</Text>\n                </FormLabel>\n                <Select\n                  value={values?.quoteStage}\n                  name=\"quoteStage\"\n                  onChange={handleChange}\n                  mb={\n                    errors?.quoteStage && touched?.quoteStage\n                      ? undefined\n                      : \"10px\"\n                  }\n                  fontWeight=\"500\"\n                  placeholder={\"Quote Stage\"}\n                  borderColor={\n                    errors?.quoteStage && touched?.quoteStage ? \"red.300\" : null\n                  }\n                >\n                  <option value=\"Draft\">Draft</option>\n                  <option value=\"Negotiation\">Negotiation</option>\n                  <option value=\"Delivered\">Delivered</option>\n                  <option value=\"On Hold\">On Hold</option>\n                  <option value=\"Confirmed\">Confirmed</option>\n                  <option value=\"Closed Accepted\">Closed Accepted</option>\n                  <option value=\"Closed Lost\">Closed Lost</option>\n                  <option value=\"Closed Dead\">Closed Dead</option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.quoteStage &&\n                    touched?.quoteStage &&\n                    errors?.quoteStage}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Invoice Status\n                </FormLabel>\n                <Select\n                  value={values?.invoiceStatus}\n                  name=\"invoiceStatus\"\n                  onChange={handleChange}\n                  mb={\n                    errors?.invoiceStatus && touched?.invoiceStatus\n                      ? undefined\n                      : \"10px\"\n                  }\n                  fontWeight=\"500\"\n                  placeholder={\"Invoice Status\"}\n                  borderColor={\n                    errors?.invoiceStatus && touched?.invoiceStatus\n                      ? \"red.300\"\n                      : null\n                  }\n                >\n                  <option value=\"Not Invoiced\">Not Invoiced</option>\n                  <option value=\"Invoiced\">Invoiced</option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.invoiceStatus &&\n                    touched?.invoiceStatus &&\n                    errors?.invoiceStatus}\n                </Text>\n              </GridItem>\n\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Valid Until<Text color={\"red\"}>*</Text>\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={dayjs(values?.validUntil)?.format(\"YYYY-MM-DD\")}\n                  name=\"validUntil\"\n                  type=\"date\"\n                  onChange={handleChange}\n                  placeholder=\"Valid Until\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.validUntil && touched?.validUntil ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.validUntil &&\n                    touched?.validUntil &&\n                    errors?.validUntil}\n                </Text>\n              </GridItem>\n              {user?.role === \"superAdmin\" && (\n                <GridItem colSpan={{ base: 12, md: 6 }}>\n                  <FormLabel\n                    display=\"flex\"\n                    ms=\"4px\"\n                    fontSize=\"sm\"\n                    fontWeight=\"500\"\n                    mb=\"8px\"\n                  >\n                    Assigned To\n                  </FormLabel>\n                  <Flex justifyContent={\"space-between\"}>\n                    <Select\n                      value={values?.assignedTo}\n                      name=\"assignedTo\"\n                      onChange={handleChange}\n                      mb={\n                        errors?.assignedTo && touched?.assignedTo\n                          ? undefined\n                          : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Assigned To\"}\n                      borderColor={\n                        errors?.assignedTo && touched?.assignedTo\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      {userData?.map((item) => {\n                        return (\n                          <option\n                            value={item?._id}\n                            key={item?._id}\n                          >{`${item?.firstName} ${item?.lastName}`}</option>\n                        );\n                      })}\n                    </Select>\n                    <IconButton\n                      onClick={() => setUserModel(true)}\n                      ml={2}\n                      fontSize=\"25px\"\n                      icon={<LiaMousePointerSolid />}\n                    />\n                  </Flex>\n                </GridItem>\n              )}\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Payment Terms\n                </FormLabel>\n                <Select\n                  value={values?.paymentTerms}\n                  name=\"paymentTerms\"\n                  onChange={handleChange}\n                  mb={\n                    errors?.paymentTerms && touched?.paymentTerms\n                      ? undefined\n                      : \"10px\"\n                  }\n                  fontWeight=\"500\"\n                  placeholder={\"Payment Terms\"}\n                  borderColor={\n                    errors?.paymentTerms && touched?.paymentTerms\n                      ? \"red.300\"\n                      : null\n                  }\n                >\n                  <option value=\"Nett 15\">Nett 15</option>\n                  <option value=\"Nett 30\">Nett 30</option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.paymentTerms &&\n                    touched?.paymentTerms &&\n                    errors?.paymentTerms}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Approval Status\n                </FormLabel>\n                <Select\n                  value={values?.approvalStatus}\n                  name=\"approvalStatus\"\n                  onChange={handleChange}\n                  mb={\n                    errors?.approvalStatus && touched?.approvalStatus\n                      ? undefined\n                      : \"10px\"\n                  }\n                  fontWeight=\"500\"\n                  placeholder={\"Approval Status\"}\n                  borderColor={\n                    errors?.approvalStatus && touched?.approvalStatus\n                      ? \"red.300\"\n                      : null\n                  }\n                >\n                  <option value=\"Approved\">Approved</option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.approvalStatus &&\n                    touched?.approvalStatus &&\n                    errors?.approvalStatus}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Approval Issues\n                </FormLabel>\n                <Textarea\n                  fontSize=\"sm\"\n                  value={values?.approvalIssues}\n                  name=\"approvalIssues\"\n                  resize={\"none\"}\n                  onChange={handleChange}\n                  placeholder=\"Approval Issues\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.approvalIssues && touched?.approvalIssues\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.approvalIssues &&\n                    touched?.approvalIssues &&\n                    errors?.approvalIssues}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Terms\n                </FormLabel>\n                <Textarea\n                  fontSize=\"sm\"\n                  value={values?.terms}\n                  name=\"terms\"\n                  resize={\"none\"}\n                  onChange={handleChange}\n                  placeholder=\"Terms\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.terms && touched?.terms ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.terms && touched?.terms && errors?.terms}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Description\n                </FormLabel>\n                <Textarea\n                  fontSize=\"sm\"\n                  value={values?.description}\n                  name=\"description\"\n                  resize={\"none\"}\n                  onChange={handleChange}\n                  placeholder=\"Description\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.description && touched?.description\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.description &&\n                    touched?.description &&\n                    errors?.description}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <Heading as=\"h1\" size=\"md\" mt=\"10px\">\n                  Address Information\n                </Heading>\n              </GridItem>\n              {(user?.role === \"superAdmin\" || accountAccess?.view) && (\n                <GridItem colSpan={{ base: 12, md: 6 }}>\n                  <FormLabel\n                    display=\"flex\"\n                    ms=\"4px\"\n                    fontSize=\"sm\"\n                    fontWeight=\"500\"\n                    mb=\"8px\"\n                  >\n                    Account\n                  </FormLabel>\n                  <Flex justifyContent={\"space-between\"}>\n                    <Select\n                      value={values?.account}\n                      name=\"account\"\n                      onChange={handleChange}\n                      mb={\n                        errors?.account && touched?.account ? undefined : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Account\"}\n                      borderColor={\n                        errors?.account && touched?.account ? \"red.300\" : null\n                      }\n                    >\n                      {accountList?.length > 0 &&\n                        accountList?.map((item) => {\n                          return (\n                            <option\n                              value={item?._id}\n                              key={item?._id}\n                            >{`${item?.name}`}</option>\n                          );\n                        })}\n                    </Select>\n                    <IconButton\n                      onClick={() => setAccountModel(true)}\n                      ml={2}\n                      fontSize=\"25px\"\n                      icon={<LiaMousePointerSolid />}\n                    />\n                  </Flex>\n                  <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                    {\" \"}\n                    {errors?.account && touched?.account && errors?.account}\n                  </Text>\n                </GridItem>\n              )}\n              {(user?.role === \"superAdmin\" || contactAccess?.view) && (\n                <GridItem colSpan={{ base: 12, md: 6 }}>\n                  <FormLabel\n                    display=\"flex\"\n                    ms=\"4px\"\n                    fontSize=\"sm\"\n                    fontWeight=\"500\"\n                    mb=\"8px\"\n                  >\n                    Contact\n                  </FormLabel>\n                  <Flex justifyContent={\"space-between\"}>\n                    <Select\n                      value={values?.contact}\n                      name=\"contact\"\n                      onChange={handleChange}\n                      mb={\n                        errors?.contact && touched?.contact ? undefined : \"10px\"\n                      }\n                      fontWeight=\"500\"\n                      placeholder={\"Contact\"}\n                      borderColor={\n                        errors?.contact && touched?.contact ? \"red.300\" : null\n                      }\n                    >\n                      {contactList?.length > 0 &&\n                        contactList?.map((item) => {\n                          return (\n                            <option\n                              value={item?._id}\n                              key={item?._id}\n                            >{`${item?.firstName} ${item?.lastName}`}</option>\n                          );\n                        })}\n                    </Select>\n                    <IconButton\n                      onClick={() => setContactModel(true)}\n                      ml={2}\n                      fontSize=\"25px\"\n                      icon={<LiaMousePointerSolid />}\n                    />\n                  </Flex>\n                  <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                    {\" \"}\n                    {errors?.contact && touched?.contact && errors?.contact}\n                  </Text>\n                </GridItem>\n              )}\n\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <Heading as=\"h1\" size=\"md\" mt=\"10px\">\n                  Billing Address\n                </Heading>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <Heading as=\"h1\" size=\"md\" mt=\"10px\">\n                  Shipping Address\n                </Heading>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <Checkbox\n                  isChecked={values?.isCheck}\n                  onChange={(e) => handleCheck(e)}\n                  visibility={\"hidden\"}\n                >\n                  Copy address from left\n                </Checkbox>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                  mt={3}\n                >\n                  Billing Street\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.billingStreet}\n                  name=\"billingStreet\"\n                  onChange={handleChange}\n                  placeholder=\"Billing Street\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.billingStreet && touched?.billingStreet\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.billingStreet &&\n                    touched?.billingStreet &&\n                    errors?.billingStreet}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <Checkbox\n                  isChecked={values?.isCheck}\n                  onChange={(e) => handleCheck(e)}\n                >\n                  Copy address from left\n                </Checkbox>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                  mt={3}\n                >\n                  Shipping Street\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingStreet}\n                  name=\"shippingStreet\"\n                  disabled={values?.isCheck}\n                  onChange={handleChange}\n                  placeholder=\"Shipping Street\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingStreet && touched?.shippingStreet\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingStreet &&\n                    touched?.shippingStreet &&\n                    errors?.shippingStreet}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Billing City\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.billingCity}\n                  name=\"billingCity\"\n                  onChange={handleChange}\n                  placeholder=\"Billing City\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.billingCity && touched?.billingCity\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.billingCity &&\n                    touched?.billingCity &&\n                    errors?.billingCity}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping City\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingCity}\n                  name=\"shippingCity\"\n                  disabled={values?.isCheck}\n                  onChange={handleChange}\n                  placeholder=\"Shipping City\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingCity && touched?.shippingCity\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingCity &&\n                    touched?.shippingCity &&\n                    errors?.shippingCity}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Billing State\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.billingState}\n                  name=\"billingState\"\n                  onChange={handleChange}\n                  placeholder=\"Billing State\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.billingState && touched?.billingState\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.billingState &&\n                    touched?.billingState &&\n                    errors?.billingState}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping State\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingState}\n                  disabled={values?.isCheck}\n                  name=\"shippingState\"\n                  onChange={handleChange}\n                  placeholder=\"Shipping State\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingState && touched?.shippingState\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingState &&\n                    touched?.shippingState &&\n                    errors?.shippingState}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Billing Postal Code\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.billingPostalCode}\n                  name=\"billingPostalCode\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  placeholder=\"Billing Postal Code\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.billingPostalCode && touched?.billingPostalCode\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.billingPostalCode &&\n                    touched?.billingPostalCode &&\n                    errors?.billingPostalCode}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping Postal Code\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingPostalCode}\n                  disabled={values?.isCheck}\n                  name=\"shippingPostalCode\"\n                  type=\"number\"\n                  onChange={handleChange}\n                  placeholder=\"Shipping Postal Code\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingPostalCode && touched?.shippingPostalCode\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingPostalCode &&\n                    touched?.shippingPostalCode &&\n                    errors?.shippingPostalCode}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Billing Country\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.billingCountry}\n                  name=\"billingCountry\"\n                  onChange={handleChange}\n                  placeholder=\"Billing Country\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.billingCountry && touched?.billingCountry\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.billingCountry &&\n                    touched?.billingCountry &&\n                    errors?.billingCountry}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping Country\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingCountry}\n                  name=\"shippingCountry\"\n                  onChange={handleChange}\n                  disabled={values?.isCheck}\n                  placeholder=\"Shipping Country\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingCountry && touched?.shippingCountry\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingCountry &&\n                    touched?.shippingCountry &&\n                    errors?.shippingCountry}\n                </Text>\n              </GridItem>\n\n              <GridItem colSpan={{ base: 12 }}>\n                <Heading as=\"h1\" size=\"md\" mt=\"10px\">\n                  Line Items\n                </Heading>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Currency\n                </FormLabel>\n                <Select\n                  value={values?.currency}\n                  name=\"currency\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  mb={\n                    errors?.currency && touched?.currency ? undefined : \"10px\"\n                  }\n                  fontWeight=\"500\"\n                  placeholder={\"Select Currency\"}\n                  borderColor={\n                    errors?.currency && touched?.currency ? \"red.300\" : null\n                  }\n                >\n                  <option value=\"$\" selected>\n                    USD\n                  </option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.currency && touched?.currency && errors?.currency}\n                </Text>\n              </GridItem>\n\n              <GridItem colSpan={{ base: 12 }}>\n                <Box>\n                  <Table\n                    variant=\"simple\"\n                    size=\"sm\"\n                    mt={5}\n                    backgroundColor=\"#f9f9f9\"\n                  >\n                    <Thead>\n                      <Tr>\n                        <Th></Th>\n                        <Th>#</Th>\n                        <Th>Item</Th>\n                        <Th>Qty</Th>\n                        <Th>Rate</Th>\n                        <Th>Discount</Th>\n                        <Th>Amount</Th>\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {values?.items?.length > 0 &&\n                        values?.items?.map((item, index) => (\n                          <Tr key={item?.id}>\n                            <Td className=\"text-center\">\n                              <IconButton\n                                icon={<CloseIcon />}\n                                onClick={() => handleRemoveItem(index)}\n                                colorScheme=\"red\"\n                                variant=\"outline\"\n                                size=\"sm\"\n                                style={{ fontSize: \"10px\" }}\n                              />\n                            </Td>\n                            <Td>{index + 1}</Td>\n                            <Td>\n                              <FormControl>\n                                <Input\n                                  type=\"text\"\n                                  value={item?.productName}\n                                  onChange={(e) =>\n                                    handleChangeCalculation(\n                                      index,\n                                      \"productName\",\n                                      e?.target?.value,\n                                    )\n                                  }\n                                  size=\"sm\"\n                                />\n                              </FormControl>\n                            </Td>\n                            <Td>\n                              <FormControl>\n                                <Input\n                                  type=\"number\"\n                                  value={item?.qty}\n                                  onChange={(e) =>\n                                    handleChangeCalculation(\n                                      index,\n                                      \"qty\",\n                                      Number(e?.target?.value),\n                                    )\n                                  }\n                                  size=\"sm\"\n                                />\n                              </FormControl>\n                            </Td>\n                            <Td>\n                              <FormControl>\n                                <Input\n                                  type=\"number\"\n                                  value={item?.rate}\n                                  onChange={(e) =>\n                                    handleChangeCalculation(\n                                      index,\n                                      \"rate\",\n                                      Number(e?.target?.value),\n                                    )\n                                  }\n                                  size=\"sm\"\n                                />\n                              </FormControl>\n                            </Td>\n                            <Td style={{ display: \"flex\" }}>\n                              <FormControl>\n                                <Input\n                                  type=\"number\"\n                                  value={item?.discount}\n                                  onChange={(e) =>\n                                    handleChangeCalculation(\n                                      index,\n                                      \"discount\",\n                                      Number(e?.target?.value),\n                                    )\n                                  }\n                                  size=\"sm\"\n                                  disabled={item?.discountType === \"none\"}\n                                />\n                                <Select\n                                  value={item?.discountType}\n                                  onChange={(e) => {\n                                    handleChangeCalculation(\n                                      index,\n                                      \"discountType\",\n                                      e?.target?.value,\n                                    );\n                                  }}\n                                  size=\"sm\"\n                                >\n                                  <option value=\"none\">none</option>\n                                  <option value=\"percent\">%</option>\n                                  <option value=\"flatAmount\">\n                                    {values?.currency}\n                                  </option>\n                                </Select>\n                              </FormControl>\n                            </Td>\n                            <Td>\n                              <FormControl>\n                                <Input\n                                  type=\"number\"\n                                  value={item?.amount}\n                                  readOnly\n                                  size=\"sm\"\n                                />\n                              </FormControl>\n                            </Td>\n                          </Tr>\n                        ))}\n                      <Tr>\n                        <Td colSpan={4} display=\"flex\" justifyContent={\"end\"}>\n                          <IconButton\n                            icon={<AddIcon />}\n                            onClick={handleAddItem}\n                            colorScheme=\"green\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            style={{ fontSize: \"10px\" }}\n                          />\n                        </Td>\n                        <Td></Td>\n                        <Td></Td>\n                        <Td></Td>\n                      </Tr>\n                    </Tbody>\n                  </Table>\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Total\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.total}\n                  name=\"total\"\n                  onChange={handleChange}\n                  placeholder=\"Total\"\n                  fontWeight=\"500\"\n                  type=\"number\"\n                  borderColor={\n                    errors?.total && touched?.total ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.total && touched?.total && errors?.total}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Total Discount\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.discount}\n                  name=\"discount\"\n                  onBlur={handleBlur}\n                  type=\"number\"\n                  onChange={handleChange}\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.discount && touched?.discount ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.discount && touched?.discount && errors?.discount}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Subtotal\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.subtotal}\n                  name=\"subtotal\"\n                  type=\"number\"\n                  onChange={handleChange}\n                  placeholder=\"Subtotal\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.subtotal && touched?.subtotal ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.subtotal && touched?.subtotal && errors?.subtotal}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shipping}\n                  name=\"shipping\"\n                  type=\"number\"\n                  onChange={handleChange}\n                  placeholder=\"Shipping\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shipping && touched?.shipping ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shipping && touched?.shipping && errors?.shipping}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 10 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Shipping Tax\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.shippingTax}\n                  name=\"shippingTax\"\n                  onChange={handleChange}\n                  placeholder=\"Shipping Tax\"\n                  type=\"number\"\n                  fontWeight=\"500\"\n                  borderColor={\n                    errors?.shippingTax && touched?.shippingTax\n                      ? \"red.300\"\n                      : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.shippingTax &&\n                    touched?.shippingTax &&\n                    errors?.shippingTax}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12, md: 2 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                  visibility={\"hidden\"}\n                >\n                  -\n                </FormLabel>\n                <Select\n                  value={values?.ptax}\n                  name=\"ptax\"\n                  onChange={handleChange}\n                  mb={errors?.ptax && touched?.ptax ? undefined : \"10px\"}\n                  fontWeight=\"500\"\n                  borderColor={errors?.ptax && touched?.ptax ? \"red.300\" : null}\n                >\n                  <option value=\"0\">0%</option>\n                  <option value=\"10\">10%</option>\n                  <option value=\"18\">18%</option>\n                </Select>\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.ptax && touched?.ptax && errors?.ptax}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Tax\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.tax}\n                  name=\"tax\"\n                  onChange={handleChange}\n                  fontWeight=\"500\"\n                  type=\"number\"\n                  placeholder=\"Tax\"\n                  borderColor={errors?.tax && touched?.tax ? \"red.300\" : null}\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.tax && touched?.tax && errors?.tax}\n                </Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 12 }}>\n                <FormLabel\n                  display=\"flex\"\n                  ms=\"4px\"\n                  fontSize=\"sm\"\n                  fontWeight=\"500\"\n                  mb=\"8px\"\n                >\n                  Grand Total\n                </FormLabel>\n                <Input\n                  fontSize=\"sm\"\n                  value={values?.grandTotal}\n                  name=\"grandTotal\"\n                  onChange={handleChange}\n                  fontWeight=\"500\"\n                  type=\"number\"\n                  placeholder=\"Grand Total\"\n                  borderColor={\n                    errors?.grandTotal && touched?.grandTotal ? \"red.300\" : null\n                  }\n                />\n                <Text mb=\"10px\" fontSize=\"sm\" color={\"red\"}>\n                  {\" \"}\n                  {errors?.grandTotal &&\n                    touched?.grandTotal &&\n                    errors?.grandTotal}\n                </Text>\n              </GridItem>\n            </Grid>\n          </DrawerBody>\n          <DrawerFooter>\n            <Button\n              sx={{ textTransform: \"capitalize\" }}\n              size=\"sm\"\n              disabled={isLoding ? true : false}\n              variant=\"brand\"\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              {isLoding ? <Spinner /> : \"Save\"}\n            </Button>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"red\"\n              size=\"sm\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              onClick={handleCancel}\n            >\n              Close\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default AddEdit;\n","import {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  VStack,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport FolderTreeView from \"components/FolderTreeView/folderTreeView\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { constant } from \"constant\";\nimport { useEffect, useState } from \"react\";\nimport { BiLink, BiLogoLinkedin } from \"react-icons/bi\";\nimport { BsTwitter } from \"react-icons/bs\";\nimport { FaFacebook } from \"react-icons/fa\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { LuBuilding2 } from \"react-icons/lu\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getApi } from \"services/api\";\nimport AddEmailHistory from \"../emailHistory/components/AddEmail\";\nimport AddMeeting from \"../meeting/components/Addmeeting\";\nimport AddPhoneCall from \"../phoneCall/components/AddPhoneCall\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport PhoneCall from \"./components/phonCall\";\nimport PropertyModel from \"./components/propertyModel\";\nimport PropertyTable from \"./components/propertyTable\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport DataNotFound from \"components/notFoundData\";\nimport CustomView from \"utils/customView\";\nimport AddDocumentModal from \"utils/addDocumentModal\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteApi } from \"services/api\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\nimport moment from \"moment\";\nimport AddEdit from \"../task/components/AddEdit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContactCustomFiled } from \"../../../redux/slices/contactCustomFiledSlice\";\nimport { fetchPropertyCustomFiled } from \"../../../redux/slices/propertyCustomFiledSlice\";\nimport html2pdf from \"html2pdf.js\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport AddEditQuotes from \"../quotes/AddEdit\";\nimport AddEditInvoice from \"../invoice/AddEdit\";\nconst View = () => {\n  const param = useParams();\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const buttonbg = useColorModeValue(\"gray.200\", \"white\");\n  const [data, setData] = useState([]);\n  const [allData, setAllData] = useState([]);\n  // const [contactData, setContactData] = useState([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [propertyModel, setPropertyModel] = useState(false);\n  const [isLoding, setIsLoding] = useState(false);\n  const [action, setAction] = useState(false);\n\n  const [taskModel, setTaskModel] = useState(false);\n  const [addEmailHistory, setAddEmailHistory] = useState(false);\n  const [addPhoneCall, setAddPhoneCall] = useState(false);\n  const [addQuotes, setAddQuotes] = useState(false);\n  const [addInvoice, setAddInvoice] = useState(false);\n  const [addMeeting, setMeeting] = useState(false);\n  const [showEmail, setShowEmail] = useState(false);\n  const [showCall, setShowCall] = useState(false);\n  const [showTasks, setShowTasks] = useState(false);\n  const [showMeetings, setShowMeetings] = useState(false);\n  const [showQuotes, setShowQuotes] = useState(false);\n  const [showInvoices, setShowInvoices] = useState(false);\n  const [addDocument, setAddDocument] = useState(false);\n\n  const [selectedTab, setSelectedTab] = useState(0);\n  const size = \"lg\";\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const contactData = useSelector(\n    (state) => state?.contactCustomFiled?.data?.data,\n  );\n\n  const [propertyData, setPropertyData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [\n    permission,\n    callAccess,\n    emailAccess,\n    taskAccess,\n    meetingAccess,\n    quotesAccess,\n    invoicesAccess,\n    accountAccess,\n  ] = HasAccess([\n    \"Contacts\",\n    \"Calls\",\n    \"Emails\",\n    \"Tasks\",\n    \"Meetings\",\n    \"Quotes\",\n    \"Invoices\",\n    \"Account\",\n  ]);\n  const columnsDataColumns = [\n    { Header: \"sender\", accessor: \"senderName\" },\n    {\n      Header: \"recipient\",\n      accessor: \"createByName\",\n      cell: (cell) => (\n        <Link to={`/Email/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \"-\"}\n          </Text>\n        </Link>\n      ),\n    },\n    {\n      Header: \"time stamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value)?.fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Created\",\n      accessor: \"createBy\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.row?.values?.timestamp)?.format(\"h:mma (DD/MM)\")}\n          </Text>\n        </div>\n      ),\n    },\n  ];\n  const callColumns = [\n    { Header: \"sender\", accessor: \"senderName\" },\n    {\n      Header: \"recipient\",\n      accessor: \"createByName\",\n      cell: (cell) => (\n        <Link to={`/phone-call/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \"-\"}\n          </Text>\n        </Link>\n      ),\n    },\n    {\n      Header: \"time stamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value)?.fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Created\",\n      accessor: \"createBy\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.row?.values?.timestamp)?.format(\"h:mma (DD/MM)\")}\n          </Text>\n        </div>\n      ),\n    },\n  ];\n\n  const PropertyColumn = [\n    { Header: \"property Type\", accessor: \"propertyType\" },\n    { Header: \"property Address\", accessor: \"propertyAddress\" },\n    { Header: \"listing Price\", accessor: \"listingPrice\" },\n    { Header: \"square Footage\", accessor: \"squareFootage\" },\n    { Header: \"year Built\", accessor: \"yearBuilt\" },\n  ];\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    setPropertyData(result?.payload?.data);\n\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...result?.payload?.data?.[0]?.fields\n        ?.filter((field) => field?.isTableField === true)\n        ?.map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n  const MeetingColumns = [\n    {\n      Header: \"agenda\",\n      accessor: \"agenda\",\n      cell: (cell) => (\n        <Link to={`/metting/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \"-\"}\n          </Text>\n        </Link>\n      ),\n    },\n    { Header: \"date Time\", accessor: \"dateTime\" },\n    {\n      Header: \"times tamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value)?.fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"create By\", accessor: \"createdByName\" },\n  ];\n  const quotesColumns = [\n    {\n      Header: \"Quote Number\",\n      accessor: \"quoteNumber\",\n      isSortable: false,\n      width: 10,\n    },\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text\n            onClick={() => navigate(`/quotesView/${cell?.row?.original._id}`)}\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n              cursor: \"pointer\",\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"Quote Stage\", accessor: \"quoteStage\" },\n    {\n      Header: \"Contact\",\n      accessor: \"contact\",\n      cell: (cell) => (\n        <Text>\n          {cell?.row?.original?.contactName\n            ? cell?.row?.original?.contactName\n            : \"-\"}\n        </Text>\n      ),\n    },\n    {\n      Header: \"Account\",\n      accessor: \"account\",\n      cell: (cell) =>\n        user?.role === \"superAdmin\" || accountAccess?.view ? (\n          <div className=\"selectOpt\">\n            <Text\n              onClick={() =>\n                navigate(\n                  cell?.row?.original?.account !== null &&\n                    `/accountView/${cell?.row?.original?.account}`,\n                )\n              }\n              me=\"10px\"\n              sx={{\n                \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n                cursor: \"pointer\",\n              }}\n              color=\"brand.600\"\n              fontSize=\"sm\"\n              fontWeight=\"700\"\n            >\n              {cell?.row?.original?.accountName\n                ? cell?.row?.original?.accountName\n                : \"-\"}\n            </Text>\n          </div>\n        ) : (\n          <Text>\n            {cell?.row?.original?.accountName\n              ? cell?.row?.original?.accountName\n              : \"-\"}\n          </Text>\n        ),\n    },\n    {\n      Header: \"Grand Total\",\n      accessor: \"grandTotal\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text>\n            {cell?.row?.original?.grandTotal\n              ? `$${cell?.row?.original?.grandTotal}`\n              : \"-\"}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"valid Until\", accessor: \"validUntil\" },\n  ];\n  const invoicesColumns = [\n    {\n      Header: \"Invoice Number\",\n      accessor: \"invoiceNumber\",\n      isSortable: false,\n      width: 10,\n    },\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text\n            onClick={() =>\n              navigate(`/invoicesView/${cell?.row?.original?._id}`)\n            }\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n              cursor: \"pointer\",\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n    },\n    {\n      Header: \"Contact\",\n      accessor: \"contact\",\n      cell: (cell) => (\n        <Text>\n          {cell?.row?.original?.contactName\n            ? cell?.row?.original?.contactName\n            : \"-\"}\n        </Text>\n      ),\n    },\n    {\n      Header: \"Account\",\n      accessor: \"account\",\n      cell: (cell) =>\n        user?.role === \"superAdmin\" || accountAccess?.view ? (\n          <div className=\"selectOpt\">\n            <Text\n              onClick={() =>\n                navigate(\n                  cell?.row?.original?.account !== null &&\n                    `/accountView/${cell?.row?.original?.account}`,\n                )\n              }\n              me=\"10px\"\n              sx={{\n                \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n                cursor: \"pointer\",\n              }}\n              color=\"brand.600\"\n              fontSize=\"sm\"\n              fontWeight=\"700\"\n            >\n              {cell?.row?.original?.accountName\n                ? cell?.row?.original?.accountName\n                : \"-\"}\n            </Text>\n          </div>\n        ) : (\n          <Text>\n            {cell?.row?.original?.accountName\n              ? cell?.row?.original?.accountName\n              : \"-\"}\n          </Text>\n        ),\n    },\n    {\n      Header: \"Grand Total\",\n      accessor: \"grandTotal\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text>\n            {cell?.row?.original?.grandTotal\n              ? `$${cell?.row?.original?.grandTotal}`\n              : \"-\"}\n          </Text>\n        </div>\n      ),\n    },\n  ];\n\n  const taskColumns = [\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n      cell: (cell) => (\n        <Link to={`/view/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \"-\"}\n          </Text>\n        </Link>\n      ),\n    },\n    { Header: \"Category\", accessor: \"category\" },\n    { Header: \"Assign To\", accessor: \"assignToName\" },\n    { Header: \"Start Date\", accessor: \"start\" },\n    { Header: \"End Date\", accessor: \"end\" },\n  ];\n\n  const handleTabChange = (index) => {\n    setSelectedTab(index);\n  };\n\n  const generatePDF = () => {\n    const element = document.getElementById(\"reports\");\n    if (element) {\n      element.style.display = \"block\";\n      element.style.width = \"100%\"; // Adjust width for mobile\n      element.style.height = \"auto\";\n      // setTimeout(() => {\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `Contact_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          element.style.display = \"\";\n        });\n      // }, 500);\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n    }\n  };\n\n  const download = async (data) => {\n    if (data) {\n      let result = await getApi(`api/document/download/`, data);\n      if (result && result?.status === 200) {\n        window?.open(`${constant?.baseUrl}api/document/download/${data}`);\n        toast.success(\"file Download successful\");\n      } else if (result && result?.response?.status === 404) {\n        toast.error(\"file Not Found\");\n      }\n    }\n  };\n\n  const fetchData = async (i) => {\n    setIsLoding(true);\n    let response = await getApi(\"api/contact/view/\", param?.id);\n    setData(response?.data?.contact);\n    setAllData(response?.data);\n    setIsLoding(false);\n    setSelectedTab(i);\n  };\n\n  const handleDeleteContact = async (id) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteApi(\"api/contact/delete/\", id);\n      if (response?.status === 200) {\n        setDelete(false);\n        setAction((pre) => !pre);\n        navigate(\"/contacts\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [action]);\n\n  useEffect(() => {\n    fetchCustomDataFields();\n  }, []);\n\n  function toCamelCase(text) {\n    return text?.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n  }\n\n  useEffect(() => {\n    dispatch(fetchContactCustomFiled());\n  }, []);\n\n  const firstValue = Object?.values(param)[0];\n  const splitValue = firstValue?.split(\"/\");\n\n  return (\n    <>\n      {isLoding ? (\n        <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n          <Spinner />\n        </Flex>\n      ) : (\n        <>\n          <Heading size=\"lg\" mt={0} m={3}>\n            {data?.fullName || \"\"}\n          </Heading>\n          <Tabs onChange={handleTabChange} index={selectedTab}>\n            <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={1}>\n              <GridItem colSpan={{ base: 12, md: 6 }}>\n                <TabList\n                  sx={{\n                    width: \"100%\",\n                    overflowX: \"auto\",\n                    border: \"none\",\n                    \"& button:focus\": { boxShadow: \"none\" },\n                    \"& button\": {\n                      margin: { sm: \"0 3px\", md: \"0 5px\" },\n                      padding: { sm: \"5px\", md: \"8px\" },\n                      fontSize: { sm: \"12px\", md: \"16px\" },\n                      border: \"2px solid #8080803d\",\n                      borderTopLeftRadius: \"10px\",\n                      borderTopRightRadius: \"10px\",\n                      borderBottom: 0,\n                    },\n                    '& button[aria-selected=\"true\"]': {\n                      border: \"2px solid brand.200\",\n                      borderBottom: 0,\n                      zIndex: \"0\",\n                    },\n                  }}\n                >\n                  <Tab>Information</Tab>\n                  {(emailAccess?.view ||\n                    callAccess?.view ||\n                    taskAccess?.view ||\n                    meetingAccess?.view) && <Tab> Communication</Tab>}\n                  <Tab>Document</Tab>\n                </TabList>\n              </GridItem>\n              <GridItem\n                colSpan={{ base: 12, md: 6 }}\n                mt={{ sm: \"3px\", md: \"5px\" }}\n              >\n                <Flex justifyContent={\"right\"}>\n                  <Menu>\n                    {(user?.role === \"superAdmin\" ||\n                      permission?.create ||\n                      permission?.update ||\n                      permission?.delete) && (\n                      <MenuButton\n                        size=\"sm\"\n                        variant=\"outline\"\n                        colorScheme=\"blackAlpha\"\n                        va\n                        mr={2.5}\n                        as={Button}\n                        rightIcon={<ChevronDownIcon />}\n                      >\n                        Actions\n                      </MenuButton>\n                    )}\n                    <MenuDivider />\n                    <MenuList minWidth={2} zIndex={\"99\"}>\n                      {(user?.role === \"superAdmin\" || permission?.create) && (\n                        <MenuItem\n                          alignItems={\"start\"}\n                          onClick={() => onOpen()}\n                          color={\"blue\"}\n                          icon={<AddIcon />}\n                        >\n                          Add\n                        </MenuItem>\n                      )}\n                      {(user?.role === \"superAdmin\" || permission?.update) && (\n                        <MenuItem\n                          alignItems={\"start\"}\n                          onClick={() => setEdit(true)}\n                          icon={<EditIcon />}\n                        >\n                          Edit\n                        </MenuItem>\n                      )}\n                      <MenuItem\n                        onClick={generatePDF}\n                        alignItems={\"start\"}\n                        icon={<FaFilePdf />}\n                        display={\"flex\"}\n                        style={{ alignItems: \"center\" }}\n                      >\n                        Print as PDF\n                      </MenuItem>\n\n                      {(user?.role === \"superAdmin\" || permission?.delete) && (\n                        <>\n                          <MenuDivider />\n                          <MenuItem\n                            alignItems={\"start\"}\n                            onClick={() => setDelete(true)}\n                            color={\"red\"}\n                            icon={<DeleteIcon />}\n                          >\n                            Delete\n                          </MenuItem>\n                        </>\n                      )}\n                    </MenuList>\n                  </Menu>\n                  <Link to=\"/contacts\">\n                    <Button\n                      leftIcon={<IoIosArrowBack />}\n                      size=\"sm\"\n                      variant=\"brand\"\n                    >\n                      Back\n                    </Button>\n                  </Link>\n                </Flex>\n              </GridItem>\n            </Grid>\n            <TabPanels>\n              <TabPanel pt={4} p={0}>\n                <CustomView\n                  data={contactData?.[0]}\n                  fieldData={data}\n                  toCamelCase={toCamelCase}\n                  moduleId={contactData?.[0]?._id}\n                  fetchData={fetchData}\n                  id=\"reports\"\n                />\n                <GridItem colSpan={{ base: 12 }} mt={4}>\n                  <Card>\n                    <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\n                      <GridItem colSpan={2}>\n                        <Box>\n                          <Flex\n                            alignItems={\"center\"}\n                            mb={2}\n                            justifyContent={\"space-between\"}\n                          >\n                            <Heading size=\"md\">\n                              Property of Interest (\n                              {\n                                allData?.interestProperty?.interestProperty\n                                  ?.length\n                              }\n                              )\n                            </Heading>\n                            <Button\n                              onClick={() => setPropertyModel(true)}\n                              leftIcon={<LuBuilding2 />}\n                              size=\"sm\"\n                              colorScheme=\"gray\"\n                              bg={buttonbg}\n                            >\n                              Select Interested Property{\" \"}\n                            </Button>\n                          </Flex>\n                        </Box>\n\n                        <Grid templateColumns={\"repeat(2, 1fr)\"} gap={4}>\n                          <GridItem colSpan={{ base: 2 }}>\n                            {/* <PropertyTable fetchData={fetchData} columnsData={PropertyColumn} tableData={allData?.interestProperty?.interestProperty?.length > 0 ? allData?.interestProperty?.interestProperty : []} title={'Interested Property'} /> */}\n                            <CommonCheckTable\n                              isLoding={isLoding}\n                              columnData={columns ?? []}\n                              dataColumn={columns ?? []}\n                              allData={\n                                allData?.interestProperty?.interestProperty ||\n                                []\n                              }\n                              tableData={\n                                allData?.interestProperty?.interestProperty ||\n                                []\n                              }\n                              tableCustomFields={\n                                propertyData?.[0]?.fields?.filter(\n                                  (field) => field?.isTableField === true,\n                                ) || []\n                              }\n                              AdvanceSearch={() => \"\"}\n                              ManageGrid={false}\n                              deleteMany={false}\n                              selectType=\"multiple\"\n                              customSearch={false}\n                              checkBox={false}\n                            />\n                          </GridItem>\n                        </Grid>\n                      </GridItem>\n                    </Grid>\n                  </Card>\n                </GridItem>\n              </TabPanel>\n              <TabPanel pt={4} p={0}>\n                <GridItem colSpan={{ base: 12 }}>\n                  <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\n                    <Grid templateColumns={\"repeat(12, 1fr)\"} gap={4}>\n                      {emailAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Email\"}\n                              isLoding={isLoding}\n                              columnData={columnsDataColumns ?? []}\n                              // dataColumn={columnsDataColumns ?? []}\n                              allData={\n                                showEmail\n                                  ? allData?.EmailHistory\n                                  : allData?.EmailHistory?.length > 0\n                                    ? [allData?.EmailHistory[0]]\n                                    : []\n                              }\n                              tableData={\n                                showEmail\n                                  ? allData?.EmailHistory\n                                  : allData?.EmailHistory?.length > 0\n                                    ? [allData?.EmailHistory[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              dataLength={allData?.EmailHistory?.length}\n                              tableCustomFields={[]}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setAddEmailHistory(true)}\n                              access={emailAccess}\n                            />\n                            {allData?.EmailHistory?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  variant=\"outline\"\n                                  size=\"sm\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showEmail\n                                      ? setShowEmail(false)\n                                      : setShowEmail(true)\n                                  }\n                                >\n                                  {showEmail ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                      {callAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Call\"}\n                              isLoding={isLoding}\n                              columnData={callColumns ?? []}\n                              // dataColumn={callColumns ?? []}\n                              allData={\n                                showCall\n                                  ? allData?.phoneCallHistory\n                                  : allData?.phoneCallHistory?.length > 0\n                                    ? [allData?.phoneCallHistory[0]]\n                                    : []\n                              }\n                              tableData={\n                                showCall\n                                  ? allData?.phoneCallHistory\n                                  : allData?.phoneCallHistory?.length > 0\n                                    ? [allData?.phoneCallHistory[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              tableCustomFields={[]}\n                              dataLength={allData?.phoneCallHistory?.length}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setAddPhoneCall(true)}\n                              access={callAccess}\n                            />\n                            {allData?.phoneCallHistory?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  variant=\"outline\"\n                                  size=\"sm\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showCall\n                                      ? setShowCall(false)\n                                      : setShowCall(true)\n                                  }\n                                >\n                                  {showCall ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                      {taskAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Task\"}\n                              isLoding={isLoding}\n                              columnData={taskColumns ?? []}\n                              // dataColumn={taskColumns ?? []}\n                              allData={\n                                showTasks\n                                  ? allData?.task\n                                  : allData?.task?.length > 0\n                                    ? [allData?.task[0]]\n                                    : []\n                              }\n                              tableData={\n                                showTasks\n                                  ? allData?.task\n                                  : allData?.task?.length > 0\n                                    ? [allData?.task[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              dataLength={allData?.task?.length}\n                              tableCustomFields={[]}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setTaskModel(true)}\n                              access={taskAccess}\n                            />\n                            {allData?.task?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  variant=\"outline\"\n                                  size=\"sm\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showTasks\n                                      ? setShowTasks(false)\n                                      : setShowTasks(true)\n                                  }\n                                >\n                                  {showTasks ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                      {meetingAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Meeting\"}\n                              isLoding={isLoding}\n                              columnData={MeetingColumns ?? []}\n                              // dataColumn={MeetingColumns ?? []}\n                              dataLength={allData?.meetingHistory?.length}\n                              allData={\n                                showMeetings\n                                  ? allData?.meetingHistory\n                                  : allData?.meetingHistory?.length > 0\n                                    ? [allData?.meetingHistory[0]]\n                                    : []\n                              }\n                              tableData={\n                                showMeetings\n                                  ? allData?.meetingHistory\n                                  : allData?.meetingHistory?.length > 0\n                                    ? [allData?.meetingHistory[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              tableCustomFields={[]}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setMeeting(true)}\n                              access={meetingAccess}\n                            />\n                            {allData?.meetingHistory?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showMeetings\n                                      ? setShowMeetings(false)\n                                      : setShowMeetings(true)\n                                  }\n                                >\n                                  {showMeetings ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                      {quotesAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Quotes\"}\n                              isLoding={isLoding}\n                              columnData={quotesColumns ?? []}\n                              // dataColumn={quotesColumns ?? []}\n                              dataLength={allData?.quotes?.length}\n                              allData={\n                                showQuotes\n                                  ? allData?.quotes\n                                  : allData?.quotes?.length > 0\n                                    ? [allData?.quotes[0]]\n                                    : []\n                              }\n                              tableData={\n                                showQuotes\n                                  ? allData?.quotes\n                                  : allData?.quotes?.length > 0\n                                    ? [allData?.quotes[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              tableCustomFields={[]}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setAddQuotes(true)}\n                              access={quotesAccess}\n                            />\n                            {allData?.quotes?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showQuotes\n                                      ? setShowQuotes(false)\n                                      : setShowQuotes(true)\n                                  }\n                                >\n                                  {showQuotes ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                      {invoicesAccess?.view && (\n                        <GridItem colSpan={{ base: 12, md: 6 }}>\n                          <Card overflow={\"scroll\"}>\n                            <CommonCheckTable\n                              title={\"Invoices\"}\n                              isLoding={isLoding}\n                              columnData={invoicesColumns ?? []}\n                              // dataColumn={invoicesColumns ?? []}\n                              dataLength={allData?.invoice?.length}\n                              allData={\n                                showInvoices\n                                  ? allData?.invoice\n                                  : allData?.invoice?.length > 0\n                                    ? [allData?.invoice[0]]\n                                    : []\n                              }\n                              tableData={\n                                showInvoices\n                                  ? allData?.invoice\n                                  : allData?.invoice?.length > 0\n                                    ? [allData?.invoice[0]]\n                                    : []\n                              }\n                              AdvanceSearch={false}\n                              tableCustomFields={[]}\n                              checkBox={false}\n                              deleteMany={true}\n                              ManageGrid={false}\n                              onOpen={() => setAddInvoice(true)}\n                              access={invoicesAccess}\n                            />\n                            {allData?.invoice?.length > 1 && (\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"end\",\n                                }}\n                              >\n                                <Button\n                                  colorScheme=\"brand\"\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  display=\"flex\"\n                                  justifyContant=\"end\"\n                                  onClick={() =>\n                                    showInvoices\n                                      ? setShowInvoices(false)\n                                      : setShowInvoices(true)\n                                  }\n                                >\n                                  {showInvoices ? \"Show less\" : \"Show more\"}\n                                </Button>\n                              </div>\n                            )}\n                          </Card>\n                        </GridItem>\n                      )}\n                    </Grid>\n                  </Grid>\n                </GridItem>\n              </TabPanel>\n              <TabPanel pt={4} p={0}>\n                <GridItem colSpan={{ base: 12 }}>\n                  <Card minH={\"40vh\"}>\n                    <Flex\n                      alignItems={\"center\"}\n                      justifyContent={\"space-between\"}\n                      mb=\"2\"\n                    >\n                      <Heading size=\"md\" mb={3}>\n                        Documents\n                      </Heading>\n                      <Button\n                        leftIcon={<AddIcon />}\n                        size=\"sm\"\n                        variant=\"brand\"\n                        onClick={() => setAddDocument(true)}\n                      >\n                        Add Document\n                      </Button>\n                    </Flex>\n                    <HSeparator />\n                    <VStack mt={4} alignItems=\"flex-start\">\n                      {allData?.Document?.length > 0 ? (\n                        allData?.Document?.map((item) => (\n                          <FolderTreeView name={item?.folderName} item={item}>\n                            {item?.files?.map((file) => (\n                              <FolderTreeView\n                                download={download}\n                                data={file}\n                                name={file?.fileName}\n                                isFile\n                                from=\"contact\"\n                              />\n                            ))}\n                          </FolderTreeView>\n                        ))\n                      ) : (\n                        <Text\n                          textAlign={\"center\"}\n                          width=\"100%\"\n                          color={textColor}\n                          fontSize=\"sm\"\n                          fontWeight=\"700\"\n                        >\n                          <DataNotFound />\n                        </Text>\n                      )}\n                    </VStack>\n                  </Card>\n                </GridItem>\n              </TabPanel>\n\n              <TabPanel pt={4} p={0}>\n                <GridItem colSpan={{ base: 12 }}>\n                  <Card>\n                    <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\n                      <GridItem colSpan={2}>\n                        <Box>\n                          <Heading size=\"md\" mb={3}>\n                            Social Media Profiles\n                          </Heading>\n                          <HSeparator />\n                        </Box>\n                      </GridItem>\n                      {data?.linkedInProfile ||\n                      data?.facebookProfile ||\n                      data?.twitterHandle ||\n                      data?.otherProfiles ? (\n                        <Grid\n                          templateColumns={\"repeat(12, 1fr)\"}\n                          gap={4}\n                          my={3}\n                          flexWrap={\"wrap\"}\n                          display={\"flex\"}\n                          justifyContent={\"center\"}\n                        >\n                          {data?.linkedInProfile && (\n                            <GridItem\n                              textAlign={\"center\"}\n                              colSpan={{ base: 2, md: 1 }}\n                            >\n                              <a target=\"_blank\" href={data?.linkedInProfile}>\n                                <IconButton\n                                  colorScheme=\"brand\"\n                                  aria-label=\"Call Fred\"\n                                  borderRadius=\"10px\"\n                                  size=\"md\"\n                                  icon={<BiLogoLinkedin />}\n                                />\n                              </a>\n                              <Text\n                                fontSize=\"sm\"\n                                mt={2}\n                                fontWeight=\"bold\"\n                                color={\"blackAlpha.900\"}\n                              >\n                                {\" \"}\n                                LinkedIn Profile{\" \"}\n                              </Text>\n                            </GridItem>\n                          )}\n                          {data?.facebookProfile && (\n                            <GridItem\n                              textAlign={\"center\"}\n                              colSpan={{ base: 2, md: 1 }}\n                            >\n                              <a\n                                target=\"_blank\"\n                                href={`https://www.facebook.com/${data?.facebookProfile}`}\n                              >\n                                <IconButton\n                                  colorScheme=\"brand\"\n                                  aria-label=\"Call Fred\"\n                                  borderRadius=\"10px\"\n                                  size=\"md\"\n                                  icon={<FaFacebook />}\n                                />\n                              </a>\n                              <Text\n                                fontSize=\"sm\"\n                                mt={2}\n                                fontWeight=\"bold\"\n                                color={\"blackAlpha.900\"}\n                              >\n                                {\" \"}\n                                Facebook Profile{\" \"}\n                              </Text>\n                            </GridItem>\n                          )}\n                          {data?.linkedInProfile && (\n                            <GridItem\n                              textAlign={\"center\"}\n                              colSpan={{ base: 2, md: 1 }}\n                            >\n                              <a\n                                target=\"_blank\"\n                                href={`https://www.facebook.com/${data?.facebookProfile}`}\n                              >\n                                <IconButton\n                                  colorScheme=\"brand\"\n                                  aria-label=\"Call Fred\"\n                                  borderRadius=\"10px\"\n                                  size=\"md\"\n                                  icon={<BsTwitter />}\n                                />\n                              </a>\n                              <Text\n                                fontSize=\"sm\"\n                                mt={2}\n                                px={2}\n                                fontWeight=\"bold\"\n                                color={\"blackAlpha.900\"}\n                              >\n                                Twitter Handle{\" \"}\n                              </Text>\n                            </GridItem>\n                          )}\n\n                          {data?.linkedInProfile && (\n                            <GridItem\n                              textAlign={\"center\"}\n                              colSpan={{ base: 2, md: 1 }}\n                            >\n                              <a target=\"_blank\" href={data?.otherProfiles}>\n                                <IconButton\n                                  colorScheme=\"brand\"\n                                  aria-label=\"Call Fred\"\n                                  borderRadius=\"10px\"\n                                  size=\"md\"\n                                  icon={<BiLink />}\n                                />\n                              </a>\n                              <Text\n                                fontSize=\"sm\"\n                                mt={2}\n                                fontWeight=\"bold\"\n                                color={\"blackAlpha.900\"}\n                              >\n                                {\" \"}\n                                Other Profiles{\" \"}\n                              </Text>\n                            </GridItem>\n                          )}\n                        </Grid>\n                      ) : (\n                        <Grid templateColumns={\"repeat(2, 1fr)\"} gap={4}>\n                          <GridItem colSpan={{ base: 2 }} textAlign={\"center\"}>\n                            <Text\n                              textAlign={\"center\"}\n                              width=\"100%\"\n                              color={textColor}\n                              fontSize=\"sm\"\n                              fontWeight=\"700\"\n                            >\n                              {\" \"}\n                              <DataNotFound />\n                            </Text>\n                          </GridItem>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </Card>\n                </GridItem>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n\n          {(user?.role === \"superAdmin\" ||\n            permission?.update ||\n            permission?.delete) && (\n            <Card mt={3}>\n              <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n                <GridItem colStart={6}>\n                  <Flex justifyContent={\"right\"}>\n                    {permission?.update && (\n                      <Button\n                        size=\"sm\"\n                        onClick={() => setEdit(true)}\n                        leftIcon={<EditIcon />}\n                        mr={2.5}\n                        variant=\"outline\"\n                        colorScheme=\"green\"\n                      >\n                        Edit\n                      </Button>\n                    )}\n                    {permission?.delete && (\n                      <Button\n                        size=\"sm\"\n                        style={{ background: \"red.800\" }}\n                        onClick={() => setDelete(true)}\n                        leftIcon={<DeleteIcon />}\n                        colorScheme=\"red\"\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </Flex>\n                </GridItem>\n              </Grid>\n            </Card>\n          )}\n        </>\n      )}\n      {isOpen && (\n        <Add\n          isOpen={isOpen}\n          size={size}\n          onClose={onClose}\n          contactData={contactData?.[0]}\n        />\n      )}\n      <Edit\n        isOpen={edit}\n        contactData={contactData?.[0]}\n        size={size}\n        onClose={setEdit}\n        setAction={setAction}\n        moduleId={contactData?.[0]?._id}\n        data={data}\n      />\n      <CommonDeleteModel\n        isOpen={deleteModel}\n        onClose={() => setDelete(false)}\n        type=\"Contact\"\n        handleDeleteData={handleDeleteContact}\n        ids={param?.id}\n      />\n      <AddEmailHistory\n        lead=\"false\"\n        contactEmail={allData?.contact?.email}\n        fetchData={fetchData}\n        isOpen={addEmailHistory}\n        onClose={setAddEmailHistory}\n        id={param?.id}\n      />\n      <AddDocumentModal\n        addDocument={addDocument}\n        setAddDocument={setAddDocument}\n        linkId={param?.id}\n        from=\"contact\"\n        setAction={setAction}\n        fetchData={fetchData}\n      />\n      <AddMeeting\n        fetchData={fetchData}\n        leadContect={splitValue[0]}\n        isOpen={addMeeting}\n        onClose={setMeeting}\n        from=\"contact\"\n        id={param?.id}\n        setAction={setAction}\n        view={true}\n      />\n      <AddEdit\n        isOpen={taskModel}\n        fetchData={fetchData}\n        leadContect={splitValue[0]}\n        onClose={setTaskModel}\n        id={param?.id}\n        userAction={\"add\"}\n        view={true}\n      />\n      <AddPhoneCall\n        viewData={allData}\n        fetchData={fetchData}\n        setAction={setAction}\n        isOpen={addPhoneCall}\n        onClose={setAddPhoneCall}\n        data={data?.contact}\n        id={param?.id}\n        cData={data}\n      />\n      <AddEditQuotes\n        isOpen={addQuotes}\n        size={\"lg\"}\n        onClose={() => setAddQuotes(false)}\n        setAction={setAction}\n        type={\"add\"}\n        contactId={param?.id}\n      />\n      <AddEditInvoice\n        isOpen={addInvoice}\n        size={\"lg\"}\n        onClose={() => setAddInvoice(false)}\n        setAction={setAction}\n        type={\"add\"}\n        contactId={param?.id}\n      />\n      <PropertyModel\n        fetchData={fetchData}\n        isOpen={propertyModel}\n        onClose={setPropertyModel}\n        id={param?.id}\n        interestProperty={data?.interestProperty}\n      />\n    </>\n  );\n};\n\nexport default View;\n","import * as yup from \"yup\";\n\nexport const quoteSchema = yup.object({\n  title: yup.string().required(\"Title Is required\"),\n  quoteStage: yup.string().required(\"Quote Stage Is required\"),\n  validUntil: yup.string().required(\"Valid Until Is required\"),\n  shippingPostalcode: yup\n    .string()\n    .matches(/^\\d{6}$/, \"Shipping Postal Code must be exactly 6 digits\")\n    .notRequired(),\n  billingPostalcode: yup\n    .string()\n    .matches(/^\\d{6}$/, \"Billing Postal Code must be exactly 6 digits\")\n    .notRequired(),\n});\n"],"names":["props","_ref","_props$contactData","_props$contactData2","isLoding","setIsLoding","useState","initialValues","Object","fromEntries","contactData","fields","map","field","name","createBy","JSON","parse","localStorage","getItem","_id","formik","useFormik","validationSchema","yup","shape","generateValidationSchema","onSubmit","values","_ref2","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","_props$contactData3","response","postApi","moduleId","status","onClose","setAction","pre","e","console","log","_jsx","children","_jsxs","Drawer","isOpen","size","DrawerOverlay","DrawerContent","DrawerHeader","alignItems","justifyContent","display","IconButton","onClick","icon","CloseIcon","DrawerBody","CustomForm","moduleData","DrawerFooter","Button","sx","textTransform","variant","disabled","type","Spinner","colorScheme","marginLeft","handleCancel","_JSON$parse","_yup$object","data","initialFieldValues","setInitialValues","param","useParams","enableReinitialize","EditData","putApi","selectedId","id","handleClose","setSelectedId","useEffect","prev","getApi","_response","_response$data","contact","error","fetchData","fullName","Flex","width","_propertyData$","_propertyData$$fields","interestProperty","selectedValues","setSelectedValues","propertyData","setPropertyData","columns","setColumns","dispatch","useDispatch","useSelector","state","_state$propertyData","uniqueValues","Set","fetchPropertyData","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","_result$payload2$data3","_result$payload2$data4","result","fetchPropertyCustomFiled","payload","tempTableColumns","Header","accessor","isSortable","filter","isTableField","label","fetchCustomDataFields","item","prevSelectedValues","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","CommonCheckTable","title","columnData","allData","tableData","tableCustomFields","AdvanceSearch","ManageGrid","deleteMany","selectType","customSearch","ModalFooter","_localStorage","_JSON$parse2","_dayjs","_values$items4","_values$items5","contactId","userModel","setUserModel","opprtunityModel","setOpprtunityModel","userData","setUserData","accountModel","setAccountModel","contactModel","setContactModel","quotesDetails","setQuotesDetails","user","accountAccess","contactAccess","opportunityAccess","HasAccess","opportunityList","_state$opportunityDat","_state$opportunityDat2","opportunityData","accountList","_state$accountData","_state$accountData$da","accountData","contactList","_state$contactData","oppotunity","quoteStage","invoiceStatus","validUntil","assignedTo","paymentTerms","approvalStatus","nonPrimaryEmail","approvalIssues","terms","description","account","billingStreet","shippingStreet","billingCity","shippingCity","billingState","shippingState","billingPostalCode","shippingPostalCode","billingCountry","shippingCountry","isCheck","currency","total","discount","subtotal","shipping","shippingTax","ptax","tax","grandTotal","discountType","items","modifiedBy","quoteSchema","toast","success","addData","editData","modifiedDate","Date","handleCheck","_e$target","_e$target2","target","checked","calculateAmounts","totalAmount","reduce","sum","amount","totalDiscount","netAmount","Number","handleChangeCalculation","index","value","_values$items3","newItems","idx","updatedItem","includes","discountValue","rate","qty","calculateValues","useCallback","toFixed","_result$data2","fetchQuotesDetails","role","_result$data","length","undefined","fetchOpportunityData","fetchAccountData","UserModel","fieldName","OpprtunityModel","AccountModel","ContactModel","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","as","mt","md","FormLabel","ms","fontSize","fontWeight","mb","Text","color","Input","onChange","placeholder","borderColor","view","Select","opportunityName","ml","LiaMousePointerSolid","dayjs","format","firstName","lastName","Textarea","resize","Checkbox","isChecked","visibility","onBlur","selected","Box","Table","backgroundColor","Thead","Tr","Th","Tbody","Td","className","_values$items2","_","handleRemoveItem","style","FormControl","productName","_e$target3","_e$target4","_e$target5","_e$target6","_e$target7","readOnly","AddIcon","handleAddItem","_values$items","View","_contactData$","_allData$interestProp","_allData$interestProp2","_allData$interestProp3","_allData$interestProp4","_allData$EmailHistory","_allData$EmailHistory2","_allData$EmailHistory3","_allData$EmailHistory4","_allData$phoneCallHis","_allData$phoneCallHis2","_allData$phoneCallHis3","_allData$phoneCallHis4","_allData$task","_allData$task2","_allData$task3","_allData$task4","_allData$meetingHisto","_allData$meetingHisto2","_allData$meetingHisto3","_allData$meetingHisto4","_allData$quotes","_allData$quotes2","_allData$quotes3","_allData$quotes4","_allData$invoice","_allData$invoice2","_allData$invoice3","_allData$invoice4","_allData$Document","_allData$Document2","_contactData$2","_allData$contact","textColor","useColorModeValue","buttonbg","setData","setAllData","onOpen","useDisclosure","edit","setEdit","deleteModel","setDelete","propertyModel","setPropertyModel","action","taskModel","setTaskModel","addEmailHistory","setAddEmailHistory","addPhoneCall","setAddPhoneCall","addQuotes","setAddQuotes","addInvoice","setAddInvoice","addMeeting","setMeeting","showEmail","setShowEmail","showCall","setShowCall","showTasks","setShowTasks","showMeetings","setShowMeetings","showQuotes","setShowQuotes","showInvoices","setShowInvoices","addDocument","setAddDocument","selectedTab","setSelectedTab","navigate","useNavigate","_state$contactCustomF","_state$contactCustomF2","contactCustomFiled","permission","callAccess","emailAccess","taskAccess","meetingAccess","quotesAccess","invoicesAccess","columnsDataColumns","cell","_cell$row","_cell$row$original","Link","to","row","original","me","textDecoration","_moment","moment","fromNow","_moment2","_cell$row2","_cell$row2$values","timestamp","callColumns","_cell$row3","_cell$row3$original","_moment3","_moment4","_cell$row4","_cell$row4$values","MeetingColumns","_cell$row5","_cell$row5$original","_moment5","quotesColumns","_cell$row6","cursor","_cell$row7","_cell$row7$original","_cell$row8","_cell$row8$original","contactName","_cell$row11","_cell$row11$original","_cell$row12","_cell$row12$original","_cell$row13","_cell$row13$original","_cell$row14","_cell$row14$original","_cell$row9","_cell$row9$original","_cell$row10","_cell$row10$original","accountName","_cell$row15","_cell$row15$original","_cell$row16","_cell$row16$original","invoicesColumns","_cell$row17","_cell$row17$original","_cell$row18","_cell$row18$original","_cell$row19","_cell$row19$original","_cell$row22","_cell$row22$original","_cell$row23","_cell$row23$original","_cell$row24","_cell$row24$original","_cell$row25","_cell$row25$original","_cell$row20","_cell$row20$original","_cell$row21","_cell$row21$original","_cell$row26","_cell$row26$original","_cell$row27","_cell$row27$original","taskColumns","_cell$row28","_cell$row28$original","download","_result$response","_window","window","open","constant","baseUrl","i","fetchContactCustomFiled","firstValue","splitValue","split","_Fragment","m","Tabs","TabList","overflowX","border","boxShadow","margin","sm","padding","borderTopLeftRadius","borderTopRightRadius","borderBottom","zIndex","Tab","Menu","create","update","delete","MenuButton","va","mr","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","EditIcon","generatePDF","element","document","getElementById","height","html2pdf","from","set","filename","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","DeleteIcon","leftIcon","IoIosArrowBack","TabPanels","TabPanel","pt","p","CustomView","fieldData","toCamelCase","text","replace","Card","LuBuilding2","bg","dataColumn","checkBox","overflow","EmailHistory","dataLength","access","justifyContant","phoneCallHistory","task","meetingHistory","quotes","invoice","minH","HSeparator","VStack","Document","_item$files","FolderTreeView","folderName","files","file","fileName","isFile","textAlign","DataNotFound","linkedInProfile","facebookProfile","twitterHandle","otherProfiles","my","flexWrap","href","borderRadius","BiLogoLinkedin","FaFacebook","BsTwitter","px","BiLink","colStart","background","Add","Edit","CommonDeleteModel","handleDeleteData","deleteApi","ids","AddEmailHistory","lead","contactEmail","email","AddDocumentModal","linkId","AddMeeting","leadContect","AddEdit","userAction","AddPhoneCall","viewData","cData","AddEditQuotes","AddEditInvoice","PropertyModel","required","shippingPostalcode","matches","notRequired","billingPostalcode"],"sourceRoot":""}