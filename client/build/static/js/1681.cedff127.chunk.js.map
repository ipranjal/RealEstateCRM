{"version":3,"file":"static/js/1681.cedff127.chunk.js","mappings":"6ZA8CA,MA4kBA,EA5kBaA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjB,MAAMC,GAASC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACX,GAAEC,GAAOJ,EACTK,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACtCC,EAAiBC,IAAkBC,EAAAA,EAAAA,aACpC,OAAEC,EAAM,OAAEC,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,OAC7BC,EAAMC,IAAWN,EAAAA,EAAAA,WAAS,IAC1BO,EAAaC,IAAaR,EAAAA,EAAAA,WAAS,IACnCS,GAAUC,KAAeV,EAAAA,EAAAA,WAAS,IAClCW,GAAQC,KAAaZ,EAAAA,EAAAA,WAAS,IAC9Ba,GAAeC,KAAoBd,EAAAA,EAAAA,UAAS,OAC5Ce,GAAaC,KAAkBhB,EAAAA,EAAAA,UAAS,IAExCiB,KAAcC,EAAAA,EAAAA,GAAU,CAAC,kBAahCC,EAAAA,EAAAA,YAAU,KAXYC,WACpB,GAAI5B,EAAI,CACN,MAAM6B,QAAeC,EAAAA,EAAAA,IAAO,yBAA0B9B,GACtDO,EAAqB,OAANsB,QAAM,IAANA,OAAM,EAANA,EAAQE,KACzB,GAQAC,EAAe,GACd,CAAChC,EAAIa,EAAMM,KAEd,MAAMc,GAAoBA,CAACC,EAAWC,KACpCC,GAAOC,cAAcH,EAAWC,GAChCb,GAAiBY,EAAU,EAmDvBI,GAAgB,CACpBC,aAA4B,OAAfjC,QAAe,IAAfA,OAAe,EAAfA,EAAiBiC,cAAe,GAC7CC,eAA8B,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiBkC,gBAAiB,GACjDC,MAAqB,OAAfnC,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,OAAQ,GAC/BC,QAAuB,OAAfpC,QAAe,IAAfA,OAAe,EAAfA,EAAiBoC,SAAU,GACnCC,WAA0B,OAAfrC,QAAe,IAAfA,OAAe,EAAfA,EAAiBqC,YAAa,IAErCC,GAAmBC,EAAAA,OAAW,CAClCN,YAAaM,EAAAA,SAAaC,SAAS,2BACnCN,cAAeK,EAAAA,SAAaC,SAAS,6BACrCL,KAAMI,EAAAA,SAAaC,SAAS,oBAC5BJ,OAAQG,EAAAA,SAAaC,SAAS,sBAC9BH,UAAWE,EAAAA,SAAaC,SAAS,2BAE7BV,IAASW,EAAAA,EAAAA,IAAU,CACvBT,cAAeA,GACfM,oBACAI,oBAAoB,EACpBC,SAAUrB,UACRN,GAAiB,MACjB4B,IAAS,KAIP,OAAEC,IAAWf,GAEbc,GAAUtB,UACd,IACEV,IAAY,GACZ,IAAIkC,QAAiBC,EAAAA,EAAAA,IACnB,yBAA+B,OAANzD,QAAM,IAANA,OAAM,EAANA,EAAQI,KACjCmD,IAMM,IAADG,EAAAC,EAJP,GAAIH,GAAiC,OAAb,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUI,QACxBlC,GAAiB,MACjBX,IACAS,IAAWqC,IAASA,SAEpBC,EAAAA,GAAMC,MAAc,OAARP,QAAQ,IAARA,GAAkB,QAAVE,EAARF,EAAUA,gBAAQ,IAAAE,GAAM,QAANC,EAAlBD,EAAoBvB,YAAI,IAAAwB,OAAhB,EAARA,EAA0BK,QAE1C,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAAC,QACC3C,IAAY,EACd,GAEI8C,GAAcH,IAClBzB,GAAO6B,cAAc,EAGvB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGnD,IACCoD,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUC,MAAM,OAAML,UAChEC,EAAAA,EAAAA,KAACK,EAAAA,EAAO,OAGVR,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACM,EAAAA,QAAO,CAACC,KAAK,KAAKC,GAAI,EAAGC,EAAG,EAAEV,UACb,OAAf9D,QAAe,IAAfA,OAAe,EAAfA,EAAiBiC,cAAe,MAEnC8B,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACHC,SA9GeC,IACvBzD,GAAeyD,EAAM,EA8GbA,MAAO1D,GACP2D,MAAO,CACLC,WAAY,UACZC,aAAc,OACdC,QAAS,QACTjB,UAEFF,EAAAA,EAAAA,MAACoB,EAAAA,KAAI,CACHC,gBAAiB,iBACjBC,GAAI,EACJC,IAAK,EACLzF,GAAG,UAASoE,SAAA,EAEZC,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAIxB,UAC7BC,EAAAA,EAAAA,KAACwB,EAAAA,GAAO,CACNC,GAAI,CACFC,OAAQ,OACR,iBAAkB,CAAEC,UAAW,QAC/B,WAAY,CACVC,OAAQ,CAAEC,GAAI,QAASC,GAAI,SAC3Bd,QAAS,CAAEa,GAAI,MAAOC,GAAI,OAC1BJ,OAAQ,sBACRK,oBAAqB,OACrBC,qBAAsB,OACtBC,aAAc,EACdC,SAAU,CAAEL,GAAI,OAAQC,GAAI,SAE9B,iCAAkC,CAChCJ,OAAQ,sBACRO,aAAc,EACdE,OAAQ,WAKhBnC,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CACPC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GACxBtB,GAAI,CAAEqB,GAAI,MAAOC,GAAI,OAAQ/B,UAE7BC,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,EAAEvB,UACnBF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAACC,QAAS,OAAQnC,eAAgB,gBAAgBH,SAAA,EACpDC,EAAAA,EAAAA,KAACM,EAAAA,QAAO,CAACC,KAAK,KAAKY,GAAI,EAAEpB,SAAC,kBAG1BF,EAAAA,EAAAA,MAACI,EAAAA,KAAI,CAACtE,GAAG,WAAUoE,SAAA,EACjBF,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAAAvC,SAAA,EACc,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,QACI,OAAVnF,SAAU,IAAVA,QAAU,EAAVA,GAAYoF,UACF,OAAVpF,SAAU,IAAVA,QAAU,EAAVA,GAAYqF,UACF,OAAVrF,SAAU,IAAVA,QAAU,EAAVA,GAAYsF,WACZ1C,EAAAA,EAAAA,KAAC2C,EAAAA,GAAU,CACTpC,KAAK,KACLqC,QAAQ,UACRC,YAAY,aACZC,GAAI,IACJC,GAAIC,EAAAA,OACJC,WAAWjD,EAAAA,EAAAA,KAACkD,EAAAA,gBAAe,IAAInD,SAChC,aAIHC,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,KACZtD,EAAAA,EAAAA,MAACuD,EAAAA,GAAQ,CAACC,SAAU,EAAEtD,SAAA,EACH,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,QACI,OAAVnF,SAAU,IAAVA,QAAU,EAAVA,GAAYoF,WACZ3C,EAAAA,EAAAA,MAACyD,EAAAA,GAAQ,CACPC,MAAO,OACPC,QAASA,KA/LrCnH,GAgM2C,EAEf8D,WAAY,QACZsD,MAAMzD,EAAAA,EAAAA,KAAC0D,EAAAA,QAAO,IAAI3D,SAAA,CAEjB,IAAI,MACD,QAGS,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,QACI,OAAVnF,SAAU,IAAVA,QAAU,EAAVA,GAAYqF,WACZzC,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CACPE,QAASA,KACP/G,GAAQ,EAAK,EAEf0D,WAAY,QACZsD,MAAMzD,EAAAA,EAAAA,KAAC2D,EAAAA,SAAQ,IAAI5D,SACpB,UAIHC,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CACPE,QAtLRI,KAClB,MAAMC,EAAUC,SAASC,eAAe,WAClCC,EAAUF,SAASC,eAAe,YACpCF,GACFG,EAAQnD,MAAMwB,QAAU,OACxBwB,EAAQhD,MAAMT,MAAQ,OACtByD,EAAQhD,MAAMoD,OAAS,OACvBJ,EAAQhD,MAAMG,QAAU,OACxBkD,MACGC,KAAKN,GACLO,IAAI,CACHxC,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClByC,SAAU,gBAAgBC,MAASC,OAAO,oBAC1CC,MAAO,CAAEC,KAAM,OAAQC,QAAS,KAChCC,YAAa,CAAEC,MAAO,EAAGC,SAAS,EAAMC,YAAY,GACpDC,MAAO,CAAEC,KAAM,KAAMT,OAAQ,SAAUU,YAAa,cAErDC,OACAC,MAAK,KACJtB,EAAQhD,MAAMwB,QAAU,GACxB2B,EAAQnD,MAAMwB,QAAU,GACxBwB,EAAQhD,MAAMG,QAAU,EAAE,KAG9BvB,QAAQH,MAAM,uCAChB,EA8J0Ba,WAAY,QACZsD,MAAMzD,EAAAA,EAAAA,KAACoF,EAAAA,IAAS,IAChB/C,QAAS,OACTxB,MAAO,CAAEV,WAAY,UAAWJ,SACjC,kBAGgB,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,QACI,OAAVnF,SAAU,IAAVA,QAAU,EAAVA,GAAYsF,WACZ7C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,KACZnD,EAAAA,EAAAA,KAACsD,EAAAA,GAAQ,CACPnD,WAAY,QACZoD,MAAO,MACPC,QAASA,IAAM7G,GAAU,GACzB8G,MAAMzD,EAAAA,EAAAA,KAACqF,EAAAA,WAAU,IAAItF,SACtB,qBAOTC,EAAAA,EAAAA,KAACsF,EAAAA,GAAI,CAACC,GAAG,gBAAexF,UACtBC,EAAAA,EAAAA,KAACgD,EAAAA,OAAM,CACLwC,UAAUxF,EAAAA,EAAAA,KAACyF,EAAAA,IAAc,IACzBlF,KAAK,KACLqC,QAAQ,QAAO7C,SAChB,kBAMPC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,YAIjB1F,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GAAKtB,GAAI,EAAET,UAC3CF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CACHzD,SAAS,KACT0D,WAAW,OACXrC,MAAO,iBAAiBxD,SAAA,CAEvB,IAAI,eACQ,OAGI,gBAAlB/C,IACC6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6F,EAAAA,MAAK,CACJlK,GAAG,OACHmK,KAAK,cACLrB,KAAK,OACL9D,SAAgB,OAAN5C,SAAM,IAANA,QAAM,EAANA,GAAQgI,aAClBC,OAAQrG,GACR7B,MAAa,OAANC,SAAM,IAANA,IAAc,QAARvD,EAANuD,GAAQe,cAAM,IAAAtE,OAAR,EAANA,EAAgB0D,YACvB+H,YACQ,OAANlI,SAAM,IAANA,IAAc,QAARtD,EAANsD,GAAQmI,cAAM,IAAAzL,GAAdA,EAAgByD,aACV,OAANH,SAAM,IAANA,IAAe,QAATrD,EAANqD,GAAQoI,eAAO,IAAAzL,GAAfA,EAAiBwD,YACb,UACA,KAENkI,WAAS,KAEXvG,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CAACxE,GAAG,OAAOoC,MAAO,MAAMxD,SAAA,CAC1B,KACM,OAANhC,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAOhI,eACR,OAANH,SAAM,IAANA,QAAM,EAANA,GAAQoI,QAAQjI,eACV,OAANH,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAOhI,oBAIrB8B,EAAAA,EAAAA,KAAC2F,EAAAA,KAAI,CACHU,cAAeA,IACbzI,GACE,cACe,OAAf3B,QAAe,IAAfA,OAAe,EAAfA,EAAiBiC,aAEpB6B,SAEe,OAAf9D,QAAe,IAAfA,GAAAA,EAAiBiC,YACC,OAAfjC,QAAe,IAAfA,OAAe,EAAfA,EAAiBiC,YACjB,cAKZ8B,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GAAKtB,GAAI,EAAET,UAC3CF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CACHzD,SAAS,KACT0D,WAAW,OACXrC,MAAO,iBAAiBxD,SAAA,CACzB,iBACgB,OAEE,kBAAlB/C,IACC6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6F,EAAAA,MAAK,CACJlK,GAAG,OACHmK,KAAK,gBACLrB,KAAK,OACL9D,SAAgB,OAAN5C,SAAM,IAANA,QAAM,EAANA,GAAQgI,aAClBC,OAAQrG,GACR7B,MAAa,OAANC,SAAM,IAANA,IAAc,QAARpD,EAANoD,GAAQe,cAAM,IAAAnE,OAAR,EAANA,EAAgBwD,cACvB8H,YACQ,OAANlI,SAAM,IAANA,IAAc,QAARnD,EAANmD,GAAQmI,cAAM,IAAAtL,GAAdA,EAAgBuD,eACV,OAANJ,SAAM,IAANA,IAAe,QAATlD,EAANkD,GAAQoI,eAAO,IAAAtL,GAAfA,EAAiBsD,cACb,UACA,KAENiI,WAAS,KAEXvG,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CAACxE,GAAG,OAAOoC,MAAO,MAAMxD,SAAA,CAC1B,KACM,OAANhC,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO/H,iBACR,OAANJ,SAAM,IAANA,QAAM,EAANA,GAAQoI,QAAQhI,iBACV,OAANJ,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO/H,sBAIrB6B,EAAAA,EAAAA,KAAC2F,EAAAA,KAAI,CACHU,cAAeA,IACbzI,GACE,gBACe,OAAf3B,QAAe,IAAfA,OAAe,EAAfA,EAAiBkC,eAEpB4B,SAEe,OAAf9D,QAAe,IAAfA,GAAAA,EAAiBkC,cACC,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiBkC,cACjB,cAKZ6B,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GAAKtB,GAAI,EAAET,UAC3CF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CACHzD,SAAS,KACT0D,WAAW,OACXrC,MAAO,iBAAiBxD,SAAA,CACzB,OACM,OAGY,SAAlB/C,IACC6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6F,EAAAA,MAAK,CACJlK,GAAG,OACHmK,KAAK,OACLrB,KAAK,OACL9D,SAAgB,OAAN5C,SAAM,IAANA,QAAM,EAANA,GAAQgI,aAClBC,OAAQrG,GACR7B,MAAa,OAANC,SAAM,IAANA,IAAc,QAARjD,EAANiD,GAAQe,cAAM,IAAAhE,OAAR,EAANA,EAAgBsD,KACvB6H,YACQ,OAANlI,SAAM,IAANA,IAAc,QAARhD,EAANgD,GAAQmI,cAAM,IAAAnL,GAAdA,EAAgBqD,MAAc,OAANL,SAAM,IAANA,IAAe,QAAT/C,EAAN+C,GAAQoI,eAAO,IAAAnL,GAAfA,EAAiBoD,KACrC,UACA,KAENgI,WAAS,KAEXvG,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CAACxE,GAAG,OAAOoC,MAAO,MAAMxD,SAAA,CAC1B,KACM,OAANhC,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO9H,QACR,OAANL,SAAM,IAANA,QAAM,EAANA,GAAQoI,QAAQ/H,QACV,OAANL,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO9H,aAIrB4B,EAAAA,EAAAA,KAAC2F,EAAAA,KAAI,CACHU,cAAeA,IACbzI,GAAkB,OAAuB,OAAf3B,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,MAC5C2B,SAEe,OAAf9D,QAAe,IAAfA,GAAAA,EAAiBmC,KAAsB,OAAfnC,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,KAAO,cAKzD4B,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GAAKtB,GAAI,EAAET,UAC3CF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CACHzD,SAAS,KACT0D,WAAW,OACXrC,MAAO,iBAAiBxD,SAAA,CACzB,SACQ,OAEU,WAAlB/C,IACC6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6F,EAAAA,MAAK,CACJlK,GAAG,OACHmK,KAAK,SACLrB,KAAK,OACL9D,SAAgB,OAAN5C,SAAM,IAANA,QAAM,EAANA,GAAQgI,aAClBC,OAAQrG,GACR7B,MAAa,OAANC,SAAM,IAANA,IAAc,QAAR9C,EAAN8C,GAAQe,cAAM,IAAA7D,OAAR,EAANA,EAAgBoD,OACvB4H,YACQ,OAANlI,SAAM,IAANA,IAAc,QAAR7C,EAAN6C,GAAQmI,cAAM,IAAAhL,GAAdA,EAAgBmD,QAAgB,OAANN,SAAM,IAANA,IAAe,QAAT5C,EAAN4C,GAAQoI,eAAO,IAAAhL,GAAfA,EAAiBkD,OACvC,UACA,KAEN+H,WAAS,KAEXvG,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CAACxE,GAAG,OAAOoC,MAAO,MAAMxD,SAAA,CAC1B,KACM,OAANhC,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO7H,UACR,OAANN,SAAM,IAANA,QAAM,EAANA,GAAQoI,QAAQ9H,UACV,OAANN,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO7H,eAIrB2B,EAAAA,EAAAA,KAAC2F,EAAAA,KAAI,CACHU,cAAeA,IACbzI,GAAkB,SAAyB,OAAf3B,QAAe,IAAfA,OAAe,EAAfA,EAAiBoC,QAC9C0B,SAEe,OAAf9D,QAAe,IAAfA,GAAAA,EAAiBoC,OACC,OAAfpC,QAAe,IAAfA,OAAe,EAAfA,EAAiBoC,OACjB,cAKZ2B,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGO,GAAI,GAAKtB,GAAI,EAAET,UAC3CF,EAAAA,EAAAA,MAACuC,EAAAA,IAAG,CAAArC,SAAA,EACFF,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CACHzD,SAAS,KACT0D,WAAW,OACXrC,MAAO,iBAAiBxD,SAAA,CACzB,YACW,OAGO,cAAlB/C,IACC6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6F,EAAAA,MAAK,CACJlK,GAAG,OACHmK,KAAK,YACLrB,KAAK,OACL9D,SAAgB,OAAN5C,SAAM,IAANA,QAAM,EAANA,GAAQgI,aAClBC,OAAQrG,GACR7B,MAAa,OAANC,SAAM,IAANA,IAAc,QAAR3C,EAAN2C,GAAQe,cAAM,IAAA1D,OAAR,EAANA,EAAgBkD,UACvB2H,YACQ,OAANlI,SAAM,IAANA,IAAc,QAAR1C,EAAN0C,GAAQmI,cAAM,IAAA7K,GAAdA,EAAgBiD,WACV,OAANP,SAAM,IAANA,IAAe,QAATzC,EAANyC,GAAQoI,eAAO,IAAA7K,GAAfA,EAAiBgD,UACb,UACA,KAEN8H,WAAS,KAEXvG,EAAAA,EAAAA,MAAC8F,EAAAA,KAAI,CAACxE,GAAG,OAAOoC,MAAO,MAAMxD,SAAA,CAC1B,KACM,OAANhC,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO5H,aACR,OAANP,SAAM,IAANA,QAAM,EAANA,GAAQoI,QAAQ7H,aACV,OAANP,SAAM,IAANA,QAAM,EAANA,GAAQmI,OAAO5H,kBAIrB0B,EAAAA,EAAAA,KAAC2F,EAAAA,KAAI,CACHU,cAAeA,IACbzI,GACE,YACe,OAAf3B,QAAe,IAAfA,OAAe,EAAfA,EAAiBqC,WAEpByB,SAEe,OAAf9D,QAAe,IAAfA,GAAAA,EAAiBqC,UACC,OAAfrC,QAAe,IAAfA,OAAe,EAAfA,EAAiBqC,UACjB,cAKZ0B,EAAAA,EAAAA,KAACiB,EAAAA,KAAI,UAIQ,gBAAX,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,QACI,OAAVnF,SAAU,IAAVA,QAAU,EAAVA,GAAYqF,UACF,OAAVrF,SAAU,IAAVA,QAAU,EAAVA,GAAYsF,WACZ1C,EAAAA,EAAAA,KAACsG,EAAAA,EAAI,CAAC9F,GAAI,EAAET,UACVC,EAAAA,EAAAA,KAACiB,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBE,IAAK,EAAErB,UAC5CC,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACkF,SAAU,EAAExG,UACpBF,EAAAA,EAAAA,MAACI,EAAAA,KAAI,CAACC,eAAgB,QAAQH,SAAA,CACZ,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,OAAmC,OAAVnF,SAAU,IAAVA,IAAAA,GAAYqF,QAC1CzC,EAAAA,EAAAA,KAACgD,EAAAA,OAAM,CACLzC,KAAK,KACLiD,QAASA,KACP/G,GAAQ,EAAK,EAEf+I,UAAUxF,EAAAA,EAAAA,KAAC2D,EAAAA,SAAQ,IACnBb,GAAI,IACJF,QAAQ,UACRC,YAAY,QAAO9C,SACpB,SAID,GAEc,gBAAX,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,OAAmC,OAAVnF,SAAU,IAAVA,IAAAA,GAAYsF,QAC1C1C,EAAAA,EAAAA,KAACgD,EAAAA,OAAM,CACLzC,KAAK,KACLM,MAAO,CAAEC,WAAY,WACrB0C,QAASA,IAAM7G,GAAU,GACzB6I,UAAUxF,EAAAA,EAAAA,KAACqF,EAAAA,WAAU,IACrBxC,YAAY,MAAK9C,SAClB,WAID,gBAShBC,EAAAA,EAAAA,KAACwG,EAAAA,EAAG,CACFpK,OAAQA,EACRmE,KAAM,KACNjE,QAASA,EACTS,UAAWA,GACXD,OAAQA,MAEVkD,EAAAA,EAAAA,KAACyG,EAAAA,EAAI,CACHrK,OAAQI,EACR+D,KAAM,KACNmG,WAAkB,OAANnL,QAAM,IAANA,OAAM,EAANA,EAAQI,GACpBW,QAASG,EACTM,UAAWA,MAEbiD,EAAAA,EAAAA,KAAC2G,EAAAA,EAAiB,CAChBvK,OAAQM,EACRJ,QAASA,IAAMK,GAAU,GACzB8H,KAAK,eACLmC,iBA7hByBrJ,UAC7B,IACEV,IAAY,GACZ,IAAIkC,QAAiB8H,EAAAA,EAAAA,IAAc,8BAA+B,CAACC,IAC1C,OAAb,OAAR/H,QAAQ,IAARA,OAAQ,EAARA,EAAUI,UACZxC,GAAU,GACVlB,EAAS,kBAEXoB,IAAY,EACd,CAAE,MAAOyC,GACPG,QAAQC,IAAIJ,EACd,CAAC,QACCzC,IAAY,EACd,GAihBIiK,IAAW,OAANvL,QAAM,IAANA,OAAM,EAANA,EAAQI,OAEd,C,yJC9mBP,SAASoL,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,GAG3B,CAEA,OAAOL,CACT,EAEOH,EAASY,MAAMC,KAAMR,UAC9B,CAEA,SAASS,EAA8BP,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAC5B,IAEIC,EAAKJ,EAFLD,EAAS,CAAC,EACVa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,CACT,CAEA,IAAIgB,EAAc,CAAC,eAAgB,WAAY,QAAS,WAAY,SAAU,eAAgB,cAAe,aACzGC,EAAe,CAAC,aAAc,eAC9BC,EAAa,CAAC,aAAc,KAAM,YAKlCC,GAAwBC,EAAAA,EAAAA,KACxBC,EAA0BF,EAAsB,GAChDG,EAA4BH,EAAsB,GAClDI,EAAqBJ,EAAsB,GAC3CK,EAAoBL,EAAsB,GAqF9C,IAAIM,GAAiBC,EAAAA,EAAAA,IAAc,CACjC9C,KAAM,cACN+C,aAAc,yGAEZC,EAAeH,EAAe,GAC9BI,EAAiBJ,EAAe,GAwQpC,SAASK,EAAUrN,EAAIiF,GACrB,OAAOjF,EAAK,SAAWiF,CACzB,CAEA,SAASqI,EAAetN,EAAIiF,GAC1B,OAAOjF,EAAK,cAAgBiF,CAC9B,CAEA,IAAIsI,EAAY,CAAC,WAAY,aACzBC,EAAa,CAAC,YAAa,eAO3BzI,GAAoB0I,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GAClD,IAAIC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAErCI,GAAoBC,EAAAA,EAAAA,IAAiBL,GACrCtJ,EAAW0J,EAAkB1J,SAC7B4J,EAAYF,EAAkBE,UAG9BC,EA/WN,SAAiBP,GACf,IAAIQ,EAAeR,EAAMQ,aACrBlJ,EAAW0I,EAAM1I,SACjBC,EAAQyI,EAAMzI,MACdkJ,EAAWT,EAAMS,SACjBC,EAASV,EAAMU,OACfC,EAAsBX,EAAMY,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAqBb,EAAMpE,YAC3BA,OAAqC,IAAvBiF,EAAgC,aAAeA,EAC7DC,EAAmBd,EAAMe,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAYxC,EAA8BwB,EAAOnB,GAejDoC,EAAkBC,EAAAA,SAA+B,MAAhBV,EAAuBA,EAAe,GACvEW,EAAeF,EAAgB,GAC/BG,EAAkBH,EAAgB,GAElCI,GAAwBC,EAAAA,EAAAA,IAAqB,CAC/CC,aAA8B,MAAhBf,EAAuBA,EAAe,EACpD/L,MAAO8C,EACPD,SAAUA,IAERkK,EAAgBH,EAAsB,GACtCI,EAAmBJ,EAAsB,GAM7CH,EAAAA,WAAgB,WACD,MAAT3J,GACF6J,EAAgB7J,EAEpB,GAAG,CAACA,IAKJ,IAAImK,EAActC,IAMlB,MAAO,CACL9M,IAFOqP,EAAAA,EAAAA,IAAM3B,EAAM1N,GAAI,QAGvBkP,cAAeA,EACfL,aAAcA,EACdM,iBAAkBA,EAClBL,gBAAiBA,EACjBX,SAAUA,EACVC,OAAQA,EACRE,aAAcA,EACdhF,YAAaA,EACb8F,YAAaA,EACbX,UAAWA,EACXC,UAAWA,EAEf,CAuSiBY,CAFJpD,EAA8B4B,EAAmBP,IAGxDmB,EAAYT,EAASS,UACrBU,EAAcnB,EAASmB,YACvBG,EAAMrD,EAA8B+B,EAAUT,GAE9CgC,EAAUZ,EAAAA,SAAc,WAC1B,OAAOW,CACT,GAAG,CAACA,IACAE,GAAYC,EAAAA,EAAAA,IAAKhB,EAAW,CAAC,aACjC,OAAoBE,EAAAA,cAAoBhC,EAAyB,CAC/DzK,MAAOiN,GACOR,EAAAA,cAAoBzB,EAAc,CAChDhL,MAAOqN,GACOZ,EAAAA,cAAoBe,EAAAA,GAAgB,CAClDxN,MAAOyL,GACOgB,EAAAA,cAAoBgB,EAAAA,GAAOC,IAAKzE,EAAS,CACvD4C,WAAW8B,EAAAA,EAAAA,IAAG,cAAe9B,GAC7BL,IAAKA,GACJ8B,EAAW,CACZM,MAAOnC,EAAOoC,OACZ5L,KACN,IAEI6L,EAAAA,KACFlL,EAAKmL,YAAc,QAOrB,IAAIC,GAAmB1C,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACjD,IAAIC,GAASwC,EAAAA,EAAAA,MACTC,EAzPN,SAAgB3C,GACd,IAAI4C,EAAa5C,EAAM4C,WACnBC,EAAc7C,EAAM6C,YACpB7B,EAAYxC,EAA8BwB,EAAOlB,GAEjDgE,EAAmBpD,IACnB+B,EAAmBqB,EAAiBrB,iBACpChB,EAAWqC,EAAiBrC,SAC5BnO,EAAKwQ,EAAiBxQ,GACtB8O,EAAkB0B,EAAiB1B,gBACnCI,EAAgBsB,EAAiBtB,cAEjCuB,EAAqB1D,EAAkB,CACzC2D,SAAUJ,IAAeC,IAEvBtL,EAAQwL,EAAmBxL,MAC3B0L,EAAWF,EAAmBE,SAE9BC,EAAa3L,IAAUiK,EAgBvB2B,GAAiBC,EAAAA,EAAAA,GAAa1F,EAAS,CAAC,EAAGsD,EAAW,CACxDf,KAAKoD,EAAAA,EAAAA,IAAUJ,EAAUjD,EAAMC,KAC/B2C,WAAYA,EACZC,YAAaA,EACb1I,SAASmJ,EAAAA,EAAAA,IAAgBtD,EAAM7F,SAlBnB,WACZsH,EAAiBlK,EACnB,OAmBA,OAAOmG,EAAS,CAAC,EAAGyF,EAAgB,CAClC7Q,GAAIqN,EAAUrN,EAAIiF,GAClB2B,KAAM,MACNqK,SAAUL,EAAa,GAAK,EAC5B9H,KALS,SAMT,gBAAiB8H,EACjB,gBAAiBtD,EAAetN,EAAIiF,GACpCiM,QAASZ,OAAaa,GAAYH,EAAAA,EAAAA,IAAgBtD,EAAMwD,SAxB5C,WACZpC,EAAgB7J,IAEIkJ,KADSmC,IAAcC,IAIzCpB,EAAiBlK,EAErB,KAkBF,CAuMiBmM,CAAOhG,EAAS,CAAC,EAAGsC,EAAO,CACxCC,IAAKA,KAGH0D,EAAYjG,EAAS,CACvBkG,QAAS,IACT5K,QAAS,OACTlC,WAAY,SACZD,eAAgB,UACfqJ,EAAO2D,KAEV,OAAoB3C,EAAAA,cAAoBgB,EAAAA,GAAO4B,OAAQpG,EAAS,CAAC,EAAGiF,EAAU,CAC5ErC,WAAW8B,EAAAA,EAAAA,IAAG,mBAAoBpC,EAAMM,WACxC+B,MAAOsB,IAEX,IAEIpB,EAAAA,KACFE,EAAID,YAAc,OAOpB,IAAIrK,GAAuB4H,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACrD,IAAI8D,EAnVN,SAAoB/D,GAClB,IAAIgE,EAAkBtE,IAClByB,EAAe6C,EAAgB7C,aAC/BvF,EAAcoI,EAAgBpI,YAC9BmF,EAAYiD,EAAgBjD,UAE5BW,EAAcvC,IACd8E,EAAY/C,EAAAA,aAAkB,SAAUgD,GAC1C,IAAIC,EAEAC,EAAU,WACZ,IAAIC,EAAO3C,EAAY4C,YAAYnD,GAC/BkD,IAAME,EAAAA,EAAAA,IAAMF,EAAKG,KACvB,EAEIC,EAAU,WACZ,IAAIC,EAAOhD,EAAYiD,YAAYxD,GAC/BuD,IAAMH,EAAAA,EAAAA,IAAMG,EAAKF,KACvB,EAYII,EAA+B,eAAhBhJ,EACfiJ,EAA6B,aAAhBjJ,EACbkJ,GAAWC,EAAAA,EAAAA,IAAkBb,GAE7Bc,EAAyB,QAAdjE,EAAsB,aAAe,YAUhDtN,IATU0Q,EAAU,CAAC,GAFM,QAAdpD,EAAsB,YAAc,cAEH,WAChD,OAAO6D,GAAgBH,GACzB,EAAGN,EAAQa,GAAY,WACrB,OAAOJ,GAAgBR,GACzB,EAAGD,EAAQc,UAAY,WACrB,OAAOJ,GAAcT,GACvB,EAAGD,EAAQe,QAAU,WACnB,OAAOL,GAAcJ,GACvB,EAAGN,EAAQgB,KAvBI,WACb,IAAIC,EAAQ1D,EAAY2D,eACpBD,IAAOb,EAAAA,EAAAA,IAAMa,EAAMZ,KACzB,EAoB4BL,EAAQmB,IAlBtB,WACZ,IAAIC,EAAO7D,EAAY8D,cACnBD,IAAMhB,EAAAA,EAAAA,IAAMgB,EAAKf,KACvB,EAemDL,GAC/BW,GAEhBrR,IACFyQ,EAAMuB,iBACNhS,EAAOyQ,GAEX,GAAG,CAACxC,EAAaP,EAAcvF,EAAamF,IAC5C,OAAOrD,EAAS,CAAC,EAAGsC,EAAO,CACzB9G,KAAM,UACN,mBAAoB0C,EACpBqI,WAAWX,EAAAA,EAAAA,IAAgBtD,EAAMiE,UAAWA,IAEhD,CA2RqByB,CAAWhI,EAAS,CAAC,EAAGsC,EAAO,CAChDC,IAAKA,KAIH0F,EAAgBjI,EAAS,CAC3B1E,QAAS,SAHE0J,EAAAA,EAAAA,MAIHkD,SAEV,OAAoB1E,EAAAA,cAAoBgB,EAAAA,GAAOC,IAAKzE,EAAS,CAAC,EAAGqG,EAAc,CAC7EzD,WAAW8B,EAAAA,EAAAA,IAAG,uBAAwBpC,EAAMM,WAC5C+B,MAAOsD,IAEX,IAEIpD,EAAAA,KACFpK,EAAQqK,YAAc,WAOxB,IAAIqD,GAAwB9F,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACtD,IAAI6F,EAtNN,SAAqB9F,GACnB,IAAIkD,EAAalD,EAAMkD,WACnB5Q,EAAK0N,EAAM1N,GACXoE,EAAWsJ,EAAMtJ,SACjBsK,EAAYxC,EAA8BwB,EAAOjB,GAEjDgH,EAAmBrG,IACnBgB,EAASqF,EAAiBrF,OAC1BE,EAAemF,EAAiBnF,aAEhCoF,EAAkB9E,EAAAA,QAAa,GAYnC,OAVIgC,IACF8C,EAAgBC,SAAU,GASrBvI,EAAS,CAEd6F,SAAU,GACTvC,EAAW,CACZtK,UAVyBwP,EAAAA,EAAAA,IAAsB,CAC/CF,gBAAiBA,EAAgBC,QACjC/C,WAAYA,EACZxC,OAAQA,EACRE,aAAcA,IAMmBlK,EAAW,KAC5CwC,KAAM,WACNiN,QAASjD,EACT5Q,GAAIA,GAER,CAuLmB8T,CAAY1I,EAAS,CAAC,EAAGsC,EAAO,CAC/CC,IAAKA,KAEHC,GAASwC,EAAAA,EAAAA,MACb,OAAoBxB,EAAAA,cAAoBgB,EAAAA,GAAOC,IAAKzE,EAAS,CAC3DkG,QAAS,KACRkC,EAAY,CACbxF,WAAW8B,EAAAA,EAAAA,IAAG,yBAA0BpC,EAAMM,WAC9C+B,MAAOnC,EAAOmG,WAElB,IAEI9D,EAAAA,KACFsD,EAASrD,YAAc,YAWzB,IAAI8D,GAAyBvG,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACvD,IAAIsG,EAvQN,SAAsBvG,GACpB,IAAI8B,EAAUpC,IACVpN,EAAKwP,EAAQxP,GACbkP,EAAgBM,EAAQN,cAU5B,OAAO9D,EAAS,CAAC,EAAGsC,EAAO,CACzBtJ,UAVkB8P,EAAAA,EAAAA,IAAiBxG,EAAMtJ,UACd+P,KAAI,SAAUC,EAAOnP,GAChD,OAAoB2J,EAAAA,aAAmBwF,EAAO,CAC5CxD,WAAY3L,IAAUiK,EACtBlP,GAAIsN,EAAetN,EAAIiF,GAEvB,kBAAmBoI,EAAUrN,EAAIiF,IAErC,KAIF,CAuPoBoP,CAAa3G,GAC3BE,GAASwC,EAAAA,EAAAA,MACb,OAAoBxB,EAAAA,cAAoBgB,EAAAA,GAAOC,IAAKzE,EAAS,CAAC,EAAG6I,EAAa,CAC5ExP,MAAO,OACPkJ,IAAKA,EACLK,WAAW8B,EAAAA,EAAAA,IAAG,0BAA2BpC,EAAMM,WAC/C+B,MAAOnC,EAAO0G,YAElB,IAEIrE,EAAAA,KACF+D,EAAU9D,YAAc,aAS1B,IAAIqE,GAA4B9G,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GAC1D,IAAI6G,EA3NN,WACE,IAAIhF,EAAUpC,IACVgC,EAAcvC,IACdqC,EAAgBM,EAAQN,cACxB5F,EAAckG,EAAQlG,YACtBgJ,EAA+B,eAAhBhJ,EACfiJ,EAA6B,aAAhBjJ,EAEbmL,EAAmB7F,EAAAA,UAAe,WACpC,OAAI0D,EAAqB,CACvBoC,KAAM,EACNjQ,MAAO,GAEL8N,EAAmB,CACrBoC,IAAK,EACLrM,OAAQ,QAFV,CAKF,IACIsM,EAAOH,EAAiB,GACxBI,EAAUJ,EAAiB,GAE3BK,EAAmBlG,EAAAA,UAAe,GAClCmG,EAAcD,EAAiB,GAC/BE,EAAiBF,EAAiB,GAkCtC,OA/BAG,EAAAA,EAAAA,IAAoB,WAClB,KAAIC,EAAAA,EAAAA,IAAYhG,GAAhB,CACA,IAAIqC,EAAMnC,EAAY+F,KAAKjG,GAC3B,KAAIgG,EAAAA,EAAAA,IAAY3D,GAAhB,CAEIe,GACFuC,EAAQ,CACNH,KAAMnD,EAAIW,KAAKkD,WACf3Q,MAAO8M,EAAIW,KAAKmD,cAKhB9C,GACFsC,EAAQ,CACNF,IAAKpD,EAAIW,KAAKoD,UACdhN,OAAQiJ,EAAIW,KAAKqD,eAMrB,IAAIvV,EAAKwV,uBAAsB,WAC7BR,GAAe,EACjB,IACA,OAAO,WACDhV,GACFyV,qBAAqBzV,EAEzB,CA1BsC,CAFU,CA6BlD,GAAG,CAACkP,EAAeoD,EAAcC,EAAYnD,IACtChE,EAAS,CACdsK,SAAU,WACVC,mBAAoB,0CACpBC,mBAAoBb,EAAc,QAAU,MAC5Cc,yBAA0B,8BACzBjB,EACL,CA2JuBkB,GAEjB5Q,EAAQkG,EAAS,CAAC,EAAGsC,EAAMxI,MAAOsP,GAElC5G,GAASwC,EAAAA,EAAAA,MACb,OAAoBxB,EAAAA,cAAoBgB,EAAAA,GAAOC,IAAKzE,EAAS,CAC3DuC,IAAKA,GACJD,EAAO,CACRM,WAAW8B,EAAAA,EAAAA,IAAG,6BAA8BpC,EAAMM,WAClD9I,MAAOA,EACP6K,MAAOnC,EAAOmI,YAElB,IAEI9F,EAAAA,KACFsE,EAAarE,YAAc,e","sources":["views/admin/bankDetails/View.js","../node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js"],"sourcesContent":["import {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Box,\n  Input,\n  Text,\n  VStack,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getApi, putApi } from \"services/api\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport moment from \"moment\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Add from \"./components/Add\";\nimport Edit from \"./components/Edit\";\nimport { deleteManyApi } from \"services/api\";\n\nconst View = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const { id } = params;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [bankDataDetails, setBankDetails] = useState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [isLoding, setIsLoding] = useState(false);\n  const [action, setAction] = useState(false);\n  const [editableField, setEditableField] = useState(null);\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const [permission] = HasAccess([\"Bank Details\"]);\n\n  const fetchViewData = async () => {\n    if (id) {\n      const result = await getApi(\"api/bank-details/view/\", id);\n      setBankDetails(result?.data);\n    }\n  };\n\n  const handleClick = () => {\n    onOpen();\n  };\n\n  useEffect(() => {\n    fetchViewData();\n  }, [id, edit, action]);\n\n  const handleDoubleClick = (fieldName, value) => {\n    formik.setFieldValue(fieldName, value);\n    setEditableField(fieldName);\n  };\n\n  const handleTabChange = (index) => {\n    setSelectedTab(index);\n  };\n\n  const handleDeleteBankDetais = async (ids) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteManyApi(\"api/bank-details/deleteMany\", [ids]);\n      if (response?.status === 200) {\n        setDelete(false);\n        navigate(\"/bank-details\");\n      }\n      setIsLoding(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const generatePDF = () => {\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n    if (element) {\n      hideBtn.style.display = \"none\";\n      element.style.width = \"100%\";\n      element.style.height = \"auto\";\n      element.style.padding = \"15px\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `Bank_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          element.style.display = \"\";\n          hideBtn.style.display = \"\";\n          element.style.padding = \"\";\n        });\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n    }\n  };\n\n  const initialValues = {\n    accountName: bankDataDetails?.accountName || \"\",\n    accountNumber: bankDataDetails?.accountNumber || \"\",\n    bank: bankDataDetails?.bank || \"\",\n    branch: bankDataDetails?.branch || \"\",\n    swiftCode: bankDataDetails?.swiftCode || \"\",\n  };\n  const validationSchema = yup.object({\n    accountName: yup.string().required(\"AccountName Is required\"),\n    accountNumber: yup.number().required(\"AccountNumber Is required\"),\n    bank: yup.string().required(\"Bank Is required\"),\n    branch: yup.string().required(\"Branch Is required\"),\n    swiftCode: yup.number().required(\"SwiftCode Is required\"),\n  });\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      setEditableField(null);\n      AddData();\n    },\n  });\n\n  const { values } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await putApi(\n        `api/bank-details/edit/${params?.id}`,\n        values\n      );\n      if (response && response?.status === 200) {\n        setEditableField(null);\n        onClose();\n        setAction((pre) => !pre);\n      } else {\n        toast.error(response?.response?.data?.message);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  const handleBlur = (e) => {\n    formik.handleSubmit();\n  };\n\n  return (\n    <>\n      {isLoding ? (\n        <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n          <Spinner />\n        </Flex>\n      ) : (\n        <>\n          <Heading size=\"lg\" mt={0} m={3}>\n            {bankDataDetails?.accountName || \"\"}\n          </Heading>\n          <Tabs\n            onChange={handleTabChange}\n            index={selectedTab}\n            style={{\n              background: \"#ffffff\",\n              borderRadius: \"20px\",\n              padding: \"20px\",\n            }}\n          >\n            <Grid\n              templateColumns={\"repeat(4, 1fr)\"}\n              mb={3}\n              gap={1}\n              id=\"reports\"\n            >\n              <GridItem colSpan={{ base: 4 }}>\n                <TabList\n                  sx={{\n                    border: \"none\",\n                    \"& button:focus\": { boxShadow: \"none\" },\n                    \"& button\": {\n                      margin: { sm: \"0 3px\", md: \"0 5px\" },\n                      padding: { sm: \"5px\", md: \"8px\" },\n                      border: \"2px solid #8080803d\",\n                      borderTopLeftRadius: \"10px\",\n                      borderTopRightRadius: \"10px\",\n                      borderBottom: 0,\n                      fontSize: { sm: \"12px\", md: \"16px\" },\n                    },\n                    '& button[aria-selected=\"true\"]': {\n                      border: \"2px solid brand.200\",\n                      borderBottom: 0,\n                      zIndex: \"0\",\n                    },\n                  }}\n                ></TabList>\n              </GridItem>\n              <GridItem\n                colSpan={{ base: 2, md: 4 }}\n                mt={{ sm: \"3px\", md: \"5px\" }}\n              >\n                <GridItem colSpan={2}>\n                  <Box>\n                    <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                      <Heading size=\"md\" mb={3}>\n                        Bank Details\n                      </Heading>\n                      <Flex id=\"hide-btn\">\n                        <Menu>\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.create ||\n                            permission?.update ||\n                            permission?.delete) && (\n                            <MenuButton\n                              size=\"sm\"\n                              variant=\"outline\"\n                              colorScheme=\"blackAlpha\"\n                              mr={2.5}\n                              as={Button}\n                              rightIcon={<ChevronDownIcon />}\n                            >\n                              Actions\n                            </MenuButton>\n                          )}\n                          <MenuDivider />\n                          <MenuList minWidth={2}>\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.create) && (\n                              <MenuItem\n                                color={\"blue\"}\n                                onClick={() => {\n                                  handleClick();\n                                }}\n                                alignItems={\"start\"}\n                                icon={<AddIcon />}\n                              >\n                                {\" \"}\n                                Add{\" \"}\n                              </MenuItem>\n                            )}\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.update) && (\n                              <MenuItem\n                                onClick={() => {\n                                  setEdit(true);\n                                }}\n                                alignItems={\"start\"}\n                                icon={<EditIcon />}\n                              >\n                                Edit\n                              </MenuItem>\n                            )}\n                            <MenuItem\n                              onClick={generatePDF}\n                              alignItems={\"start\"}\n                              icon={<FaFilePdf />}\n                              display={\"flex\"}\n                              style={{ alignItems: \"center\" }}\n                            >\n                              Print as PDF\n                            </MenuItem>\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.delete) && (\n                              <>\n                                <MenuDivider />\n                                <MenuItem\n                                  alignItems={\"start\"}\n                                  color={\"red\"}\n                                  onClick={() => setDelete(true)}\n                                  icon={<DeleteIcon />}\n                                >\n                                  Delete\n                                </MenuItem>\n                              </>\n                            )}\n                          </MenuList>\n                        </Menu>\n                        <Link to=\"/bank-details\">\n                          <Button\n                            leftIcon={<IoIosArrowBack />}\n                            size=\"sm\"\n                            variant=\"brand\"\n                          >\n                            Back\n                          </Button>\n                        </Link>\n                      </Flex>\n                    </Box>\n                    <HSeparator />\n                  </Box>\n                </GridItem>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    {\" \"}\n                    Account Name{\" \"}\n                  </Text>\n\n                  {editableField === \"accountName\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"accountName\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.accountName}\n                        borderColor={\n                          formik?.errors?.accountName &&\n                          formik?.touched?.accountName\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.accountName &&\n                          formik?.touched.accountName &&\n                          formik?.errors.accountName}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\n                          \"accountName\",\n                          bankDataDetails?.accountName\n                        )\n                      }\n                    >\n                      {bankDataDetails?.accountName\n                        ? bankDataDetails?.accountName\n                        : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    Account Number{\" \"}\n                  </Text>\n                  {editableField === \"accountNumber\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"accountNumber\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.accountNumber}\n                        borderColor={\n                          formik?.errors?.accountNumber &&\n                          formik?.touched?.accountNumber\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.accountNumber &&\n                          formik?.touched.accountNumber &&\n                          formik?.errors.accountNumber}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\n                          \"accountNumber\",\n                          bankDataDetails?.accountNumber\n                        )\n                      }\n                    >\n                      {bankDataDetails?.accountNumber\n                        ? bankDataDetails?.accountNumber\n                        : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    Bank{\" \"}\n                  </Text>\n\n                  {editableField === \"bank\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"bank\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.bank}\n                        borderColor={\n                          formik?.errors?.bank && formik?.touched?.bank\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.bank &&\n                          formik?.touched.bank &&\n                          formik?.errors.bank}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\"bank\", bankDataDetails?.bank)\n                      }\n                    >\n                      {bankDataDetails?.bank ? bankDataDetails?.bank : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    Branch{\" \"}\n                  </Text>\n                  {editableField === \"branch\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"branch\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.branch}\n                        borderColor={\n                          formik?.errors?.branch && formik?.touched?.branch\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.branch &&\n                          formik?.touched.branch &&\n                          formik?.errors.branch}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\"branch\", bankDataDetails?.branch)\n                      }\n                    >\n                      {bankDataDetails?.branch\n                        ? bankDataDetails?.branch\n                        : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    swiftCode{\" \"}\n                  </Text>\n\n                  {editableField === \"swiftCode\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"swiftCode\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.swiftCode}\n                        borderColor={\n                          formik?.errors?.swiftCode &&\n                          formik?.touched?.swiftCode\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.swiftCode &&\n                          formik?.touched.swiftCode &&\n                          formik?.errors.swiftCode}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\n                          \"swiftCode\",\n                          bankDataDetails?.swiftCode\n                        )\n                      }\n                    >\n                      {bankDataDetails?.swiftCode\n                        ? bankDataDetails?.swiftCode\n                        : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <Grid></Grid>\n            </Grid>\n          </Tabs>\n\n          {(user?.role === \"superAdmin\" ||\n            permission?.update ||\n            permission?.delete) && (\n            <Card mt={3}>\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={1}>\n                <GridItem colStart={6}>\n                  <Flex justifyContent={\"right\"}>\n                    {user?.role === \"superAdmin\" || permission?.update ? (\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          setEdit(true);\n                        }}\n                        leftIcon={<EditIcon />}\n                        mr={2.5}\n                        variant=\"outline\"\n                        colorScheme=\"green\"\n                      >\n                        Edit\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                    {user?.role === \"superAdmin\" || permission?.delete ? (\n                      <Button\n                        size=\"sm\"\n                        style={{ background: \"red.800\" }}\n                        onClick={() => setDelete(true)}\n                        leftIcon={<DeleteIcon />}\n                        colorScheme=\"red\"\n                      >\n                        Delete\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Flex>\n                </GridItem>\n              </Grid>\n            </Card>\n          )}\n        </>\n      )}\n      <Add\n        isOpen={isOpen}\n        size={\"lg\"}\n        onClose={onClose}\n        setAction={setAction}\n        action={action}\n      />\n      <Edit\n        isOpen={edit}\n        size={\"lg\"}\n        selectedId={params?.id}\n        onClose={setEdit}\n        setAction={setAction}\n      />\n      <CommonDeleteModel\n        isOpen={deleteModel}\n        onClose={() => setDelete(false)}\n        type=\"Bank Details\"\n        handleDeleteData={handleDeleteBankDetais}\n        ids={params?.id}\n      />\n    </>\n  );\n};\n\nexport default View;\n","import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, callAllHandlers, determineLazyBehavior, isUndefined, focus, omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useClickable } from '@chakra-ui/clickable';\nimport { createDescendantContext } from '@chakra-ui/descendant';\nimport { useControllableState, useId, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { createContext, mergeRefs, getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"defaultIndex\", \"onChange\", \"index\", \"isManual\", \"isLazy\", \"lazyBehavior\", \"orientation\", \"direction\"],\n    _excluded2$1 = [\"isDisabled\", \"isFocusable\"],\n    _excluded3 = [\"isSelected\", \"id\", \"children\"];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n    TabsDescendantsProvider = _createDescendantCont[0],\n    useTabsDescendantsContext = _createDescendantCont[1],\n    useTabsDescendants = _createDescendantCont[2],\n    useTabsDescendant = _createDescendantCont[3];\n\n/**\n * Tabs hook that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nfunction useTabs(props) {\n  var defaultIndex = props.defaultIndex,\n      onChange = props.onChange,\n      index = props.index,\n      isManual = props.isManual,\n      isLazy = props.isLazy,\n      _props$lazyBehavior = props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n\n\n  var _React$useState = React.useState(defaultIndex != null ? defaultIndex : 0),\n      focusedIndex = _React$useState[0],\n      setFocusedIndex = _React$useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange: onChange\n  }),\n      selectedIndex = _useControllableState[0],\n      setSelectedIndex = _useControllableState[1];\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n\n\n  React.useEffect(function () {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n\n  var descendants = useTabsDescendants();\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n\n  var id = useId(props.id, \"tabs\");\n  return {\n    id: id,\n    selectedIndex: selectedIndex,\n    focusedIndex: focusedIndex,\n    setSelectedIndex: setSelectedIndex,\n    setFocusedIndex: setFocusedIndex,\n    isManual: isManual,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    orientation: orientation,\n    descendants: descendants,\n    direction: direction,\n    htmlProps: htmlProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n}),\n    TabsProvider = _createContext[0],\n    useTabsContext = _createContext[1];\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nfunction useTabList(props) {\n  var _useTabsContext = useTabsContext(),\n      focusedIndex = _useTabsContext.focusedIndex,\n      orientation = _useTabsContext.orientation,\n      direction = _useTabsContext.direction;\n\n  var descendants = useTabsDescendantsContext();\n  var onKeyDown = React.useCallback(function (event) {\n    var _keyMap;\n\n    var nextTab = function nextTab() {\n      var next = descendants.nextEnabled(focusedIndex);\n      if (next) focus(next.node);\n    };\n\n    var prevTab = function prevTab() {\n      var prev = descendants.prevEnabled(focusedIndex);\n      if (prev) focus(prev.node);\n    };\n\n    var firstTab = function firstTab() {\n      var first = descendants.firstEnabled();\n      if (first) focus(first.node);\n    };\n\n    var lastTab = function lastTab() {\n      var last = descendants.lastEnabled();\n      if (last) focus(last.node);\n    };\n\n    var isHorizontal = orientation === \"horizontal\";\n    var isVertical = orientation === \"vertical\";\n    var eventKey = normalizeEventKey(event);\n    var ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    var ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {\n      return isHorizontal && prevTab();\n    }, _keyMap[ArrowEnd] = function () {\n      return isHorizontal && nextTab();\n    }, _keyMap.ArrowDown = function ArrowDown() {\n      return isVertical && nextTab();\n    }, _keyMap.ArrowUp = function ArrowUp() {\n      return isVertical && prevTab();\n    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return _extends({}, props, {\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nfunction useTab(props) {\n  var isDisabled = props.isDisabled,\n      isFocusable = props.isFocusable,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var _useTabsContext2 = useTabsContext(),\n      setSelectedIndex = _useTabsContext2.setSelectedIndex,\n      isManual = _useTabsContext2.isManual,\n      id = _useTabsContext2.id,\n      setFocusedIndex = _useTabsContext2.setFocusedIndex,\n      selectedIndex = _useTabsContext2.selectedIndex;\n\n  var _useTabsDescendant = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  }),\n      index = _useTabsDescendant.index,\n      register = _useTabsDescendant.register;\n\n  var isSelected = index === selectedIndex;\n\n  var onClick = function onClick() {\n    setSelectedIndex(index);\n  };\n\n  var onFocus = function onFocus() {\n    setFocusedIndex(index);\n    var isDisabledButFocusable = isDisabled && isFocusable;\n    var shouldSelect = !isManual && !isDisabledButFocusable;\n\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n\n  var clickableProps = useClickable(_extends({}, htmlProps, {\n    ref: mergeRefs(register, props.ref),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  }));\n  var type = \"button\";\n  return _extends({}, clickableProps, {\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type: type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus)\n  });\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nfunction useTabPanels(props) {\n  var context = useTabsContext();\n  var id = context.id,\n      selectedIndex = context.selectedIndex;\n  var validChildren = getValidChildren(props.children);\n  var children = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index)\n    });\n  });\n  return _extends({}, props, {\n    children: children\n  });\n}\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\n\nfunction useTabPanel(props) {\n  var isSelected = props.isSelected,\n      id = props.id,\n      children = props.children,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var _useTabsContext3 = useTabsContext(),\n      isLazy = _useTabsContext3.isLazy,\n      lazyBehavior = _useTabsContext3.lazyBehavior;\n\n  var hasBeenSelected = React.useRef(false);\n\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected: isSelected,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  });\n  return _extends({\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0\n  }, htmlProps, {\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id: id\n  });\n}\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\n\nfunction useTabIndicator() {\n  var context = useTabsContext();\n  var descendants = useTabsDescendantsContext();\n  var selectedIndex = context.selectedIndex,\n      orientation = context.orientation;\n  var isHorizontal = orientation === \"horizontal\";\n  var isVertical = orientation === \"vertical\"; // Get the clientRect of the selected tab\n\n  var _React$useState2 = React.useState(function () {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return undefined;\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      hasMeasured = _React$useState3[0],\n      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes\n\n\n  useSafeLayoutEffect(function () {\n    if (isUndefined(selectedIndex)) return undefined;\n    var tab = descendants.item(selectedIndex);\n    if (isUndefined(tab)) return undefined; // Horizontal Tab: Calculate width and left distance\n\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    } // Vertical Tab: Calculate height and top distance\n\n\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    } // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n\n\n    var id = requestAnimationFrame(function () {\n      setHasMeasured(true);\n    });\n    return function () {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return _extends({\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n  }, rect);\n}\n\nfunction makeTabId(id, index) {\n  return id + \"--tab-\" + index;\n}\n\nfunction makeTabPanelId(id, index) {\n  return id + \"--tabpanel-\" + index;\n}\n\nvar _excluded = [\"children\", \"className\"],\n    _excluded2 = [\"htmlProps\", \"descendants\"];\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n */\nvar Tabs = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useTabs = useTabs(rest),\n      htmlProps = _useTabs.htmlProps,\n      descendants = _useTabs.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children))));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref: ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nvar TabList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    outline: \"0\"\n  }, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nvar TabPanels = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelsProps = useTabPanels(props);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nvar TabIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n\nexport { Tab, TabIndicator, TabList, TabPanel, TabPanels, Tabs, TabsDescendantsProvider, TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs, useTabsContext, useTabsDescendant, useTabsDescendants, useTabsDescendantsContext };\n"],"names":["View","_formik$values","_formik$errors","_formik$touched","_formik$values2","_formik$errors2","_formik$touched2","_formik$values3","_formik$errors3","_formik$touched3","_formik$values4","_formik$errors4","_formik$touched4","_formik$values5","_formik$errors5","_formik$touched5","params","useParams","navigate","useNavigate","id","user","JSON","parse","localStorage","getItem","bankDataDetails","setBankDetails","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","action","setAction","editableField","setEditableField","selectedTab","setSelectedTab","permission","HasAccess","useEffect","async","result","getApi","data","fetchViewData","handleDoubleClick","fieldName","value","formik","setFieldValue","initialValues","accountName","accountNumber","bank","branch","swiftCode","validationSchema","yup","required","useFormik","enableReinitialize","onSubmit","AddData","values","response","putApi","_response$response","_response$response$da","status","pre","toast","error","message","e","console","log","handleBlur","handleSubmit","_jsxs","_Fragment","children","_jsx","Flex","justifyContent","alignItems","width","Spinner","Heading","size","mt","m","Tabs","onChange","index","style","background","borderRadius","padding","Grid","templateColumns","mb","gap","GridItem","colSpan","base","TabList","sx","border","boxShadow","margin","sm","md","borderTopLeftRadius","borderTopRightRadius","borderBottom","fontSize","zIndex","Box","display","Menu","role","create","update","delete","MenuButton","variant","colorScheme","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","color","onClick","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","height","html2pdf","from","set","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","HSeparator","Text","fontWeight","Input","name","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Card","colStart","Add","Edit","selectedId","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$1","_excluded2$1","_excluded3","_createDescendantCont","createDescendantContext","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","_createContext","createContext","errorMessage","TabsProvider","useTabsContext","makeTabId","makeTabPanelId","_excluded","_excluded2","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","_useTabs","defaultIndex","isManual","isLazy","_props$lazyBehavior","lazyBehavior","_props$orientation","_props$direction","direction","htmlProps","_React$useState","React","focusedIndex","setFocusedIndex","_useControllableState","useControllableState","defaultValue","selectedIndex","setSelectedIndex","descendants","useId","useTabs","ctx","context","rootProps","omit","StylesProvider","chakra","div","cx","__css","root","__DEV__","displayName","Tab","useStyles","tabProps","isDisabled","isFocusable","_useTabsContext2","_useTabsDescendant","disabled","register","isSelected","clickableProps","useClickable","mergeRefs","callAllHandlers","tabIndex","onFocus","undefined","useTab","tabStyles","outline","tab","button","tablistProps","_useTabsContext","onKeyDown","event","_keyMap","nextTab","next","nextEnabled","focus","node","prevTab","prev","prevEnabled","isHorizontal","isVertical","eventKey","normalizeEventKey","ArrowEnd","ArrowDown","ArrowUp","Home","first","firstEnabled","End","last","lastEnabled","preventDefault","useTabList","tablistStyles","tablist","TabPanel","panelProps","_useTabsContext3","hasBeenSelected","current","determineLazyBehavior","hidden","useTabPanel","tabpanel","TabPanels","panelsProps","getValidChildren","map","child","useTabPanels","tabpanels","TabIndicator","indicatorStyle","_React$useState2","left","top","rect","setRect","_React$useState3","hasMeasured","setHasMeasured","useSafeLayoutEffect","isUndefined","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction","useTabIndicator","indicator"],"sourceRoot":""}