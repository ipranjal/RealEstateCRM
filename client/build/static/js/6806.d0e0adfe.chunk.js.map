{"version":3,"file":"static/js/6806.d0e0adfe.chunk.js","mappings":"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","sources":["views/admin/task/components/taskView.js"],"sourcesContent":["import {\n  Button,\n  Grid,\n  GridItem,\n  Flex,\n  IconButton,\n  Text,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  Box,\n  Heading,\n  Input,\n} from \"@chakra-ui/react\";\nimport {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BiLink } from \"react-icons/bi\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getApi } from \"services/api\";\nimport Card from \"components/card/Card\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from \"../../../../redux/accessUtils\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport AddEdit from \"./AddEdit\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteManyApi } from \"services/api\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { TaskSchema } from \"schema\";\nimport { useFormik } from \"formik\";\nimport { putApi } from \"services/api\";\nimport dayjs from \"dayjs\";\n\nconst TaskView = (props) => {\n  const params = useParams();\n  const { id } = params;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const [permission, contactAccess, leadAccess] = HasAccess([\n    \"Tasks\",\n    \"Contacts\",\n    \"Leads\",\n  ]);\n\n  const [data, setData] = useState();\n  const { onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [deleteManyModel, setDeleteManyModel] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const [editableField, setEditableField] = useState(null);\n  const today = new Date()?.toISOString()?.split(\"T\")[0];\n  const todayTime = new Date()?.toISOString()?.split(\".\")[0];\n  const fetchViewData = async () => {\n    if (id) {\n      let result = await getApi(\n        \"api/task/view/\",\n        id?.event ? id?.event?._def?.extendedProps?._id : id,\n      );\n      setData(result?.data);\n    }\n  };\n  const generatePDF = () => {\n    setLoading(true);\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n\n    if (element) {\n      hideBtn.style.display = \"none\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `Task_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          setLoading(false);\n          hideBtn.style.display = \"\";\n        });\n      // }, 500);\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n      setLoading(false);\n    }\n  };\n  const handleDeleteTask = async (ids) => {\n    try {\n      let response = await deleteManyApi(\"api/task/deleteMany\", ids);\n      if (response?.status === 200) {\n        navigate(\"/task\");\n        setDeleteManyModel(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const initialValues = {\n    title: data?.title,\n    description: data?.description,\n    notes: data?.notes,\n    start: data?.start,\n    end: data?.end,\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: TaskSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, { resetForm }) => {\n      let response = await putApi(`api/task/edit/${id}`, values);\n      if (response?.status === 200) {\n        setEditableField(null);\n        fetchViewData();\n      }\n    },\n  });\n  const handleDoubleClick = (fieldName, value) => {\n    formik.setFieldValue(fieldName, value);\n    setEditableField(fieldName);\n  };\n\n  const handleBlur = (e) => {\n    formik.handleSubmit();\n  };\n  useEffect(() => {\n    fetchViewData();\n  }, [id, edit]);\n\n  const handleClick = () => {\n    onOpen();\n  };\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n        <GridItem colSpan={{ base: 4 }}>\n          <Heading size=\"lg\" m={3}>\n            {data?.title || \"\"}\n          </Heading>\n        </GridItem>\n        <GridItem colSpan={{ base: 4 }}>\n          <Card>\n            <Grid gap={4}>\n              <GridItem colSpan={2}>\n                <Box>\n                  <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Heading size=\"md\" mb={3}>\n                      Task Details\n                    </Heading>\n                    <Flex id=\"hide-btn\">\n                      <Menu>\n                        {(user?.role === \"superAdmin\" ||\n                          permission?.create ||\n                          permission?.update ||\n                          permission?.delete) && (\n                          <MenuButton\n                            variant=\"outline\"\n                            colorScheme=\"blackAlpha\"\n                            size=\"sm\"\n                            va\n                            mr={2.5}\n                            as={Button}\n                            rightIcon={<ChevronDownIcon />}\n                          >\n                            Actions\n                          </MenuButton>\n                        )}\n                        <MenuDivider />\n                        <MenuList minWidth={2}>\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.create) && (\n                            <MenuItem\n                              onClick={() => handleClick()}\n                              alignItems={\"start\"}\n                              color={\"blue\"}\n                              icon={<AddIcon />}\n                            >\n                              Add\n                            </MenuItem>\n                          )}\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.update) && (\n                            <MenuItem\n                              onClick={() => setEdit(true)}\n                              alignItems={\"start\"}\n                              icon={<EditIcon />}\n                            >\n                              Edit\n                            </MenuItem>\n                          )}\n                          <MenuItem\n                            onClick={generatePDF}\n                            alignItems={\"start\"}\n                            icon={<FaFilePdf />}\n                            display={\"flex\"}\n                            style={{ alignItems: \"center\" }}\n                          >\n                            Print as PDF\n                          </MenuItem>\n\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.delete) && (\n                            <>\n                              <MenuDivider />\n                              <MenuItem\n                                alignItems={\"start\"}\n                                onClick={() => setDeleteManyModel(true)}\n                                color={\"red\"}\n                                icon={<DeleteIcon />}\n                              >\n                                Delete\n                              </MenuItem>\n                            </>\n                          )}\n                        </MenuList>\n                      </Menu>\n                      <Button\n                        leftIcon={<IoIosArrowBack />}\n                        size=\"sm\"\n                        variant=\"brand\"\n                        onClick={() => navigate(-1)}\n                      >\n                        Back\n                      </Button>\n                    </Flex>\n                  </Box>\n                  <HSeparator />\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task Title{\" \"}\n                </Text>\n                {editableField === \"title\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"title\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.title}\n                      borderColor={\n                        formik?.errors?.title && formik?.touched?.title\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors.title &&\n                        formik?.touched.title &&\n                        formik?.errors.title}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"title\", data?.title)\n                    }\n                  >\n                    {data?.title ? data?.title : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task Related To{\" \"}\n                </Text>\n                <Text>{data?.category ? data?.category : \" - \"}</Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task start{\" \"}\n                </Text>\n                {editableField === \"start\" ? (\n                  <>\n                    <Input\n                      name=\"start\"\n                      type={data?.allDay ? \"date\" : \"datetime-local\"}\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={\n                        data?.allDay === true\n                          ? moment(formik?.values?.start).format(\"YYYY-MM-DD\")\n                          : moment(formik?.values?.start).format(\n                              \"YYYY-MM-DD HH:mm A\",\n                            )\n                      }\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.start && formik?.touched?.start\n                          ? \"red.300\"\n                          : null\n                      }\n                      min={\n                        data?.allDay\n                          ? dayjs(today)?.format(\"YYYY-MM-DD\")\n                          : dayjs(todayTime)?.format(\"YYYY-MM-DD HH:mm\")\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.start &&\n                        formik?.touched?.start &&\n                        formik?.errors?.start}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"start\", data?.start)\n                    }\n                  >\n                    {data && data?.start\n                      ? data?.allDay === true\n                        ? moment(data?.start)?.format(\"DD-MM-YYYY\")\n                        : moment(data?.start)?.format(\"DD-MM-YYYY HH:mm A\")\n                      : \"-\"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task end{\" \"}\n                </Text>\n                {editableField === \"end\" ? (\n                  <>\n                    <Input\n                      name=\"end\"\n                      type={data?.allDay ? \"date\" : \"datetime-local\"}\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      min={formik?.values?.start}\n                      value={\n                        data?.allDay === true\n                          ? moment(formik?.values?.end)?.format(\"YYYY-MM-DD\")\n                          : moment(formik?.values?.end)?.format(\n                              \"YYYY-MM-DD HH:mm A\",\n                            )\n                      }\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.end && formik?.touched?.end\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.end &&\n                        formik?.touched?.end &&\n                        formik?.errors?.end}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() => handleDoubleClick(\"end\", data?.end)}\n                  >\n                    {data?.allDay === true\n                      ? moment(data?.end).format(\"DD-MM-YYYY\")\n                      : moment(data?.end).format(\"DD-MM-YYYY HH:mm A\")}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task Link{\" \"}\n                </Text>\n                {data?.url ? (\n                  <a target=\"_blank\" href={data?.url}>\n                    <IconButton\n                      borderRadius=\"10px\"\n                      size=\"md\"\n                      icon={<BiLink />}\n                    />\n                  </a>\n                ) : (\n                  \"-\"\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task reminder{\" \"}\n                </Text>\n                <Text>{data?.reminder ? data?.reminder : \" - \"}</Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Assign To{\" \"}\n                </Text>\n                <Link\n                  to={\n                    data?.assignTo\n                      ? contactAccess?.view && `/contactView/${data?.assignTo}`\n                      : leadAccess?.view && `/leadView/${data?.assignToLead}`\n                  }\n                >\n                  <Text\n                    color={\n                      data?.category === \"contact\" &&\n                      (contactAccess?.view || user?.role === \"superAdmin\")\n                        ? \"brand.600\"\n                        : leadAccess?.view ||\n                            (user?.role === \"superAdmin\" &&\n                              data?.category === \"lead\")\n                          ? \"brand.600\"\n                          : \"blackAlpha.900\"\n                    }\n                    sx={{\n                      \"&:hover\": {\n                        color: \"blue.500\",\n                        textDecoration: \"underline\",\n                      },\n                    }}\n                  >\n                    {data?.assignToName ? data?.assignToName : \" - \"}\n                  </Text>\n                </Link>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task createBy{\" \"}\n                </Text>\n                <Text>{data?.createByName ? data?.createByName : \" - \"}</Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 2 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task Description\n                </Text>\n                {editableField === \"description\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"description\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.description}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.description &&\n                        formik?.touched?.description\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.description &&\n                        formik?.touched?.description &&\n                        formik?.errors?.description}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"description\", data?.description)\n                    }\n                  >\n                    {data?.description ? data?.description : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Task notes{\" \"}\n                </Text>\n                {editableField === \"notes\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"notes\"\n                      type=\"text\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.notes}\n                      autoFocus\n                      borderColor={\n                        formik?.errors?.notes && formik?.touched?.notes\n                          ? \"red.300\"\n                          : null\n                      }\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.notes &&\n                        formik?.touched?.notes &&\n                        formik?.errors?.notes}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"notes\", data?.notes)\n                    }\n                  >\n                    {data?.notes ? data?.notes : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n            </Grid>\n          </Card>\n        </GridItem>\n      </Grid>\n      {(permission?.update ||\n        permission?.delete ||\n        user?.role === \"superAdmin\") && (\n        <Card mt={3}>\n          <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n            <GridItem colStart={6}>\n              <Flex justifyContent={\"right\"}>\n                {(permission?.update || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    onClick={() => setEdit(true)}\n                    leftIcon={<EditIcon />}\n                    mr={2.5}\n                    variant=\"outline\"\n                    colorScheme=\"green\"\n                  >\n                    Edit\n                  </Button>\n                )}\n                {(permission?.delete || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    style={{ background: \"red.800\" }}\n                    onClick={() => setDeleteManyModel(true)}\n                    leftIcon={<DeleteIcon />}\n                    colorScheme=\"red\"\n                  >\n                    Delete\n                  </Button>\n                )}\n              </Flex>\n            </GridItem>\n          </Grid>\n        </Card>\n      )}\n      <AddEdit\n        isOpen={edit}\n        onClose={() => setEdit(false)}\n        viewClose={onClose}\n        id={id?.event ? id?.event?._def?.extendedProps?._id : id}\n        userAction={\"edit\"}\n      />\n      <CommonDeleteModel\n        isOpen={deleteManyModel}\n        onClose={() => setDeleteManyModel(false)}\n        type=\"Task\"\n        handleDeleteData={handleDeleteTask}\n        ids={[id]}\n      />\n    </div>\n  );\n};\n\nexport default TaskView;\n"],"names":["props","_Date","_Date$toISOString","_Date2","_Date2$toISOString","_formik$values","_formik$errors","_formik$touched","_formik$values2","_formik$values3","_formik$errors2","_formik$touched2","_dayjs","_dayjs2","_formik$errors3","_formik$touched3","_formik$errors4","_moment","_moment2","_formik$values4","_moment3","_formik$values5","_moment4","_formik$values6","_formik$errors5","_formik$touched4","_formik$errors6","_formik$touched5","_formik$errors7","_formik$values7","_formik$errors8","_formik$touched6","_formik$errors9","_formik$touched7","_formik$errors10","_formik$values8","_formik$errors11","_formik$touched8","_formik$errors12","_formik$touched9","_formik$errors13","_id$event2","_id$event2$_def","_id$event2$_def$exten","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","editableField","setEditableField","today","Date","toISOString","split","todayTime","fetchViewData","async","_id$event","_id$event$_def","_id$event$_def$extend","result","getApi","event","_def","extendedProps","_id","initialValues","title","description","notes","start","end","formik","useFormik","validationSchema","TaskSchema","enableReinitialize","onSubmit","values","_ref","resetForm","response","putApi","status","handleDoubleClick","fieldName","value","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","error","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","name","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","category","allDay","min","dayjs","url","target","href","IconButton","borderRadius","BiLink","reminder","Link","to","assignTo","view","assignToLead","sx","textDecoration","assignToName","createByName","mt","colStart","background","AddEdit","isOpen","viewClose","userAction","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log"],"sourceRoot":""}