{"version":3,"file":"static/js/2107.2bab4a16.chunk.js","mappings":"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","sources":["views/admin/property/components/ImportModal.js","views/admin/property/index.js","views/admin/property/Edit.js","components/commonFileUpload/index.js","views/admin/property/Add.js"],"sourcesContent":["import {\n  Button,\n  Grid,\n  GridItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonFileUpload from \"components/commonFileUpload\";\n\nconst ImportModal = (props) => {\n  const { onClose, isOpen, fetchData, text, customFields } = props;\n  const [isLoding, setIsLoding] = useState(false);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    property: \"\",\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values, { resetForm }) => {\n      AddData();\n      resetForm();\n    },\n  });\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      resetForm();\n\n      if (values?.property) {\n        onClose();\n        navigate(\"/propertyImport\", {\n          state: { fileData: values?.property, customFields: customFields },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Import Properties</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n            <GridItem colSpan={{ base: 12 }}>\n              <CommonFileUpload\n                count={values?.property?.length}\n                onFileSelect={(file) => setFieldValue(\"property\", file)}\n                text={text}\n              />\n              <Text mb=\"10px\" color={\"red\"}>\n                {\" \"}\n                {errors?.property && touched?.property && (\n                  <>Please Select {text}</>\n                )}\n              </Text>\n            </GridItem>\n          </Grid>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"sm\"\n            variant=\"brand\"\n            onClick={handleSubmit}\n            disabled={isLoding ? true : false}\n          >\n            {isLoding ? <Spinner /> : \"Save\"}\n          </Button>\n          <Button\n            sx={{\n              marginLeft: 2,\n              textTransform: \"capitalize\",\n            }}\n            variant=\"outline\"\n            colorScheme=\"red\"\n            size=\"sm\"\n            onClick={() => {\n              onClose();\n              formik.resetForm();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ImportModal;\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport {\n  Grid,\n  GridItem,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, ViewIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { CiMenuKebab } from \"react-icons/ci\";\nimport { getApi } from \"services/api\";\nimport CommonCheckTable from \"../../../components/reactTable/checktable\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport ImportModal from \"./components/ImportModal\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteManyApi } from \"services/api\";\nimport { fetchPropertyCustomFiled } from \"../../../redux/slices/propertyCustomFiledSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPropertyData } from \"../../../redux/slices/propertySlice\";\nimport { toast } from \"react-toastify\";\n\nconst Index = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [permission] = HasAccess([\"Properties\"]);\n  const [isLoding, setIsLoding] = useState(false);\n  // const [data, setData] = useState([]);\n  const [tableColumns, setTableColumns] = useState([]);\n  const [columns, setColumns] = useState([]);\n  // const [dataColumn, setDataColumn] = useState([]);\n  // const [selectedColumns, setSelectedColumns] = useState([]);\n  const [action, setAction] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [propertyData, setPropertyData] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [selectedId, setSelectedId] = useState();\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isImportProperty, setIsImportProperty] = useState(false);\n\n  const data = useSelector((state) => state?.propertyData?.data);\n\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    if (result?.payload?.status === 200) {\n      setPropertyData(result?.payload?.data);\n    } else {\n      toast.error(\"Failed to fetch data\", \"error\");\n    }\n    const actionHeader = {\n      Header: \"Action\",\n      accessor: \"action\",\n      isSortable: false,\n      center: true,\n      cell: ({ row }) => (\n        <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n          <Menu isLazy>\n            <MenuButton>\n              <CiMenuKebab />\n            </MenuButton>\n            <MenuList\n              minW={\"fit-content\"}\n              transform={\"translate(1520px, 173px);\"}\n            >\n              {permission?.update && (\n                <MenuItem\n                  py={2.5}\n                  icon={<EditIcon fontSize={15} mb={1} />}\n                  onClick={() => {\n                    setEdit(true);\n                    setSelectedId(row?.values?._id);\n                  }}\n                >\n                  Edit\n                </MenuItem>\n              )}\n              {permission?.view && (\n                <MenuItem\n                  py={2.5}\n                  color={\"green\"}\n                  icon={<ViewIcon mb={1} fontSize={15} />}\n                  onClick={() => {\n                    navigate(`/propertyView/${row?.values?._id}`);\n                  }}\n                >\n                  View\n                </MenuItem>\n              )}\n              {permission?.delete && (\n                <MenuItem\n                  py={2.5}\n                  color={\"red\"}\n                  icon={<DeleteIcon fontSize={15} mb={1} />}\n                  onClick={() => {\n                    setDelete(true);\n                    setSelectedValues([row?.values?._id]);\n                    setSelectedId(row?.values?._id);\n                  }}\n                >\n                  Delete\n                </MenuItem>\n              )}\n            </MenuList>\n          </Menu>\n        </Text>\n      ),\n    };\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...(result?.payload?.data && result.payload.data.length > 0\n        ? result?.payload?.data[0]?.fields\n            ?.filter((field) => field?.isTableField === true && field?.isView)\n            ?.map((field) => ({\n              Header: field?.label,\n              accessor: field?.name,\n              cell: (cell) => (\n                <div className=\"selectOpt\">\n                  <Text\n                    onClick={() => {\n                      navigate(`/propertyView/${cell?.row?.original?._id}`);\n                    }}\n                    me=\"10px\"\n                    sx={{\n                      \"&:hover\": {\n                        color: \"blue.500\",\n                        textDecoration: \"underline\",\n                      },\n                      cursor: \"pointer\",\n                    }}\n                    color=\"brand.600\"\n                    fontSize=\"sm\"\n                    fontWeight=\"700\"\n                  >\n                    {cell?.value || \"-\"}\n                  </Text>\n                </div>\n              ),\n            })) || []\n        : []),\n      ...(result?.payload?.data?.[0]?.fields || []) // Ensure result.payload[0].fields is an array\n        .filter((field) => field?.isTableField === true && !field?.isView) // Filter out fields where isTableField is true\n        .map((field) => ({ Header: field?.label, accessor: field?.name })),\n      ...(permission?.update || permission?.view || permission?.delete\n        ? [actionHeader]\n        : []),\n    ];\n\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n\n  const handleDeleteProperties = async (ids) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteManyApi(\"api/property/deleteMany\", ids);\n      if (response?.status === 200) {\n        setSelectedValues([]);\n        setDelete(false);\n        setAction((pre) => !pre);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchPropertyData());\n    fetchCustomDataFields();\n  }, [action]);\n\n  // useEffect(() => {\n  //     setDataColumn(tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header)));\n  // }, [tableColumns, selectedColumns])\n\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={4}>\n        {!isLoding && (\n          <GridItem colSpan={6}>\n            <CommonCheckTable\n              title={\"Properties\"}\n              isLoding={isLoding}\n              columnData={columns ?? []}\n              // dataColumn={dataColumn ?? []}\n              allData={data ?? []}\n              tableData={data}\n              tableCustomFields={\n                propertyData?.[0]?.fields?.filter(\n                  (field) => field?.isTableField === true,\n                ) || []\n              }\n              access={permission}\n              // action={action}\n              // setAction={setAction}\n              // selectedColumns={selectedColumns}\n              // setSelectedColumns={setSelectedColumns}\n              // isOpen={isOpen}\n              // onClose={onclose}\n              onOpen={onOpen}\n              selectedValues={selectedValues}\n              setSelectedValues={setSelectedValues}\n              setDelete={setDelete}\n              setIsImport={setIsImportProperty}\n            />\n          </GridItem>\n        )}\n      </Grid>\n      {isOpen && (\n        <Add\n          propertyData={propertyData[0]}\n          isOpen={isOpen}\n          size={\"lg\"}\n          onClose={onClose}\n          setAction={setAction}\n        />\n      )}\n      {edit && (\n        <Edit\n          isOpen={edit}\n          size={\"lg\"}\n          propertyData={propertyData[0]}\n          selectedId={selectedId}\n          setSelectedId={setSelectedId}\n          onClose={setEdit}\n          setAction={setAction}\n        />\n      )}\n      {deleteModel && (\n        <CommonDeleteModel\n          isOpen={deleteModel}\n          onClose={() => setDelete(false)}\n          type=\"Properties\"\n          handleDeleteData={handleDeleteProperties}\n          ids={selectedValues}\n        />\n      )}\n      {isImportProperty && (\n        <ImportModal\n          text=\"Property file\"\n          isOpen={isImportProperty}\n          onClose={setIsImportProperty}\n          customFields={propertyData?.[0]?.fields || []}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Index;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Flex,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getApi, putApi } from \"services/api\";\nimport { generateValidationSchema } from \"utils\";\nimport CustomForm from \"utils/customForm\";\nimport * as yup from \"yup\";\n\nconst Edit = (props) => {\n  const { data } = props;\n  const initialFieldValues = Object?.fromEntries(\n    (props?.leadData?.fields || [])?.map((field) => [field?.name, \"\"]),\n  );\n  const [initialValues, setInitialValues] = useState({\n    ...initialFieldValues,\n    createBy: JSON.parse(localStorage.getItem(\"user\"))?._id,\n  });\n\n  const param = useParams();\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: yup\n      .object()\n      ?.shape(generateValidationSchema(props?.propertyData?.fields)),\n    enableReinitialize: true,\n    onSubmit: (values, { resetForm }) => {\n      EditData();\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  } = formik;\n\n  const [isLoding, setIsLoding] = useState(false);\n\n  const EditData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await putApi(\n        `api/property/edit/${props?.selectedId || param?.id}`,\n        values,\n      );\n      if (response?.status === 200) {\n        props.onClose();\n        props.setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  const handleClose = () => {\n    props.onClose(false);\n    props.setSelectedId && props?.setSelectedId();\n  };\n\n  let response;\n\n  const fetchData = async () => {\n    if (data) {\n      setInitialValues((prev) => ({ ...prev, ...data }));\n    } else if (props?.selectedId) {\n      try {\n        setIsLoding(true);\n        response = await getApi(\"api/property/view/\", props?.selectedId);\n        setInitialValues((prev) => ({ ...prev, ...response?.data?.property }));\n      } catch (e) {\n        console.error(e);\n      } finally {\n        setIsLoding(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [props?.selectedId, data]);\n\n  return (\n    <div>\n      <Drawer isOpen={props?.isOpen} size={props?.size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            display=\"flex\"\n          >\n            Edit {values?.name || \"Property\"}\n            <IconButton onClick={handleClose} icon={<CloseIcon />} />\n          </DrawerHeader>\n          <DrawerBody>\n            {isLoding ? (\n              <Flex\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                width=\"100%\"\n              >\n                <Spinner />\n              </Flex>\n            ) : (\n              <CustomForm\n                moduleData={props?.propertyData}\n                values={values}\n                setFieldValue={setFieldValue}\n                handleChange={handleChange}\n                handleBlur={handleBlur}\n                errors={errors}\n                touched={touched}\n              />\n            )}\n          </DrawerBody>\n          <DrawerFooter>\n            <Button\n              size=\"sm\"\n              sx={{ textTransform: \"capitalize\" }}\n              variant=\"brand\"\n              disabled={isLoding ? true : false}\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              {isLoding ? <Spinner /> : \"Update\"}\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              colorScheme=\"red\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              onClick={() => {\n                props?.onClose(false);\n              }}\n            >\n              Close\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Edit;\n","// Chakra imports\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Icon,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function CommonFileUpload(props) {\n  // const { used, total, count, ...rest } = props;\n  const { count, text, onFileSelect } = props;\n  // Chakra Color Mode\n  const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  return (\n    <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n      <GridItem colSpan={{ base: 12 }}>\n        <Dropzone\n          w={{ base: \"100%\" }}\n          me=\"36px\"\n          minH={200}\n          img={text === \"Property Photos\" ? \"img\" : \"\"}\n          csv={\"csv\"}\n          height={\"100%\"}\n          onFileSelect={onFileSelect}\n          isMultipleAllow={false}\n          content={\n            <Box>\n              <Icon as={MdUpload} w=\"80px\" h=\"80px\" color={brandColor} />\n              <Flex justify=\"center\" mx=\"auto\" mb=\"12px\">\n                <Text fontSize=\"xl\" fontWeight=\"700\" color={brandColor}>\n                  Upload File\n                </Text>\n              </Flex>\n              {count > 0 && (\n                <Text fontSize=\"sm\" fontWeight=\"500\" color=\"secondaryGray.500\">\n                  Selected Files : {count}\n                </Text>\n              )}\n            </Box>\n          }\n        />\n      </GridItem>\n      <GridItem colSpan={{ base: 12 }}>\n        <Flex direction=\"column\">\n          <Text\n            color={textColorPrimary}\n            fontWeight=\"bold\"\n            textAlign=\"start\"\n            fontSize=\"2xl\"\n            mt={{ base: \"20px\" }}\n          >\n            Upload {text}\n          </Text>\n          <Text\n            color={textColorSecondary}\n            fontSize=\"md\"\n            my={{ base: \"auto\" }}\n            mx=\"auto\"\n            textAlign=\"start\"\n          >\n            Accepted File Type (csv, xlsx file - 15MB max) only 1 file\n          </Text>\n        </Flex>\n      </GridItem>\n    </Grid>\n  );\n}\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { postApi } from \"services/api\";\nimport { generateValidationSchema } from \"utils\";\nimport CustomForm from \"utils/customForm\";\nimport * as yup from \"yup\";\n\nconst Add = (props) => {\n  const [isLoding, setIsLoding] = useState(false);\n\n  const initialFieldValues = Object?.fromEntries(\n    (props?.propertyData?.fields || [])?.map((field) => [field?.name, \"\"]),\n  );\n\n  const initialValues = {\n    ...initialFieldValues,\n    createBy: JSON.parse(localStorage.getItem(\"user\"))._id,\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    enableReinitialize: true,\n    validationSchema: yup\n      .object()\n      ?.shape(generateValidationSchema(props?.propertyData?.fields)),\n\n    onSubmit: (values, { resetForm }) => {\n      AddData();\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await postApi(\"api/form/add\", {\n        ...values,\n        moduleId: props?.propertyData?._id,\n      });\n      if (response?.status === 200) {\n        props.onClose();\n        formik.resetForm();\n        props.setAction((pre) => !pre);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <div>\n      <Drawer isOpen={props?.isOpen} size={props?.size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            display=\"flex\"\n          >\n            Add Property\n            <IconButton onClick={props?.onClose} icon={<CloseIcon />} />\n          </DrawerHeader>\n          <DrawerBody>\n            <CustomForm\n              moduleData={props?.propertyData}\n              values={values}\n              setFieldValue={setFieldValue}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              errors={errors}\n              touched={touched}\n            />\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button\n              size=\"sm\"\n              sx={{ textTransform: \"capitalize\" }}\n              disabled={isLoding ? true : false}\n              variant=\"brand\"\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              {isLoding ? <Spinner /> : \"Save\"}\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              colorScheme=\"red\"\n              sx={{\n                marginLeft: 2,\n                textTransform: \"capitalize\",\n              }}\n              onClick={props?.onClose}\n            >\n              Close\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Add;\n"],"names":["props","_values$property","onClose","isOpen","fetchData","text","customFields","isLoding","setIsLoding","useState","navigate","useNavigate","formik","useFormik","initialValues","property","onSubmit","values","_ref","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","state","fileData","e","console","log","_jsxs","Modal","isCentered","children","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Grid","templateColumns","gap","GridItem","colSpan","base","CommonFileUpload","count","length","onFileSelect","file","Text","mb","color","_Fragment","ModalFooter","Button","size","variant","onClick","disabled","Spinner","sx","marginLeft","textTransform","colorScheme","Index","_propertyData$","_propertyData$$fields","_propertyData$2","JSON","parse","localStorage","getItem","dispatch","useDispatch","permission","HasAccess","tableColumns","setTableColumns","columns","setColumns","action","setAction","onOpen","useDisclosure","propertyData","setPropertyData","edit","setEdit","deleteModel","setDelete","selectedId","setSelectedId","selectedValues","setSelectedValues","isImportProperty","setIsImportProperty","data","useSelector","_state$propertyData","useEffect","fetchPropertyData","_result$payload","_result$payload3","_result$payload4","_result$payload4$data","_result$payload4$data2","_result$payload4$data3","_result$payload5","_result$payload5$data","_result$payload5$data2","result","fetchPropertyCustomFiled","_result$payload2","payload","status","toast","error","actionHeader","Header","accessor","isSortable","center","cell","row","fontSize","fontWeight","textAlign","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","delete","DeleteIcon","_row$values3","_row$values4","tempTableColumns","width","fields","filter","field","isTableField","isView","map","label","name","className","_cell$row","_cell$row$original","original","me","textDecoration","cursor","value","fetchCustomDataFields","CommonCheckTable","title","columnData","allData","tableData","tableCustomFields","access","setIsImport","Add","Edit","CommonDeleteModel","type","handleDeleteData","response","deleteManyApi","ids","pre","ImportModal","_props$leadData","_JSON$parse","_yup$object","_props$propertyData","initialFieldValues","Object","fromEntries","leadData","setInitialValues","createBy","param","useParams","validationSchema","yup","shape","generateValidationSchema","enableReinitialize","_ref2","EditData","putApi","id","prev","getApi","_response","_response$data","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","alignItems","justifyContent","display","IconButton","handleClose","CloseIcon","DrawerBody","Flex","CustomForm","moduleData","DrawerFooter","textColorPrimary","useColorModeValue","brandColor","Dropzone","w","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","justify","mx","direction","mt","my","_props$propertyData2","_props$propertyData3","postApi","moduleId"],"sourceRoot":""}