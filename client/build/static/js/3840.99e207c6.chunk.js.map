{"version":3,"file":"static/js/3840.99e207c6.chunk.js","mappings":"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","sources":["schema/opprtunitiesSchema.js","views/admin/account/View.js"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const opprtunitiesSchema = yup.object({\n  opportunityName: yup.string().required(\"Opportunity Name Is required\"),\n  type: yup.string(),\n  leadSource: yup.string(),\n  currency: yup.string(),\n  opportunityAmount: yup.string().required(\"Opportunity Amount Is required\"),\n  amount: yup.string(),\n  expectedCloseDate: yup.string().required(\"Expected Close Date Is required\"),\n  nextStep: yup.string(),\n  salesStage: yup.string().required(\"Sales Stage Is required\"),\n  probability: yup.string(),\n  description: yup.string(),\n  createBy: yup.string(),\n});\n","import {\n  Button,\n  Grid,\n  GridItem,\n  Flex,\n  IconButton,\n  Text,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  Box,\n  Heading,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\nimport {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BiLink } from \"react-icons/bi\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Card from \"components/card/Card\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport AddEdit from \"./AddEdit\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteManyApi, putApi, getApi } from \"../../../services/api\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { opprtunitiesSchema } from \"../../../schema/opprtunitiesSchema\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { toast } from \"react-toastify\";\nimport { accountSchema } from \"../../../schema/accountSchema\";\n\nconst View = (props) => {\n  const params = useParams();\n  const { id } = params;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const [permission, contactAccess, leadAccess] = HasAccess([\n    \"Account\",\n    \"Contacts\",\n    \"Leads\",\n  ]);\n\n  const [data, setData] = useState();\n  const { onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [deleteManyModel, setDeleteManyModel] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const [type, setType] = useState(\"\");\n  const [editableField, setEditableField] = useState(null);\n  const [editableFieldName, setEditableFieldName] = useState(null);\n  const today = new Date().toISOString().split(\"T\")[0];\n  const todayTime = new Date().toISOString().split(\".\")[0];\n\n  const fetchViewData = async () => {\n    if (id) {\n      let result = await getApi(\"api/account/view/\", id);\n      setData(result?.data);\n    }\n  };\n  const generatePDF = () => {\n    setLoading(true);\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n\n    if (element) {\n      hideBtn.style.display = \"none\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `Account_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          setLoading(false);\n          hideBtn.style.display = \"\";\n        });\n      // }, 500);\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n      setLoading(false);\n    }\n  };\n  const handleDeleteAccount = async (ids) => {\n    try {\n      let response = await deleteManyApi(\"api/account/deleteMany\", ids);\n      if (response?.status === 200) {\n        navigate(\"/account\");\n        toast.success(`Account Delete successfully`);\n        setDeleteManyModel(false);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(`server error`);\n    }\n  };\n\n  const initialValues = {\n    name: data?.name,\n    officePhone: data?.officePhone,\n    alternatePhone: data?.alternatePhone,\n    assignUser: data?.assignUser,\n    website: data?.website,\n    fax: data?.fax,\n    ownership: data?.ownership,\n    emailAddress: data?.emailAddress,\n    nonPrimaryEmail: data?.nonPrimaryEmail,\n    billingStreet: data?.billingStreet,\n    billingStreet2: data?.billingStreet2,\n    billingStreet3: data?.billingStreet3,\n    billingStreet4: data?.billingStreet4,\n    billingPostalcode: data?.billingPostalcode,\n    billingCity: data?.billingCity,\n    billingState: data?.billingState,\n    billingCountry: data?.billingCountry,\n    shippingStreet: data?.shippingStreet,\n    shippingStreet2: data?.shippingStreet2,\n    shippingStreet3: data?.shippingStreet3,\n    shippingStreet4: data?.shippingStreet4,\n    shippingPostalcode: data?.shippingPostalcode,\n    shippingCity: data?.shippingCity,\n    shippingState: data?.shippingState,\n    shippingCountry: data?.shippingCountry,\n    description: data?.description,\n    type: data?.type,\n    industry: data?.industry,\n    annualRevenue: data?.annualRevenue,\n    rating: data?.rating,\n    SICCode: data?.SICCode,\n    memberOf: data?.memberOf,\n    modifiedBy: JSON.parse(localStorage.getItem(\"user\"))._id,\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: accountSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, { resetForm }) => {\n      const payload = {\n        ...values,\n        modifiedDate: new Date(),\n      };\n      let response = await putApi(`api/account/edit/${id}`, payload);\n      setEditableField(null);\n      if (response?.status === 200) {\n        fetchViewData();\n        toast.success(`${editableFieldName} Update successfully`);\n      } else {\n        toast.error(`${editableFieldName} not Update`);\n      }\n    },\n  });\n  const handleDoubleClick = (fieldName, value, name) => {\n    formik.setFieldValue(fieldName, value);\n    setEditableField(fieldName);\n    setEditableFieldName(name);\n  };\n\n  const handleBlur = (e) => {\n    formik.handleSubmit();\n  };\n  useEffect(() => {\n    fetchViewData();\n  }, [id, edit]);\n\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n        <GridItem colSpan={{ base: 4 }}>\n          <Heading size=\"lg\" m={3}>\n            {data?.name || \" \"}\n          </Heading>\n        </GridItem>\n        <GridItem colSpan={{ base: 4 }}>\n          <Card>\n            <Grid gap={4}>\n              <GridItem colSpan={2}>\n                <Box>\n                  <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Heading size=\"md\" mb={3}>\n                      Account Details\n                    </Heading>\n                    <Flex id=\"hide-btn\">\n                      <Menu>\n                        {(user?.role === \"superAdmin\" ||\n                          permission?.create ||\n                          permission?.update ||\n                          permission?.delete) && (\n                          <MenuButton\n                            variant=\"outline\"\n                            colorScheme=\"blackAlpha\"\n                            size=\"sm\"\n                            va\n                            mr={2.5}\n                            as={Button}\n                            rightIcon={<ChevronDownIcon />}\n                          >\n                            Actions\n                          </MenuButton>\n                        )}\n                        <MenuDivider />\n                        <MenuList minWidth={2}>\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.create) && (\n                            <MenuItem\n                              onClick={() => {\n                                setEdit(true);\n                                setType(\"add\");\n                                formik.resetForm();\n                              }}\n                              alignItems={\"start\"}\n                              color={\"blue\"}\n                              icon={<AddIcon />}\n                            >\n                              Add\n                            </MenuItem>\n                          )}\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.update) && (\n                            <MenuItem\n                              onClick={() => {\n                                setEdit(true);\n                                setType(\"edit\");\n                              }}\n                              alignItems={\"start\"}\n                              icon={<EditIcon />}\n                            >\n                              Edit\n                            </MenuItem>\n                          )}\n                          <MenuItem\n                            onClick={generatePDF}\n                            alignItems={\"start\"}\n                            icon={<FaFilePdf />}\n                            display={\"flex\"}\n                            style={{ alignItems: \"center\" }}\n                          >\n                            Print as PDF\n                          </MenuItem>\n\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.delete) && (\n                            <>\n                              <MenuDivider />\n                              <MenuItem\n                                alignItems={\"start\"}\n                                onClick={() => setDeleteManyModel(true)}\n                                color={\"red\"}\n                                icon={<DeleteIcon />}\n                              >\n                                Delete\n                              </MenuItem>\n                            </>\n                          )}\n                        </MenuList>\n                      </Menu>\n                      <Button\n                        leftIcon={<IoIosArrowBack />}\n                        size=\"sm\"\n                        variant=\"brand\"\n                        onClick={() => navigate(-1)}\n                      >\n                        Back\n                      </Button>\n                    </Flex>\n                  </Box>\n                  <HSeparator />\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Account Name{\" \"}\n                </Text>\n                {editableField === \"name\" ? (\n                  <>\n                    <Input\n                      id=\"text\"\n                      name=\"name\"\n                      type=\"text\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.name}\n                      borderColor={\n                        formik?.errors?.name && formik?.touched?.name\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.name &&\n                        formik?.touched?.name &&\n                        formik?.errors?.name}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"name\", data?.name, \"Account Name\")\n                    }\n                  >\n                    {data?.name ? data?.name : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Office Phone{\" \"}\n                </Text>\n                {editableField === \"officePhone\" ? (\n                  <>\n                    <Input\n                      name=\"officePhone\"\n                      type=\"number\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.officePhone}\n                      borderColor={\n                        formik?.errors?.officePhone &&\n                        formik?.touched?.officePhone\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.officePhone &&\n                        formik?.touched?.officePhone &&\n                        formik?.errors?.officePhone}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"officePhone\",\n                        data?.officePhone,\n                        \"Office Phone\",\n                      )\n                    }\n                  >\n                    {data?.officePhone ? data?.officePhone : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Alternate Phone\n                </Text>\n                {editableField === \"alternatePhone\" ? (\n                  <>\n                    <Input\n                      name=\"alternatePhone\"\n                      type=\"number\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.alternatePhone}\n                      borderColor={\n                        formik?.errors?.alternatePhone &&\n                        formik?.touched?.alternatePhone\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.alternatePhone &&\n                        formik?.touched?.alternatePhone &&\n                        formik?.errors?.alternatePhone}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"alternatePhone\",\n                        data?.alternatePhone,\n                        \"Alternate Phone\",\n                      )\n                    }\n                  >\n                    {data?.alternatePhone ? data?.alternatePhone : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Website\n                </Text>\n                {editableField === \"website\" ? (\n                  <>\n                    <Input\n                      name=\"website\"\n                      type=\"url\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.website}\n                      borderColor={\n                        formik?.errors?.website && formik?.touched?.website\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.website &&\n                        formik?.touched?.website &&\n                        formik?.errors?.website}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"website\", data?.website, \"Website\")\n                    }\n                  >\n                    {data?.website ? data?.website : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Fax\n                </Text>\n                {editableField === \"fax\" ? (\n                  <>\n                    <Input\n                      name=\"fax\"\n                      type=\"number\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.fax}\n                      borderColor={\n                        formik?.errors?.fax && formik?.touched?.fax\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.fax &&\n                        formik?.touched?.fax &&\n                        formik?.errors?.fax}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"fax\", data?.fax, \"Fax\")\n                    }\n                  >\n                    {data?.fax ? data?.fax : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Ownership\n                </Text>\n                {editableField === \"ownership\" ? (\n                  <>\n                    <Input\n                      name=\"ownership\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.ownership}\n                      borderColor={\n                        formik?.errors?.ownership && formik?.touched?.ownership\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.ownership &&\n                        formik?.touched?.ownership &&\n                        formik?.errors?.ownership}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"ownership\",\n                        data?.ownership,\n                        \"Ownership\",\n                      )\n                    }\n                  >\n                    {data?.ownership ? data?.ownership : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Email Address\n                </Text>\n                {editableField === \"emailAddress\" ? (\n                  <>\n                    <Input\n                      name=\"emailAddress\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.emailAddress}\n                      borderColor={\n                        formik?.errors?.emailAddress &&\n                        formik?.touched?.emailAddress\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.emailAddress &&\n                        formik?.touched?.emailAddress &&\n                        formik?.errors?.emailAddress}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"emailAddress\",\n                        data?.emailAddress,\n                        \"Email Address\",\n                      )\n                    }\n                  >\n                    {data?.emailAddress ? data?.emailAddress : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Non Primary Email\n                </Text>\n                {editableField === \"nonPrimaryEmail\" ? (\n                  <>\n                    <Input\n                      name=\"nonPrimaryEmail\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.nonPrimaryEmail}\n                      borderColor={\n                        formik?.errors?.nonPrimaryEmail &&\n                        formik?.touched?.nonPrimaryEmail\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.nonPrimaryEmail &&\n                        formik?.touched?.nonPrimaryEmail &&\n                        formik?.errors?.nonPrimaryEmail}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"nonPrimaryEmail\",\n                        data?.nonPrimaryEmail,\n                        \"Non Primary Email\",\n                      )\n                    }\n                  >\n                    {data?.nonPrimaryEmail ? data?.nonPrimaryEmail : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Street\n                </Text>\n                {editableField === \"shippingStreet\" ? (\n                  <>\n                    <Input\n                      name=\"shippingStreet\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingStreet}\n                      borderColor={\n                        formik?.errors?.shippingStreet &&\n                        formik?.touched?.shippingStreet\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingStreet &&\n                        formik?.touched?.shippingStreet &&\n                        formik?.errors?.shippingStreet}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingStreet\",\n                        data?.shippingStreet,\n                        \"Shipping Street\",\n                      )\n                    }\n                  >\n                    {data?.shippingStreet ? data?.shippingStreet : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Street\n                </Text>\n                {editableField === \"billingStreet\" ? (\n                  <>\n                    <Input\n                      name=\"billingStreet\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingStreet}\n                      borderColor={\n                        formik?.errors?.billingStreet &&\n                        formik?.touched?.billingStreet\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingStreet &&\n                        formik?.touched?.billingStreet &&\n                        formik?.errors?.billingStreet}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingStreet\",\n                        data?.billingStreet,\n                        \"Billing Street\",\n                      )\n                    }\n                  >\n                    {data?.billingStreet ? data?.billingStreet : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Street2\n                </Text>\n                {editableField === \"shippingStreet2\" ? (\n                  <>\n                    <Input\n                      name=\"shippingStreet2\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingStreet2}\n                      borderColor={\n                        formik?.errors?.shippingStreet2 &&\n                        formik?.touched?.shippingStreet2\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingStreet2 &&\n                        formik?.touched?.shippingStreet2 &&\n                        formik?.errors?.shippingStreet2}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingStreet2\",\n                        data?.shippingStreet2,\n                        \"Shipping Street2\",\n                      )\n                    }\n                  >\n                    {data?.shippingStreet2 ? data?.shippingStreet2 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Street2\n                </Text>\n                {editableField === \"billingStreet2\" ? (\n                  <>\n                    <Input\n                      name=\"billingStreet2\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingStreet2}\n                      borderColor={\n                        formik?.errors?.billingStreet2 &&\n                        formik?.touched?.billingStreet2\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingStreet2 &&\n                        formik?.touched?.billingStreet2 &&\n                        formik?.errors?.billingStreet2}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingStreet2\",\n                        data?.billingStreet2,\n                        \"Billing Street2\",\n                      )\n                    }\n                  >\n                    {data?.billingStreet2 ? data?.billingStreet2 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Street3\n                </Text>\n                {editableField === \"shippingStreet3\" ? (\n                  <>\n                    <Input\n                      name=\"shippingStreet3\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingStreet3}\n                      borderColor={\n                        formik?.errors?.shippingStreet3 &&\n                        formik?.touched?.shippingStreet3\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingStreet3 &&\n                        formik?.touched?.shippingStreet3 &&\n                        formik?.errors?.shippingStreet3}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingStreet3\",\n                        data?.shippingStreet3,\n                        \"Shipping Street3\",\n                      )\n                    }\n                  >\n                    {data?.shippingStreet3 ? data?.shippingStreet3 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Street3\n                </Text>\n                {editableField === \"billingStreet3\" ? (\n                  <>\n                    <Input\n                      name=\"billingStreet3\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingStreet3}\n                      borderColor={\n                        formik?.errors?.billingStreet3 &&\n                        formik?.touched?.billingStreet3\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingStreet3 &&\n                        formik?.touched?.billingStreet3 &&\n                        formik?.errors?.billingStreet3}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingStreet3\",\n                        data?.billingStreet3,\n                        \"Billing Street3\",\n                      )\n                    }\n                  >\n                    {data?.billingStreet3 ? data?.billingStreet3 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Street4\n                </Text>\n                {editableField === \"shippingStreet4\" ? (\n                  <>\n                    <Input\n                      name=\"shippingStreet4\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingStreet4}\n                      borderColor={\n                        formik?.errors?.shippingStreet4 &&\n                        formik?.touched?.shippingStreet4\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors.shippingStreet4 &&\n                        formik?.touched?.shippingStreet4 &&\n                        formik?.errors?.shippingStreet4}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingStreet4\",\n                        data?.shippingStreet4,\n                        \"Shipping Street4\",\n                      )\n                    }\n                  >\n                    {data?.shippingStreet4 ? data?.shippingStreet4 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Street4\n                </Text>\n                {editableField === \"billingStreet4\" ? (\n                  <>\n                    <Input\n                      name=\"billingStreet4\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingStreet4}\n                      borderColor={\n                        formik?.errors?.billingStreet4 &&\n                        formik?.touched?.billingStreet4\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingStreet4 &&\n                        formik?.touched?.billingStreet4 &&\n                        formik?.errors?.billingStreet4}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingStreet4\",\n                        data?.billingStreet4,\n                        \"Billing Street4\",\n                      )\n                    }\n                  >\n                    {data?.billingStreet4 ? data?.billingStreet4 : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Postal Code\n                </Text>\n                {editableField === \"shippingPostalcode\" ? (\n                  <>\n                    <Input\n                      name=\"shippingPostalcode\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingPostalcode}\n                      borderColor={\n                        formik?.errors?.shippingPostalcode &&\n                        formik?.touched?.shippingPostalcode\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingPostalcode &&\n                        formik?.touched?.shippingPostalcode &&\n                        formik?.errors?.shippingPostalcode}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingPostalcode\",\n                        data?.shippingPostalcode,\n                        \"Shipping Postal Code\",\n                      )\n                    }\n                  >\n                    {data?.shippingPostalcode\n                      ? data?.shippingPostalcode\n                      : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Postal Code\n                </Text>\n                {editableField === \"billingPostalcode\" ? (\n                  <>\n                    <Input\n                      name=\"billingPostalcode\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingPostalcode}\n                      borderColor={\n                        formik?.errors?.billingPostalcode &&\n                        formik?.touched?.billingPostalcode\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingPostalcode &&\n                        formik?.touched?.billingPostalcode &&\n                        formik?.errors?.billingPostalcode}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingPostalcode\",\n                        data?.billingPostalcode,\n                        \"Billing Postal Code\",\n                      )\n                    }\n                  >\n                    {data?.billingPostalcode ? data?.billingPostalcode : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping City\n                </Text>\n                {editableField === \"shippingCity\" ? (\n                  <>\n                    <Input\n                      name=\"shippingCity\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingCity}\n                      borderColor={\n                        formik?.errors?.shippingCity &&\n                        formik?.touched?.shippingCity\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingCity &&\n                        formik?.touched?.shippingCity &&\n                        formik?.errors?.shippingCity}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingCity\",\n                        data?.shippingCity,\n                        \"Shipping City\",\n                      )\n                    }\n                  >\n                    {data?.shippingCity ? data?.shippingCity : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing City\n                </Text>\n                {editableField === \"billingCity\" ? (\n                  <>\n                    <Input\n                      name=\"billingCity\"\n                      onChange={formik.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingCity}\n                      borderColor={\n                        formik?.errors?.billingCity &&\n                        formik?.touched?.billingCity\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingCity &&\n                        formik?.touched?.billingCity &&\n                        formik?.errors?.billingCity}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingCity\",\n                        data?.billingCity,\n                        \"Billing City\",\n                      )\n                    }\n                  >\n                    {data?.billingCity ? data?.billingCity : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping State\n                </Text>\n                {editableField === \"shippingState\" ? (\n                  <>\n                    <Input\n                      name=\"shippingState\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingState}\n                      borderColor={\n                        formik?.errors?.shippingState &&\n                        formik?.touched?.shippingState\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingState &&\n                        formik?.touched?.shippingState &&\n                        formik?.errors?.shippingState}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingState\",\n                        data?.shippingState,\n                        \"Shipping State\",\n                      )\n                    }\n                  >\n                    {data?.shippingState ? data?.shippingState : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing State\n                </Text>\n                {editableField === \"billingState\" ? (\n                  <>\n                    <Input\n                      name=\"billingState\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingState}\n                      borderColor={\n                        formik?.errors?.billingState &&\n                        formik?.touched?.billingState\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingState &&\n                        formik?.touched?.billingState &&\n                        formik?.errors?.billingState}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingState\",\n                        data?.billingState,\n                        \"Billing State\",\n                      )\n                    }\n                  >\n                    {data?.billingState ? data?.billingState : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Shipping Country\n                </Text>\n                {editableField === \"shippingCountry\" ? (\n                  <>\n                    <Input\n                      name=\"shippingCountry\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.shippingCountry}\n                      borderColor={\n                        formik?.errors?.shippingCountry &&\n                        formik?.touched?.shippingCountry\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.shippingCountry &&\n                        formik?.touched?.shippingCountry &&\n                        formik?.errors?.shippingCountry}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"shippingCountry\",\n                        data?.shippingCountry,\n                        \"Shipping Country\",\n                      )\n                    }\n                  >\n                    {data?.shippingCountry ? data?.shippingCountry : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Billing Country\n                </Text>\n                {editableField === \"billingCountry\" ? (\n                  <>\n                    <Input\n                      name=\"billingCountry\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.billingCountry}\n                      borderColor={\n                        formik?.errors?.billingCountry &&\n                        formik?.touched?.billingCountry\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.billingCountry &&\n                        formik?.touched?.billingCountry &&\n                        formik?.errors?.billingCountry}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\n                        \"billingCountry\",\n                        data?.billingCountry,\n                        \"Billing Country\",\n                      )\n                    }\n                  >\n                    {data?.billingCountry ? data?.billingCountry : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Type\n                </Text>\n                {editableField === \"type\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.type}\n                      name=\"type\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      fontWeight=\"500\"\n                      placeholder={\"Select Type\"}\n                      borderColor={\n                        formik?.errors?.type && formik?.touched?.type\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value=\"Analyst\">Analyst</option>\n                      <option value=\"Competitor\">Competitor </option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Integrator\">Integrator</option>\n                      <option value=\"Investor\">Investor </option>\n                      <option value=\"Partner\">Partner</option>\n                      <option value=\"Press\">Press</option>\n                      <option value=\"Prospect\">Prospect</option>\n                      <option value=\"Reseller\">Reseller</option>\n                      <option value=\"Other\">Other</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.type &&\n                        formik?.touched?.type &&\n                        formik?.errors?.type}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"type\", data?.type, \"Type\")\n                    }\n                  >\n                    {data?.type ? data?.type : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  Industry\n                </Text>\n                {editableField === \"industry\" ? (\n                  <>\n                    <Select\n                      value={formik?.values?.industry}\n                      name=\"industry\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      fontWeight=\"500\"\n                      placeholder={\"Select Industry\"}\n                      borderColor={\n                        formik?.errors?.industry && formik?.touched?.industry\n                          ? \"red.300\"\n                          : null\n                      }\n                    >\n                      <option value=\"Apparel\">Apparel</option>\n                      <option value=\"Banking\">Banking </option>\n                      <option value=\"Biotechnology\">Biotechnology</option>\n                      <option value=\"Chemicals\">Chemicals</option>\n                      <option value=\"Communications\">Communications </option>\n                      <option value=\"Construction\">Construction</option>\n                      <option value=\"Consulting\">Consulting</option>\n                      <option value=\"Education\">Education</option>\n                      <option value=\"Electronics\">Electronics</option>\n                      <option value=\"Energy\">Energy</option>\n                      <option value=\"Engineering\">Engineering</option>\n                      <option value=\"Entertainment\">Entertainment</option>\n                      <option value=\"Finance\">Finance</option>\n                      <option value=\"Government\">Government</option>\n                      <option value=\"Healthcare\">Healthcare</option>\n                      <option value=\"Hospitality\">Hospitality</option>\n                      <option value=\"Insurance\">Insurance</option>\n                      <option value=\"Machinery\">Machinery</option>\n                      <option value=\"Manufacturing\">Manufacturing</option>\n                      <option value=\"Media\">Media</option>\n                      <option value=\"Not For Profit\">Not For Profit</option>\n                      <option value=\"Recreation\">Recreation</option>\n                      <option value=\"Retail\">Retail</option>\n                      <option value=\"Shipping\">Shipping</option>\n                      <option value=\"Technology\">Technology</option>\n                      <option value=\"Telecommunications\">\n                        Telecommunications\n                      </option>\n                      <option value=\"Transportation\">Transportation</option>\n                      <option value=\"Utilities\">Utilities</option>\n                      <option value=\"Other\">Other</option>\n                    </Select>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.industry &&\n                        formik?.touched?.industry &&\n                        formik?.errors?.industry}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"industry\", data?.industry, \"Industry\")\n                    }\n                  >\n                    {data?.industry ? data?.industry : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Rating{\" \"}\n                </Text>\n                <Text>{data?.rating ? data?.rating : \" - \"}</Text>\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  SIC Code\n                </Text>\n                {editableField === \"SICCode\" ? (\n                  <>\n                    <Input\n                      name=\"SICCode\"\n                      onChange={formik?.handleChange}\n                      onBlur={handleBlur}\n                      value={formik?.values?.SICCode}\n                      borderColor={\n                        formik?.errors?.SICCode && formik?.touched?.SICCode\n                          ? \"red.300\"\n                          : null\n                      }\n                      autoFocus\n                    />\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {formik?.errors?.SICCode &&\n                        formik?.touched?.SICCode &&\n                        formik?.errors?.SICCode}\n                    </Text>\n                  </>\n                ) : (\n                  <Text\n                    onDoubleClick={() =>\n                      handleDoubleClick(\"SICCode\", data?.SICCode, \"SIC Code\")\n                    }\n                  >\n                    {data?.SICCode ? data?.SICCode : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Assigned User{\" \"}\n                </Text>\n                {/* <Text>{data?.assignUserName ? data?.assignUserName : ' - '}</Text> */}\n                {data?.assignUser ? (\n                  <Link\n                    to={\n                      user?.role === \"superAdmin\" &&\n                      `/userView/${data?.assignUser}`\n                    }\n                  >\n                    <Text\n                      color={\n                        user?.role === \"superAdmin\"\n                          ? \"blue.500\"\n                          : \"blackAlpha.900\"\n                      }\n                      sx={{\n                        \"&:hover\": {\n                          color:\n                            user.role === \"superAdmin\"\n                              ? \"blue.500\"\n                              : \"blackAlpha.900\",\n                          textDecoration:\n                            user.role === \"superAdmin\" ? \"underline\" : \"none\",\n                        },\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {data?.assignUserName ? data?.assignUserName : \" - \"}\n                    </Text>\n                  </Link>\n                ) : (\n                  <Text\n                    color={\n                      user?.role === \"superAdmin\"\n                        ? \"blue.500\"\n                        : \"blackAlpha.900\"\n                    }\n                    sx={{\n                      \"&:hover\": {\n                        color:\n                          user.role === \"superAdmin\"\n                            ? \"blue.500\"\n                            : \"blackAlpha.900\",\n                        textDecoration:\n                          user.role === \"superAdmin\" ? \"underline\" : \"none\",\n                      },\n                    }}\n                  >\n                    {data?.assignUserName ? data?.assignUserName : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n              <GridItem colSpan={{ base: 2, md: 1 }}>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" color={\"blackAlpha.900\"}>\n                  {\" \"}\n                  Member Of{\" \"}\n                </Text>\n                {data?.memberOf ? (\n                  <Link to={`/accountView/${data?.memberOf}`}>\n                    <Text\n                      color={permission?.view ? \"blue.500\" : \"blackAlpha.900\"}\n                      sx={{\n                        \"&:hover\": {\n                          color: permission?.view\n                            ? \"blue.500\"\n                            : \"blackAlpha.900\",\n                          textDecoration: permission?.view\n                            ? \"underline\"\n                            : \"none\",\n                        },\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {data?.memberOfName ? data?.memberOfName : \" - \"}\n                    </Text>\n                  </Link>\n                ) : (\n                  <Text\n                    color={permission?.view ? \"blue.500\" : \"blackAlpha.900\"}\n                    sx={{\n                      \"&:hover\": {\n                        color: permission?.view ? \"blue.500\" : \"blackAlpha.900\",\n                        textDecoration: permission?.view ? \"underline\" : \"none\",\n                      },\n                    }}\n                  >\n                    {data?.memberOfName ? data?.memberOfName : \" - \"}\n                  </Text>\n                )}\n              </GridItem>\n\n              {/* <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\n                                <Link to={data?.assignTo ? contactAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\n                                    <Text color={(data?.category === 'contact' && (contactAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\n                                </Link>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\n                                {\n                                    editableField === \"description\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.description}\n                                                autoFocus\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\n                                {\n                                    editableField === \"notes\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"notes\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.notes}\n                                                autoFocus\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\n\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\n                                }\n                            </GridItem> */}\n            </Grid>\n          </Card>\n        </GridItem>\n      </Grid>\n      {(permission?.update ||\n        permission?.delete ||\n        user?.role === \"superAdmin\") && (\n        <Card mt={3}>\n          <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n            <GridItem colStart={6}>\n              <Flex justifyContent={\"right\"}>\n                {(permission?.update || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    onClick={() => {\n                      setEdit(true);\n                      setType(\"edit\");\n                    }}\n                    leftIcon={<EditIcon />}\n                    mr={2.5}\n                    variant=\"outline\"\n                    colorScheme=\"green\"\n                  >\n                    Edit\n                  </Button>\n                )}\n                {(permission?.delete || user?.role === \"superAdmin\") && (\n                  <Button\n                    size=\"sm\"\n                    style={{ background: \"red.800\" }}\n                    onClick={() => setDeleteManyModel(true)}\n                    leftIcon={<DeleteIcon />}\n                    colorScheme=\"red\"\n                  >\n                    Delete\n                  </Button>\n                )}\n              </Flex>\n            </GridItem>\n          </Grid>\n        </Card>\n      )}\n      <AddEdit\n        isOpen={edit}\n        size=\"lg\"\n        onClose={() => setEdit(false)}\n        viewClose={onClose}\n        selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id}\n        type={type}\n      />\n      <CommonDeleteModel\n        isOpen={deleteManyModel}\n        onClose={() => setDeleteManyModel(false)}\n        type=\"Account\"\n        handleDeleteData={handleDeleteAccount}\n        ids={[id]}\n      />\n    </div>\n  );\n};\n\nexport default View;\n"],"names":["opprtunitiesSchema","yup","opportunityName","required","type","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","createBy","props","_formik$values","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$values2","_formik$errors4","_formik$touched3","_formik$errors5","_formik$touched4","_formik$errors6","_formik$values3","_formik$errors7","_formik$touched5","_formik$errors8","_formik$touched6","_formik$errors9","_formik$values4","_formik$errors10","_formik$touched7","_formik$errors11","_formik$touched8","_formik$errors12","_formik$values5","_formik$errors13","_formik$touched9","_formik$errors14","_formik$touched10","_formik$errors15","_formik$values6","_formik$errors16","_formik$touched11","_formik$errors17","_formik$touched12","_formik$errors18","_formik$values7","_formik$errors19","_formik$touched13","_formik$errors20","_formik$touched14","_formik$errors21","_formik$values8","_formik$errors22","_formik$touched15","_formik$errors23","_formik$touched16","_formik$errors24","_formik$values9","_formik$errors25","_formik$touched17","_formik$errors26","_formik$touched18","_formik$errors27","_formik$values10","_formik$errors28","_formik$touched19","_formik$errors29","_formik$touched20","_formik$errors30","_formik$values11","_formik$errors31","_formik$touched21","_formik$errors32","_formik$touched22","_formik$errors33","_formik$values12","_formik$errors34","_formik$touched23","_formik$errors35","_formik$touched24","_formik$errors36","_formik$values13","_formik$errors37","_formik$touched25","_formik$errors38","_formik$touched26","_formik$errors39","_formik$values14","_formik$errors40","_formik$touched27","_formik$errors41","_formik$touched28","_formik$errors42","_formik$values15","_formik$errors43","_formik$touched29","_formik$touched30","_formik$errors44","_formik$values16","_formik$errors45","_formik$touched31","_formik$errors46","_formik$touched32","_formik$errors47","_formik$values17","_formik$errors48","_formik$touched33","_formik$errors49","_formik$touched34","_formik$errors50","_formik$values18","_formik$errors51","_formik$touched35","_formik$errors52","_formik$touched36","_formik$errors53","_formik$values19","_formik$errors54","_formik$touched37","_formik$errors55","_formik$touched38","_formik$errors56","_formik$values20","_formik$errors57","_formik$touched39","_formik$errors58","_formik$touched40","_formik$errors59","_formik$values21","_formik$errors60","_formik$touched41","_formik$errors61","_formik$touched42","_formik$errors62","_formik$values22","_formik$errors63","_formik$touched43","_formik$errors64","_formik$touched44","_formik$errors65","_formik$values23","_formik$errors66","_formik$touched45","_formik$errors67","_formik$touched46","_formik$errors68","_formik$values24","_formik$errors69","_formik$touched47","_formik$errors70","_formik$touched48","_formik$errors71","_formik$values25","_formik$errors72","_formik$touched49","_formik$errors73","_formik$touched50","_formik$errors74","_formik$values26","_formik$errors75","_formik$touched51","_formik$errors76","_formik$touched52","_formik$errors77","_formik$values27","_formik$errors78","_formik$touched53","_formik$errors79","_formik$touched54","_formik$errors80","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","name","officePhone","alternatePhone","assignUser","website","fax","ownership","emailAddress","nonPrimaryEmail","billingStreet","billingStreet2","billingStreet3","billingStreet4","billingPostalcode","billingCity","billingState","billingCountry","shippingStreet","shippingStreet2","shippingStreet3","shippingStreet4","shippingPostalcode","shippingCity","shippingState","shippingCountry","industry","annualRevenue","rating","SICCode","memberOf","modifiedBy","_id","formik","useFormik","validationSchema","accountSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","modifiedDate","response","putApi","status","toast","success","error","handleDoubleClick","fieldName","value","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Select","placeholder","Link","to","sx","textDecoration","cursor","assignUserName","view","memberOfName","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log"],"sourceRoot":""}