{"version":3,"file":"static/js/8259.896b35a5.chunk.js","mappings":"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","sources":["views/admin/opportunityproject/View.js"],"sourcesContent":["import {\n  AddIcon,\n  ChevronDownIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Box,\n  Input,\n  Text,\n  VStack,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport FolderTreeView from \"components/FolderTreeView/folderTreeView\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { constant } from \"constant\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getApi } from \"services/api\";\nimport PhoneCall from \"../contact/components/phonCall\";\nimport AddEmailHistory from \"../emailHistory/components/AddEmail\";\nimport AddMeeting from \"../meeting/components/Addmeeting\";\nimport AddPhoneCall from \"../phoneCall/components/AddPhoneCall\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport DataNotFound from \"components/notFoundData\";\nimport CustomView from \"utils/customView\";\nimport AddDocumentModal from \"utils/addDocumentModal\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteApi } from \"services/api\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\nimport moment from \"moment\";\nimport AddEdit from \"../task/components/AddEdit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Editopportunityproject from \"./Editopportunityproject\";\nimport { postApi } from \"services/api\";\nimport { putApi } from \"services/api\";\nimport { fetchPropertyData } from \"../../../redux/slices/propertySlice.js\";\nimport { fetchPropertyCustomFiled } from \"../../../redux/slices/propertyCustomFiledSlice.js\";\n\nconst View = (props) => {\n  const { userAction, userData, editData, selectedId, setUserAction } = props;\n  const params = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = params;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const userName =\n    typeof userData === \"string\" ? JSON.parse(userData) : userData;\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\n  // const [data, setData] = useState();\n  const [opportunitydata, setOpportunityData] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [edit, setEdit] = useState(false);\n  const [deleteModel, setDelete] = useState(false);\n  const [isLoding, setIsLoding] = useState(false);\n  const [addMeeting, setMeeting] = useState(false);\n  const [action, setAction] = useState(false);\n  const [editableField, setEditableField] = useState(null);\n  const [useraction, setUserction] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [selectedValues, setSelectedValues] = useState();\n  const [taskModel, setTaskModel] = useState(false);\n  const [propertyData, setPropertyData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [selectedPropertyData, setSelctedPropertyData] = useState([]);\n  const propertyTableData = useSelector((state) => state?.propertyData?.data);\n  const size = \"lg\";\n\n  const leadData = useSelector((state) => state?.leadCustomFiled?.data?.data);\n  const [permission] = HasAccess([\"Opportunity Project\"]);\n  const fetchViewData = async () => {\n    if (id) {\n      const result = await getApi(\"api/opportunityproject/view/\", id);\n      setOpportunityData(result?.data);\n      setSelctedPropertyData(result?.data?.propertyOpportunityProject);\n    }\n  };\n  const handleClick = () => {\n    setUserction(\"add\");\n    onOpen();\n  };\n  useEffect(() => {\n    fetchViewData();\n  }, [id, edit]);\n\n  const handleDoubleClick = (fieldName, value) => {\n    formik.setFieldValue(fieldName, value);\n    setEditableField(fieldName);\n  };\n\n  const columnsDataColumns = [\n    { Header: \"sender\", accessor: \"senderName\" },\n    {\n      Header: \"recipient\",\n      accessor: \"createByName\",\n      cell: (cell) => (\n        <Link to={`/Email/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \" - \"}\n          </Text>\n        </Link>\n      ),\n    },\n    {\n      Header: \"time stamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value).fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Created\",\n      accessor: \"createBy\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.row?.values.timestamp).format(\"h:mma (DD/MM)\")}\n          </Text>\n        </div>\n      ),\n    },\n  ];\n  const callColumns = [\n    { Header: \"sender\", accessor: \"senderName\" },\n    {\n      Header: \"recipient\",\n      accessor: \"createByName\",\n      cell: (cell) => (\n        <Link to={`/phone-call/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \" - \"}\n          </Text>\n        </Link>\n      ),\n    },\n    {\n      Header: \"time stamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value).fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    {\n      Header: \"Created\",\n      accessor: \"createBy\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.row?.values?.timestamp).format(\"h:mma (DD/MM)\")}\n          </Text>\n        </div>\n      ),\n    },\n  ];\n  const MeetingColumns = [\n    {\n      Header: \"Agenda\",\n      accessor: \"agenda\",\n      cell: (cell) => (\n        <Link to={`/metting/${cell?.row?.original?._id}`}>\n          <Text\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value || \" - \"}\n          </Text>\n        </Link>\n      ),\n    },\n    { Header: \"date Time\", accessor: \"dateTime\" },\n    {\n      Header: \"times tamp\",\n      accessor: \"timestamp\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n            {moment(cell?.value).fromNow()}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"create By\", accessor: \"createdByName\" },\n  ];\n  const taskColumns = [\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n      type: \"text\",\n      formikType: \"\",\n      cell: (cell) => (\n        <div className=\"selectOpt\">\n          <Text\n            onClick={() => navigate(`/view/${cell?.row?.original?._id}`)}\n            me=\"10px\"\n            sx={{\n              \"&:hover\": { color: \"blue.500\", textDecoration: \"underline\" },\n              cursor: \"pointer\",\n            }}\n            color=\"brand.600\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          >\n            {cell?.value}\n          </Text>\n        </div>\n      ),\n    },\n    { Header: \"Category\", accessor: \"category\" },\n    { Header: \"Assign To\", accessor: \"assignToName\" },\n    { Header: \"Start Date\", accessor: \"start\" },\n    { Header: \"End Date\", accessor: \"end\" },\n  ];\n\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    setPropertyData(result?.payload?.data);\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...(result?.payload?.data?.[0]?.fields || [])\n        ?.filter((field) => field?.isTableField === true)\n        ?.map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n\n  useEffect(async () => {\n    await dispatch(fetchPropertyData());\n    fetchCustomDataFields();\n  }, []);\n\n  const handleTabChange = (index) => {\n    setSelectedTab(index);\n  };\n\n  const generatePDF = () => {\n    const element = document.getElementById(\"reports\");\n    const hideBtn = document.getElementById(\"hide-btn\");\n    if (element) {\n      hideBtn.style.display = \"none\";\n      // element.style.display = \"block\";\n      element.style.width = \"100%\"; // Adjust width for mobile\n      element.style.height = \"auto\";\n      element.style.padding = \"15px\";\n      html2pdf()\n        .from(element)\n        .set({\n          margin: [0, 0, 0, 0],\n          filename: `OpportunityProject_Details_${moment().format(\n            \"DD-MM-YYYY\",\n          )}.pdf`,\n          image: { type: \"jpeg\", quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n          jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n        })\n        .save()\n        .then(() => {\n          element.style.display = \"\";\n          hideBtn.style.display = \"\";\n          element.style.padding = \"\";\n        });\n    } else {\n      console.error(\"Element with ID 'reports' not found.\");\n    }\n  };\n\n  const download = async (data) => {\n    if (data) {\n      let result = await getApi(`api/document/download/`, data);\n      if (result && result?.status === 200) {\n        window.open(`${constant?.baseUrl}api/document/download/${data}`);\n        toast.success(\"file Download successful\");\n      } else if (result && result?.response?.status === 404) {\n        toast.error(\"file Not Found\");\n      }\n    }\n  };\n\n  const handleDeleteLead = async (id) => {\n    try {\n      setIsLoding(true);\n      let response = await deleteApi(\"api/opportunityproject/delete/\", id);\n      if (response?.status === 200) {\n        setDelete(false);\n        setAction((pre) => !pre);\n        navigate(\"/opportunityproject\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchViewData();\n  }, [action]);\n\n  function toCamelCase(text) {\n    return text?.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n  }\n\n  const firstValue = Object?.values(params)[0];\n  const splitValue = firstValue?.split(\"/\");\n  const initialValues = {\n    name: opportunitydata?.name,\n    requirement: opportunitydata?.requirement,\n  };\n  const validationSchema = yup.object({\n    name: yup.string().required(\"name is required\"),\n    requirement: yup.string().required(\"Requirement is required\"),\n  });\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      setEditableField(null);\n      AddData();\n    },\n  });\n  const {\n    errors,\n    touched,\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = formik;\n\n  const AddData = async () => {\n    try {\n      setIsLoding(true);\n      let response = await putApi(\n        `api/opportunityproject/edit/${params?.id}`,\n        values,\n      );\n      if (response && response?.status === 200) {\n        setEditableField(null);\n        fetchViewData();\n        let updatedUserData = userData; // Create a copy of userData\n        if (user?._id === params?.id) {\n          if (updatedUserData && typeof updatedUserData === \"object\") {\n            // Create a new object with the updated firstName\n            updatedUserData = {\n              ...updatedUserData,\n              Name: values?.name,\n              Requirement: values?.requirement,\n            };\n          }\n          const updatedDataString = JSON.stringify(updatedUserData);\n          localStorage.setItem(\"user\", updatedDataString);\n        }\n        onClose();\n        setUserAction(\"\");\n        setAction((pre) => !pre);\n      } else {\n        toast.error(response?.response?.data?.message);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  const handleBlur = (e) => {\n    formik.handleSubmit();\n  };\n  const handleOpenModal = (user) => {\n    setEdit(true);\n  };\n  const handleCloseModel = () => {\n    setEdit(false);\n  };\n\n  const [contactAccess, leadAccess] = HasAccess([\"Contacts\", \"Leads\"]);\n\n  return (\n    <>\n      {isLoding ? (\n        <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n          <Spinner />\n        </Flex>\n      ) : (\n        <>\n          <Heading size=\"lg\" mt={0} m={3}>\n            {opportunitydata?.name || \"\"}\n          </Heading>\n          <Tabs\n            onChange={handleTabChange}\n            index={selectedTab}\n            style={{\n              background: \"#ffffff\",\n              borderRadius: \"20px\",\n              padding: \"20px\",\n            }}\n            // id=\"reports\"\n          >\n            <Grid\n              templateColumns={\"repeat(4, 1fr)\"}\n              mb={3}\n              gap={1}\n              id=\"reports\"\n            >\n              <GridItem colSpan={{ base: 4 }}>\n                <TabList\n                  sx={{\n                    border: \"none\",\n                    \"& button:focus\": { boxShadow: \"none\" },\n                    \"& button\": {\n                      margin: { sm: \"0 3px\", md: \"0 5px\" },\n                      padding: { sm: \"5px\", md: \"8px\" },\n                      border: \"2px solid #8080803d\",\n                      borderTopLeftRadius: \"10px\",\n                      borderTopRightRadius: \"10px\",\n                      borderBottom: 0,\n                      fontSize: { sm: \"12px\", md: \"16px\" },\n                    },\n                    '& button[aria-selected=\"true\"]': {\n                      border: \"2px solid brand.200\",\n                      borderBottom: 0,\n                      zIndex: \"0\",\n                    },\n                  }}\n                ></TabList>\n              </GridItem>\n              <GridItem\n                colSpan={{ base: 2, md: 4 }}\n                mt={{ sm: \"3px\", md: \"5px\" }}\n              >\n                <GridItem colSpan={2}>\n                  <Box>\n                    <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                      <Heading size=\"md\" mb={3}>\n                        Opportunity Project Details\n                      </Heading>\n                      <Flex id=\"hide-btn\">\n                        <Menu>\n                          {(user?.role === \"superAdmin\" ||\n                            permission?.create ||\n                            permission?.update ||\n                            permission?.delete) && (\n                            <MenuButton\n                              size=\"sm\"\n                              variant=\"outline\"\n                              colorScheme=\"blackAlpha\"\n                              mr={2.5}\n                              as={Button}\n                              rightIcon={<ChevronDownIcon />}\n                            >\n                              Actions\n                            </MenuButton>\n                          )}\n                          <MenuDivider />\n                          <MenuList minWidth={2}>\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.create) && (\n                              <MenuItem\n                                color={\"blue\"}\n                                onClick={() => {\n                                  // onOpen(); setUserAction('add'),\n                                  handleClick();\n                                }}\n                                alignItems={\"start\"}\n                                icon={<AddIcon />}\n                              >\n                                {\" \"}\n                                Add{\" \"}\n                              </MenuItem>\n                            )}\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.update) && (\n                              <MenuItem\n                                onClick={() => {\n                                  setUserction(\"edit\");\n                                  onOpen();\n                                }}\n                                alignItems={\"start\"}\n                                icon={<EditIcon />}\n                              >\n                                Edit\n                              </MenuItem>\n                            )}\n                            <MenuItem\n                              onClick={generatePDF}\n                              alignItems={\"start\"}\n                              icon={<FaFilePdf />}\n                              display={\"flex\"}\n                              style={{ alignItems: \"center\" }}\n                            >\n                              Print as PDF\n                            </MenuItem>\n                            {(user?.role === \"superAdmin\" ||\n                              permission?.delete) && (\n                              <>\n                                <MenuDivider />\n                                <MenuItem\n                                  alignItems={\"start\"}\n                                  color={\"red\"}\n                                  onClick={() => setDelete(true)}\n                                  icon={<DeleteIcon />}\n                                >\n                                  Delete\n                                </MenuItem>\n                              </>\n                            )}\n                          </MenuList>\n                        </Menu>\n                        <Link to=\"/opportunityproject\">\n                          <Button\n                            leftIcon={<IoIosArrowBack />}\n                            size=\"sm\"\n                            variant=\"brand\"\n                          >\n                            Back\n                          </Button>\n                        </Link>\n                      </Flex>\n                    </Box>\n                    <HSeparator />\n                  </Box>\n                </GridItem>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    {\" \"}\n                    Opportunity Project Name{\" \"}\n                  </Text>\n                  {editableField === \"name\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"name\"\n                        type=\"text\"\n                        onChange={formik?.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.name}\n                        borderColor={\n                          formik?.errors?.name && formik?.touched?.name\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors.name &&\n                          formik?.touched.name &&\n                          formik?.errors.name}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\"name\", opportunitydata?.name)\n                      }\n                    >\n                      {opportunitydata?.name ? opportunitydata?.name : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <GridItem colSpan={{ base: 4, md: 2 }} mt={3}>\n                <Box>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    Opportunity Project Requirement{\" \"}\n                  </Text>\n                  {editableField === \"requirement\" ? (\n                    <>\n                      <Input\n                        id=\"text\"\n                        name=\"requirement\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        onBlur={handleBlur}\n                        value={formik?.values?.requirement}\n                        borderColor={\n                          formik?.errors?.requirement &&\n                          formik?.touched?.requirement\n                            ? \"red.300\"\n                            : null\n                        }\n                        autoFocus\n                      />\n                      <Text mb=\"10px\" color={\"red\"}>\n                        {\" \"}\n                        {formik?.errors?.requirement &&\n                          formik?.touched?.requirement &&\n                          formik?.errors?.requirement}\n                      </Text>\n                    </>\n                  ) : (\n                    <Text\n                      onDoubleClick={() =>\n                        handleDoubleClick(\n                          \"requirement\",\n                          opportunitydata?.requirement,\n                          \"Opportunity Name\",\n                        )\n                      }\n                    >\n                      {opportunitydata?.requirement\n                        ? opportunitydata?.requirement\n                        : \" - \"}\n                    </Text>\n                  )}\n                </Box>\n              </GridItem>\n              <Grid>\n                <GridItem colSpan={{ base: 6 }} mt={3}>\n                  <Text\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    color={\"blackAlpha.900\"}\n                  >\n                    {\" \"}\n                    Assign To{\" \"}\n                  </Text>\n                  <Link\n                    to={\n                      opportunitydata?.contact\n                        ? contactAccess?.view &&\n                          `/contactView/${opportunitydata?.contact}`\n                        : leadAccess?.view &&\n                          `/leadView/${opportunitydata?.lead}`\n                    }\n                  >\n                    <Text\n                      color={\n                        opportunitydata?.category === \"contact\" &&\n                        (contactAccess?.view || user?.role === \"superAdmin\")\n                          ? \"brand.600\"\n                          : leadAccess?.view ||\n                              (user?.role === \"superAdmin\" &&\n                                opportunitydata?.category === \"lead\")\n                            ? \"brand.600\"\n                            : \"blackAlpha.900\"\n                      }\n                      sx={{\n                        \"&:hover\": {\n                          color: \"blue.500\",\n                          textDecoration: \"underline\",\n                        },\n                      }}\n                    >\n                      {opportunitydata?.setCategory\n                        ? opportunitydata?.setCategory\n                        : \" - \"}\n                    </Text>\n                  </Link>\n                </GridItem>\n              </Grid>\n            </Grid>\n          </Tabs>\n\n          <Card mt={3}>\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={1}>\n              <GridItem colSpan={{ base: 12 }}>\n                <CommonCheckTable\n                  title={\"Property\"}\n                  isLoding={isLoding}\n                  columnData={columns ?? []}\n                  allData={selectedPropertyData ?? []}\n                  tableData={selectedPropertyData ?? []}\n                  tableCustomFields={\n                    propertyData?.[0]?.fields?.filter(\n                      (field) => field?.isTableField === true,\n                    ) || []\n                  }\n                  AdvanceSearch={() => \"\"}\n                  ManageGrid={false}\n                  deleteMany={false}\n                  selectedValues={selectedValues}\n                  setSelectedValues={setSelectedValues}\n                  selectType=\"single\"\n                  customSearch={false}\n                  checkBox={false}\n                />\n              </GridItem>\n            </Grid>\n          </Card>\n\n          {(user?.role === \"superAdmin\" ||\n            permission?.update ||\n            permission?.delete) && (\n            <Card mt={3}>\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={1}>\n                <GridItem colStart={6}>\n                  <Flex justifyContent={\"right\"}>\n                    {user?.role === \"superAdmin\" || permission?.update ? (\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          setUserction(\"edit\");\n                          onOpen();\n                        }}\n                        leftIcon={<EditIcon />}\n                        mr={2.5}\n                        variant=\"outline\"\n                        colorScheme=\"green\"\n                      >\n                        Edit\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                    {user?.role === \"superAdmin\" || permission?.delete ? (\n                      <Button\n                        size=\"sm\"\n                        style={{ background: \"red.800\" }}\n                        onClick={() => setDelete(true)}\n                        leftIcon={<DeleteIcon />}\n                        colorScheme=\"red\"\n                      >\n                        Delete\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Flex>\n                </GridItem>\n              </Grid>\n            </Card>\n          )}\n        </>\n      )}\n\n      <AddMeeting\n        fetchData={fetchViewData}\n        isOpen={addMeeting}\n        leadContect={splitValue?.[0]}\n        onClose={setMeeting}\n        from=\"contact\"\n        id={params?.id}\n        setAction={setAction}\n        view={true}\n      />\n      <AddEdit\n        isOpen={taskModel}\n        fetchData={fetchViewData}\n        leadContect={splitValue?.[0]}\n        onClose={setTaskModel}\n        id={params?.id}\n        userAction={\"add\"}\n        view={true}\n      />\n      <CommonDeleteModel\n        isOpen={deleteModel}\n        onClose={() => setDelete(false)}\n        type=\"Opportunity Project\"\n        handleDeleteData={handleDeleteLead}\n        ids={params?.id}\n      />\n      <Editopportunityproject\n        isOpen={isOpen}\n        fetchData={fetchViewData}\n        userAction={useraction}\n        selectedId={params?.id}\n        onClose={onClose}\n        setAction={setAction}\n        moduleId={opportunitydata?.[0]?._id}\n        data={opportunitydata}\n      />\n    </>\n  );\n};\n\nexport default View;\n"],"names":["props","_formik$values","_formik$errors","_formik$touched","_formik$values2","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_propertyData$","_propertyData$$fields","_opportunitydata$","userAction","userData","editData","selectedId","setUserAction","params","useParams","dispatch","useDispatch","navigate","useNavigate","id","user","JSON","parse","localStorage","getItem","opportunitydata","setOpportunityData","useColorModeValue","useState","allData","setAllData","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","addMeeting","setMeeting","action","setAction","editableField","setEditableField","useraction","setUserction","selectedTab","setSelectedTab","selectedValues","setSelectedValues","taskModel","setTaskModel","propertyData","setPropertyData","columns","setColumns","selectedPropertyData","setSelctedPropertyData","permission","useSelector","state","_state$propertyData","data","_state$leadCustomFile","_state$leadCustomFile2","leadCustomFiled","HasAccess","fetchViewData","async","_result$data","result","getApi","propertyOpportunityProject","useEffect","handleDoubleClick","fieldName","value","formik","setFieldValue","fetchPropertyData","_result$payload","_ref","_ref$filter","_result$payload2","_result$payload2$data","_result$payload2$data2","fetchPropertyCustomFiled","payload","tempTableColumns","Header","accessor","isSortable","width","fields","filter","field","isTableField","map","label","name","fetchCustomDataFields","firstValue","Object","values","splitValue","split","initialValues","requirement","validationSchema","yup","required","useFormik","enableReinitialize","onSubmit","AddData","errors","touched","handleChange","handleSubmit","resetForm","response","putApi","status","updatedUserData","_id","Name","Requirement","updatedDataString","stringify","setItem","pre","_response$response","_response$response$da","toast","error","message","e","console","log","handleBlur","contactAccess","leadAccess","_jsxs","_Fragment","children","_jsx","Flex","justifyContent","alignItems","Spinner","Heading","size","mt","m","Tabs","onChange","index","style","background","borderRadius","padding","Grid","templateColumns","mb","gap","GridItem","colSpan","base","TabList","sx","border","boxShadow","margin","sm","md","borderTopLeftRadius","borderTopRightRadius","borderBottom","fontSize","zIndex","Box","display","Menu","role","create","update","delete","MenuButton","variant","colorScheme","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","color","onClick","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","height","html2pdf","from","set","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","HSeparator","Text","fontWeight","Input","onBlur","borderColor","autoFocus","onDoubleClick","contact","view","lead","category","textDecoration","setCategory","Card","CommonCheckTable","title","columnData","tableData","tableCustomFields","AdvanceSearch","ManageGrid","deleteMany","selectType","customSearch","checkBox","colStart","AddMeeting","fetchData","leadContect","AddEdit","CommonDeleteModel","handleDeleteData","deleteApi","ids","Editopportunityproject","moduleId"],"sourceRoot":""}