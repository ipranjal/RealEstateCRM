{"version":3,"file":"static/js/5144.12056111.chunk.js","mappings":"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","sources":["views/admin/opportunityproject/Editopportunityproject.js","components/commonTableModel/Property.js","components/commonTableModel/MultiPropertyModel.js"],"sourcesContent":["import { CloseIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Flex,\n  FormLabel,\n  Grid,\n  GridItem,\n  IconButton,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport ContactModel from \"components/commonTableModel/ContactModel\";\nimport { toast } from \"react-toastify\";\nimport { putApi } from \"services/api\";\nimport { postApi } from \"services/api\";\nimport * as yup from \"yup\";\nimport { LiaMousePointerSolid } from \"react-icons/lia\";\nimport { getApi } from \"services/api\";\nimport { useSelector } from \"react-redux\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport MultiPropertyModel from \"components/commonTableModel/MultiPropertyModel\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport MultiLeadModel from \"components/commonTableModel/MultiLeadModel\";\n\nconst Editopportunityproject = (props) => {\n  const {\n    onClose,\n    isOpen,\n    view,\n    setAction,\n    data,\n    userAction,\n    userData,\n    selectedId,\n    fetchData,\n    setUserAction,\n  } = props;\n\n  const [isLoding, setIsLoding] = useState(false);\n  const [assignToLeadData, setAssignToLeadData] = useState([]);\n  const [assignToContactData, setAssignToContactData] = useState([]);\n  const [contactModelOpen, setContactModel] = useState(false);\n  const [propertyModelOpen, setPropertyModelOpen] = useState(false);\n  const [assignToProperyData, setAssignToPropertyData] = useState([]);\n  const [leadModelOpen, setLeadModel] = useState(false);\n  const validationSchema = yup.object({\n    name: yup.string().required(\"Name is required\"),\n    requirement: yup.string().required(\"Requirement is required\"),\n    property: yup.array().required(\"Property is required\"),\n    category: yup.string(),\n  });\n\n  const user = JSON.parse(window.localStorage.getItem(\"user\"));\n\n  const formik = useFormik({\n    initialValues: {\n      name: userAction === \"add\" ? \"\" : data?.name || \"\",\n      requirement: userAction === \"add\" ? \"\" : data?.requirement || \"\",\n      category: userAction === \"add\" ? \"None\" : data?.category || \"None\",\n      contact: userAction === \"add\" ? \"\" : data?.contact || \"\",\n      lead: userAction === \"add\" ? \"\" : data?.lead || \"\",\n      property: userAction === \"add\" ? \"\" : data?.property,\n    },\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: (values) => {\n      AddData(values);\n    },\n  });\n\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    resetForm,\n  } = formik;\n\n  const contactData = useSelector((state) => state?.contactData?.data);\n  const leadData = useSelector((state) => state?.leadData?.data);\n\n  const getAllApi = async () => {\n    values.start = props?.date;\n    if (view === true) {\n      if (values?.category === \"Contact\" && assignToContactData?.length <= 0) {\n        setAssignToContactData(contactData);\n      } else if (values?.category === \"Lead\" && assignToLeadData?.length <= 0) {\n        setAssignToLeadData(leadData);\n      }\n    } else {\n      try {\n        let result;\n        if (\n          values?.category === \"Contact\" &&\n          assignToContactData?.length <= 0\n        ) {\n          result = await getApi(\n            user?.role === \"superAdmin\"\n              ? \"api/contact/\"\n              : `api/contact/?createBy=${user._id}`,\n          );\n          setAssignToContactData(result?.data);\n        } else if (\n          values?.category === \"Lead\" &&\n          assignToLeadData?.length <= 0\n        ) {\n          result = await getApi(\n            user?.role === \"superAdmin\"\n              ? \"api/lead/\"\n              : `api/lead/?createBy=${user?._id}`,\n          );\n          setAssignToLeadData(result?.data);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const propertyApiGet = async () => {\n    const propertyOptionData = await getApi(\n      user?.role === \"superAdmin\"\n        ? \"api/property\"\n        : `api/property/?createBy=${user?._id}`,\n    );\n    setAssignToPropertyData(propertyOptionData?.data);\n  };\n\n  useEffect(async () => {\n    getAllApi();\n  }, [props, values?.category]);\n\n  useEffect(() => {\n    propertyApiGet();\n  }, []);\n\n  const AddData = async () => {\n    if (userAction === \"add\") {\n      try {\n        setIsLoding(true);\n\n        let response = await postApi(\"api/opportunityproject/add\", values);\n        if (response && response?.status === 200) {\n          onClose();\n          resetForm();\n          setAction((pre) => !pre);\n          setUserAction(\"\");\n        } else {\n          toast.error(response?.response?.data?.message);\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoding(false);\n      }\n    } else if (userAction === \"edit\") {\n      try {\n        setIsLoding(true);\n        let response = await putApi(\n          `api/opportunityproject/edit/${selectedId}`,\n          values,\n        );\n        if (response && response?.status === 200) {\n          fetchData();\n          let updatedUserData = userData; // Create a copy of userData\n          if (user?._id === selectedId) {\n            if (updatedUserData && typeof updatedUserData === \"object\") {\n              updatedUserData = {\n                ...updatedUserData,\n                Name: values?.name,\n                Requirement: values?.requirement,\n              };\n            }\n            const updatedDataString = JSON.stringify(updatedUserData);\n            localStorage.setItem(\"user\", updatedDataString);\n          }\n          onClose();\n          setAction((pre) => !pre);\n          setUserAction(\"\");\n        } else {\n          toast.error(response?.response?.data?.message);\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoding(false);\n      }\n    }\n  };\n  const [leadAccess, contactAccess] = HasAccess([\"Leads\", \"Contacts\"]);\n  const setValueProperty = assignToProperyData?.map((item) => ({\n    ...item,\n    value: item?._id,\n    label: item?.name,\n  }));\n\n  const extractLabels = (selectedItems) => {\n    return selectedItems?.map((item) => item?._id);\n  };\n\n  return (\n    <Modal isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader justifyContent=\"space-between\" display=\"flex\">\n          {userAction === \"add\"\n            ? \"Add Opportunity Project\"\n            : \"Edit Opportunity Project\"}\n          <IconButton onClick={onClose} icon={<CloseIcon />} />\n        </ModalHeader>\n        <ModalBody>\n          {/* Contact Model*/}\n          <ContactModel\n            isOpen={contactModelOpen}\n            data={assignToContactData}\n            onClose={setContactModel}\n            values={values}\n            fieldName=\"contact\"\n            setFieldValue={setFieldValue}\n          />\n          {/* Lead Model  */}\n          <MultiLeadModel\n            isOpen={leadModelOpen}\n            data={assignToLeadData}\n            onClose={setLeadModel}\n            values={values}\n            fieldName=\"lead\"\n            setFieldValue={setFieldValue}\n          />\n          {/* property model */}\n          <MultiPropertyModel\n            onClose={() => setPropertyModelOpen(false)}\n            isOpen={propertyModelOpen}\n            data={assignToProperyData}\n            isLoding={isLoding}\n            setIsLoding={setIsLoding}\n            fieldName=\"property\"\n            setFieldValue={setFieldValue}\n            selectedItems={setValueProperty?.filter((item) =>\n              values?.property?.includes(item._id),\n            )}\n          />\n\n          <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n            <GridItem colSpan={{ base: 12 }}>\n              <FormLabel\n                display=\"flex\"\n                ms=\"4px\"\n                fontSize=\"sm\"\n                fontWeight=\"500\"\n                mb=\"8px\"\n              >\n                Name<Text color={\"red\"}>*</Text>\n              </FormLabel>\n              <Input\n                fontSize=\"sm\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values?.name}\n                name=\"name\"\n                placeholder=\"Name\"\n                fontWeight=\"500\"\n                borderColor={errors?.name && touched?.name ? \"red.300\" : null}\n                error={formik?.touched?.name && Boolean(formik?.errors?.name)}\n                helperText={formik?.touched?.name && formik?.errors?.name}\n              />\n              <Text mb=\"10px\" color={\"red\"}>\n                {errors?.name && touched?.name && errors?.name}\n              </Text>\n            </GridItem>\n            <GridItem colSpan={{ base: 12 }}>\n              <FormLabel\n                display=\"flex\"\n                ms=\"4px\"\n                fontSize=\"sm\"\n                fontWeight=\"500\"\n                mb=\"8px\"\n              >\n                Requirement<Text color={\"red\"}>*</Text>\n              </FormLabel>\n              <Input\n                fontSize=\"sm\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values?.requirement}\n                name=\"requirement\"\n                placeholder=\"Requirement\"\n                fontWeight=\"500\"\n                borderColor={\n                  errors?.requirement && touched?.requirement ? \"red.300\" : null\n                }\n                error={\n                  formik?.touched?.requirement &&\n                  Boolean(formik?.errors?.requirement)\n                }\n                helperText={\n                  formik?.touched?.requirement && formik?.errors?.requirement\n                }\n              />\n              <Text mb=\"10px\" color={\"red\"}>\n                {errors?.requirement &&\n                  touched?.requirement &&\n                  errors?.requirement}\n              </Text>\n            </GridItem>\n\n            <GridItem colSpan={{ base: 12, md: 12 }}>\n              <FormLabel\n                display=\"flex\"\n                ms=\"4px\"\n                fontSize=\"sm\"\n                fontWeight=\"500\"\n                mb=\"8px\"\n              >\n                Related\n              </FormLabel>\n              <RadioGroup\n                onChange={(e) => {\n                  setFieldValue(\"category\", e);\n                  setFieldValue(\"contact\", null);\n                  setFieldValue(\"lead\", null);\n                }}\n                value={values?.category}\n              >\n                <Stack direction=\"row\">\n                  <Radio value=\"None\">None</Radio>\n                  <>\n                    {(user?.role === \"superAdmin\" || contactAccess?.create) && (\n                      <Radio value=\"Contact\">Contact</Radio>\n                    )}\n                    {(user?.role === \"superAdmin\" || leadAccess?.create) && (\n                      <Radio value=\"Lead\">Lead</Radio>\n                    )}\n                  </>\n                </Stack>\n              </RadioGroup>\n              <Text mb=\"10px\" color={\"red\"}>\n                {\" \"}\n                {errors?.category && touched?.category && errors?.category}\n              </Text>\n            </GridItem>\n            <GridItem colSpan={{ base: 12, md: 12 }}>\n              {values?.category === \"Contact\" ? (\n                <>\n                  <GridItem colSpan={{ base: 12, md: 12 }}>\n                    <FormLabel\n                      display=\"flex\"\n                      ms=\"4px\"\n                      fontSize=\"sm\"\n                      fontWeight=\"500\"\n                      mb=\"8px\"\n                    >\n                      Assign To Contact\n                    </FormLabel>\n                    <Flex>\n                      <Select\n                        value={values?.contact}\n                        name=\"contact\"\n                        onChange={handleChange}\n                        mb={\n                          errors?.contact && touched?.contact\n                            ? undefined\n                            : \"10px\"\n                        }\n                        fontWeight=\"500\"\n                        placeholder={\"Assign To\"}\n                        borderColor={\n                          errors?.contact && touched?.contact ? \"red.300\" : null\n                        }\n                        helperText={\n                          formik?.touched?.contact && formik?.errors?.contact\n                        }\n                      >\n                        {assignToContactData?.map((item) => {\n                          return (\n                            <option value={item?._id} key={item?._id}>\n                              {values?.category === \"Contact\"\n                                ? `${item?.fullName}`\n                                : item?.leadName}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                      <IconButton\n                        onClick={() => setContactModel(true)}\n                        ml={2}\n                        fontSize=\"25px\"\n                        icon={<LiaMousePointerSolid />}\n                      />\n                    </Flex>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {errors?.contact && touched?.contact && errors?.contact}\n                    </Text>\n                  </GridItem>\n                </>\n              ) : values?.category === \"Lead\" ? (\n                <>\n                  <GridItem colSpan={{ base: 12, md: 12 }}>\n                    <FormLabel\n                      display=\"flex\"\n                      ms=\"4px\"\n                      fontSize=\"sm\"\n                      fontWeight=\"500\"\n                      mb=\"8px\"\n                    >\n                      Assign To Lead\n                    </FormLabel>\n                    <Flex justifyContent={\"space-between\"}>\n                      <Select\n                        value={values?.lead}\n                        name=\"lead\"\n                        onChange={handleChange}\n                        mb={errors?.lead && touched?.lead ? undefined : \"10px\"}\n                        fontWeight=\"500\"\n                        placeholder={\"Assign To\"}\n                        borderColor={\n                          errors?.lead && touched?.lead ? \"red.300\" : null\n                        }\n                        helperText={\n                          formik?.touched?.lead && formik?.errors?.lead\n                        }\n                      >\n                        ?\n                        {assignToLeadData?.map((item) => {\n                          return (\n                            <option value={item?._id} key={item?._id}>\n                              {item?.leadName}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                      <IconButton\n                        onClick={() => setLeadModel(true)}\n                        ml={2}\n                        fontSize=\"25px\"\n                        icon={<LiaMousePointerSolid />}\n                      />\n                    </Flex>\n                    <Text mb=\"10px\" color={\"red\"}>\n                      {\" \"}\n                      {errors?.lead && touched?.lead && errors?.lead}\n                    </Text>\n                  </GridItem>\n                </>\n              ) : (\n                \"\"\n              )}\n            </GridItem>\n            <GridItem colSpan={{ base: 12 }}>\n              <Flex alignItems={\"end\"} justifyContent={\"space-between\"}>\n                <Text w={\"100%\"}>\n                  <FormLabel\n                    display=\"flex\"\n                    ms=\"4px\"\n                    fontSize=\"sm\"\n                    fontWeight=\"500\"\n                    style={{ marginBottom: \"-15px\" }}\n                  >\n                    Property<Text color={\"red\"}>*</Text>\n                  </FormLabel>\n                  <CUIAutoComplete\n                    items={setValueProperty}\n                    selectedItems={setValueProperty?.filter((item) =>\n                      values?.property?.includes(item?._id),\n                    )}\n                    onSelectedItemsChange={(changes) => {\n                      const selectProperty = extractLabels(\n                        changes?.selectedItems,\n                      );\n                      setFieldValue(\"property\", selectProperty);\n                    }}\n                    value={values?.property}\n                    name=\"property\"\n                    onChange={handleChange}\n                    mb={\n                      errors?.property && touched?.property ? undefined : \"10px\"\n                    }\n                    fontWeight=\"500\"\n                    placeholder={\"Assign To Property\"}\n                    borderColor={\n                      errors?.property && touched?.property ? \"red.300\" : null\n                    }\n                  />\n                </Text>\n                <Text mb=\"10px\" color={\"red\"}></Text>\n                <IconButton\n                  mb={6}\n                  onClick={() => setPropertyModelOpen(true)}\n                  fontSize=\"25px\"\n                  icon={<LiaMousePointerSolid />}\n                />\n              </Flex>\n              <Text mb=\"10px\" color={\"red\"} style={{ marginTop: \"-23px\" }}>\n                {\" \"}\n                {errors?.property && touched?.property && errors?.property}\n              </Text>\n            </GridItem>\n          </Grid>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"sm\"\n            disabled={isLoding ? true : false}\n            variant=\"brand\"\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            {isLoding ? <Spinner /> : \"Save\"}\n          </Button>\n\n          <Button\n            sx={{\n              marginLeft: 2,\n              textTransform: \"capitalize\",\n            }}\n            variant=\"outline\"\n            colorScheme=\"red\"\n            size=\"sm\"\n            onClick={() => {\n              formik.resetForm();\n              onClose();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Editopportunityproject;\n","import {\n  Box,\n  Checkbox,\n  Flex,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useMemo, useState } from \"react\";\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from \"react-table\";\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\n\n// Custom components\nimport Card from \"components/card/Card\";\nimport { Link } from \"react-router-dom\";\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\nimport Pagination from \"components/pagination/Pagination\";\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\n\nexport default function PropertyTable(props) {\n  const {\n    columnsData,\n    tableData,\n    title,\n    type,\n    selectedValues,\n    setSelectedValues,\n  } = props;\n\n  const columns = useMemo(() => columnsData, [columnsData]);\n  const data = useMemo(() => tableData, [tableData]);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [gopageValue, setGopageValue] = useState();\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  if (pageOptions?.length < gopageValue) {\n    setGopageValue(pageOptions?.length);\n  }\n\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n\n  const handleCheckboxChange = (event, value) => {\n    if (type === \"multi\") {\n      if (event?.target?.checked) {\n        setSelectedValues((prevSelectedValues = []) => [\n          ...prevSelectedValues,\n          value,\n        ]);\n      } else {\n        setSelectedValues((prevSelectedValues) =>\n          prevSelectedValues?.filter(\n            (selectedValue) => selectedValue !== value,\n          ),\n        );\n      }\n    } else {\n      if (event?.target?.checked) {\n        setSelectedValues(value);\n      } else {\n        setSelectedValues(null);\n      }\n    }\n  };\n\n  return (\n    <Card\n      direction=\"column\"\n      w=\"100%\"\n      px=\"0px\"\n      style={{ border: \"1px solid gray.200\" }}\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}\n    >\n      <Flex px=\"25px\" justify=\"space-between\" mb=\"20px\" align=\"center\">\n        <Text\n          color={textColor}\n          fontSize=\"22px\"\n          fontWeight=\"700\"\n          lineHeight=\"100%\"\n        >\n          {title} (\n          <CountUpComponent key={data?.length} targetNumber={data?.length} />)\n        </Text>\n      </Flex>\n      <Box overflowY={\"auto\"} className=\"table-container-property\">\n        <Table {...getTableProps()} variant=\"simple\" color=\"gray.500\" mb=\"24px\">\n          <Thead zIndex={1}>\n            {headerGroups?.map((headerGroup, index) => (\n              <Tr {...headerGroup?.getHeaderGroupProps()} key={index}>\n                {headerGroup.headers?.map((column, index) => (\n                  <Th\n                    {...column.getHeaderProps(\n                      column?.isSortable !== false &&\n                        column?.getSortByToggleProps(),\n                    )}\n                    pe=\"10px\"\n                    key={index}\n                    borderColor={borderColor}\n                  >\n                    <Flex\n                      align=\"center\"\n                      justifyContent={column?.center ? \"center\" : \"start\"}\n                      fontSize={{ sm: \"14px\", lg: \"16px\" }}\n                      color=\" secondaryGray.900\"\n                    >\n                      <span\n                        style={{\n                          textTransform: \"capitalize\",\n                          marginRight: \"8px\",\n                        }}\n                      >\n                        {column?.render(\"Header\")}\n                      </span>\n\n                      {column?.isSortable !== false && (\n                        <span>\n                          {column?.isSorted ? (\n                            column?.isSortedDesc ? (\n                              <FaSortDown />\n                            ) : (\n                              <FaSortUp />\n                            )\n                          ) : (\n                            <FaSort />\n                          )}\n                        </span>\n                      )}\n                    </Flex>\n                  </Th>\n                ))}\n              </Tr>\n            ))}\n          </Thead>\n          <Tbody {...getTableBodyProps()}>\n            {data?.length === 0 && (\n              <Tr>\n                <Td colSpan={columns?.length}>\n                  <Text\n                    textAlign={\"center\"}\n                    width=\"100%\"\n                    color={textColor}\n                    fontSize=\"sm\"\n                    fontWeight=\"700\"\n                  >\n                    -- No Data Found --\n                  </Text>\n                </Td>\n              </Tr>\n            )}\n            {page?.map((row, index) => {\n              prepareRow(row);\n              return (\n                <Tr {...row?.getRowProps()} key={index}>\n                  {row?.cells?.map((cell, index) => {\n                    let data = \"\";\n                    if (cell?.column?.Header === \"#\") {\n                      data = (\n                        <Flex align=\"center\">\n                          {type === \"multi\" ? (\n                            <Checkbox\n                              colorScheme=\"brandScheme\"\n                              value={selectedValues}\n                              isChecked={selectedValues?.includes(cell?.value)}\n                              onChange={(event) =>\n                                handleCheckboxChange(event, cell?.value)\n                              }\n                              me=\"10px\"\n                            />\n                          ) : (\n                            <Checkbox\n                              colorScheme=\"brandScheme\"\n                              value={selectedValues}\n                              isChecked={selectedValues === cell?.value}\n                              onChange={(event) =>\n                                handleCheckboxChange(event, cell?.value)\n                              }\n                              me=\"10px\"\n                            />\n                          )}\n                          <Text\n                            color={textColor}\n                            fontSize=\"sm\"\n                            fontWeight=\"700\"\n                          >\n                            {cell?.row?.index + 1}\n                          </Text>\n                        </Flex>\n                      );\n                    } else if (cell?.column?.Header === \"Name\") {\n                      data = (\n                        <Text\n                          me=\"10px\"\n                          color={textColor}\n                          fontSize=\"sm\"\n                          fontWeight=\"700\"\n                        >\n                          {cell?.value}\n                        </Text>\n                      );\n                    }\n\n                    return (\n                      <Td\n                        {...cell?.getCellProps()}\n                        key={index}\n                        fontSize={{ sm: \"14px\" }}\n                        minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\n                        borderColor=\"transparent\"\n                      >\n                        {data}\n                      </Td>\n                    );\n                  })}\n                </Tr>\n              );\n            })}\n          </Tbody>\n        </Table>\n      </Box>\n      {data?.length > 5 && (\n        <Pagination\n          gotoPage={gotoPage}\n          gopageValue={gopageValue}\n          setGopageValue={setGopageValue}\n          pageCount={pageCount}\n          canPreviousPage={canPreviousPage}\n          previousPage={previousPage}\n          canNextPage={canNextPage}\n          pageOptions={pageOptions}\n          setPageSize={setPageSize}\n          nextPage={nextPage}\n          pageSize={pageSize}\n          pageIndex={pageIndex}\n        />\n      )}\n    </Card>\n  );\n}\n","import {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { fetchPropertyCustomFiled } from \"../../redux/slices/propertyCustomFiledSlice.js\";\nimport { fetchPropertyData } from \"../../redux/slices/propertySlice.js\";\nimport PropertyTable from \"./Property.js\";\nimport { GiClick } from \"react-icons/gi\";\nimport { useDispatch } from \"react-redux\";\n\nconst MultiPropertyModel = (props) => {\n  const { onClose, isOpen, fieldName, setFieldValue, data, selectedItems } =\n    props;\n  const propertyIndex = selectedItems?.map((item) => item?._id);\n\n  const [selectedValues, setSelectedValues] = useState(propertyIndex);\n  const [columns, setColumns] = useState([]);\n  const [contactData, setContactData] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const dispatch = useDispatch();\n\n  const fetchCustomDataFields = async () => {\n    setIsLoding(true);\n    const result = await dispatch(fetchPropertyCustomFiled());\n    setContactData(result?.payload?.data);\n    const tempTableColumns = [\n      { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n      ...(result?.payload?.data?.[0]?.fields || [])\n        .filter((field) => field?.isTableField === true)\n        .map((field) => ({ Header: field?.label, accessor: field?.name })),\n    ];\n    setColumns(tempTableColumns);\n    setIsLoding(false);\n  };\n  useEffect(() => {\n    setSelectedValues(propertyIndex);\n  }, [selectedItems]);\n\n  useEffect(async () => {\n    await dispatch(fetchPropertyData());\n    fetchCustomDataFields();\n  }, []);\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const uniqueValues = [...new Set(selectedValues)];\n\n  const handleSubmit = async () => {\n    try {\n      setIsLoding(true);\n      setFieldValue(fieldName, uniqueValues);\n      onClose();\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose} size=\"full\" isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Select Property</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {isLoding ? (\n            <Flex justifyContent={\"center\"} alignItems={\"center\"} width=\"100%\">\n              <Spinner />\n            </Flex>\n          ) : (\n            <PropertyTable\n              title={\"Property\"}\n              isLoding={isLoding}\n              allData={data}\n              tableData={data}\n              type=\"multi\"\n              tableCustomFields={\n                contactData?.[0]?.fields?.filter(\n                  (field) => field?.isTableField === true,\n                ) || []\n              }\n              selectedValues={selectedValues}\n              setSelectedValues={setSelectedValues}\n              columnsData={columns ?? []}\n            />\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"brand\"\n            onClick={handleSubmit}\n            disabled={isLoding ? true : false}\n            leftIcon={<GiClick />}\n          >\n            {\" \"}\n            {isLoding ? <Spinner /> : \"Select\"}\n          </Button>\n          <Button onClick={() => onClose()}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default MultiPropertyModel;\n"],"names":["props","_formik$touched","_formik$errors","_formik$touched2","_formik$errors2","_formik$touched3","_formik$errors3","_formik$touched4","_formik$errors4","_formik$touched5","_formik$errors5","_formik$touched6","_formik$errors6","onClose","isOpen","view","setAction","data","userAction","userData","selectedId","fetchData","setUserAction","isLoding","setIsLoding","useState","assignToLeadData","setAssignToLeadData","assignToContactData","setAssignToContactData","contactModelOpen","setContactModel","propertyModelOpen","setPropertyModelOpen","assignToProperyData","setAssignToPropertyData","leadModelOpen","setLeadModel","validationSchema","yup","name","required","requirement","property","category","user","JSON","parse","window","localStorage","getItem","formik","useFormik","initialValues","contact","lead","enableReinitialize","onSubmit","values","AddData","errors","touched","handleBlur","handleChange","setFieldValue","handleSubmit","resetForm","contactData","useSelector","state","_state$contactData","leadData","_state$leadData","useEffect","async","start","date","length","result","_result","getApi","role","_id","_result2","e","console","log","getAllApi","propertyOptionData","propertyApiGet","response","postApi","_response$response","_response$response$da","status","pre","toast","error","message","putApi","updatedUserData","Name","Requirement","updatedDataString","stringify","setItem","_response$response2","_response$response2$d","leadAccess","contactAccess","HasAccess","setValueProperty","map","item","value","label","_jsxs","Modal","isCentered","children","_jsx","ModalOverlay","ModalContent","ModalHeader","justifyContent","display","IconButton","onClick","icon","CloseIcon","ModalBody","ContactModel","fieldName","MultiLeadModel","MultiPropertyModel","selectedItems","filter","_values$property","includes","Grid","templateColumns","gap","GridItem","colSpan","base","FormLabel","ms","fontSize","fontWeight","mb","Text","color","Input","onChange","onBlur","placeholder","borderColor","Boolean","helperText","md","RadioGroup","Stack","direction","Radio","_Fragment","create","Flex","Select","undefined","fullName","leadName","ml","LiaMousePointerSolid","alignItems","w","style","marginBottom","CUIAutoComplete","items","_values$property2","onSelectedItemsChange","changes","selectProperty","marginTop","ModalFooter","Button","size","disabled","variant","type","Spinner","sx","marginLeft","textTransform","colorScheme","PropertyTable","columnsData","tableData","title","selectedValues","setSelectedValues","columns","useMemo","gopageValue","setGopageValue","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageSize","textColor","useColorModeValue","handleCheckboxChange","event","_event$target","_event$target2","target","checked","arguments","prevSelectedValues","selectedValue","Card","px","border","overflowX","sm","lg","justify","align","lineHeight","CountUpComponent","targetNumber","Box","overflowY","className","Table","Thead","zIndex","headerGroup","index","_headerGroup$headers","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","isSortable","getSortByToggleProps","pe","center","marginRight","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","textAlign","width","row","_row$cells","getRowProps","cells","cell","_cell$column","_cell$column2","_cell$row","Header","Checkbox","isChecked","me","getCellProps","minW","Pagination","_contactData$","_contactData$$fields","propertyIndex","setColumns","setContactData","dispatch","useDispatch","fetchPropertyData","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","fetchPropertyCustomFiled","payload","tempTableColumns","accessor","fields","field","isTableField","fetchCustomDataFields","uniqueValues","Set","ModalCloseButton","allData","tableCustomFields","leftIcon","GiClick"],"sourceRoot":""}